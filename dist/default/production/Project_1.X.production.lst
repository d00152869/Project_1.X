

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Mar 01 12:44:07 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           	psect	idataCOMRAM
    37  000E1E                     __pidataCOMRAM:
    38                           	opt stack 0
    39                           
    40                           ;initializer for _problem
    41  000E1E  B2                 	db	low STR_1
    42  000E1F  06                 	db	high STR_1
    43                           
    44                           ;initializer for _startup
    45  000E20  A6                 	db	low STR_2
    46  000E21  06                 	db	high STR_2
    47                           
    48                           ;initializer for main@F4350
    49  000E22  32                 	db	50
    50  000E23  32                 	db	50
    51                           
    52                           	psect	smallconst
    53  000600                     __psmallconst:
    54                           	opt stack 0
    55  000600  00                 	db	0
    56  000601                     _lcd_init:
    57                           	opt stack 0
    58  000601  33                 	db	51
    59  000602  32                 	db	50
    60  000603  2C                 	db	44
    61  000604  06                 	db	6
    62  000605  0C                 	db	12
    63  000606                     __end_of_lcd_init:
    64                           	opt stack 0
    65  000606                     _msg_ary:
    66                           	opt stack 0
    67  000606  44                 	db	68
    68  000607  65                 	db	101
    69  000608  73                 	db	115
    70  000609  69                 	db	105
    71  00060A  72                 	db	114
    72  00060B  65                 	db	101
    73  00060C  64                 	db	100
    74  00060D  3E                 	db	62
    75  00060E  20                 	db	32
    76  00060F  00                 	db	0
    77  000610  00                 	db	0
    78  000611  00                 	db	0
    79  000612  00                 	db	0
    80  000613  00                 	db	0
    81  000614  00                 	db	0
    82  000615  00                 	db	0
    83  000616  41                 	db	65
    84  000617  63                 	db	99
    85  000618  74                 	db	116
    86  000619  75                 	db	117
    87  00061A  61                 	db	97
    88  00061B  6C                 	db	108
    89  00061C  3E                 	db	62
    90  00061D  20                 	db	32
    91  00061E  00                 	db	0
    92  00061F  00                 	db	0
    93  000620  00                 	db	0
    94  000621  00                 	db	0
    95  000622  00                 	db	0
    96  000623  00                 	db	0
    97  000624  00                 	db	0
    98  000625  00                 	db	0
    99  000626  44                 	db	68
   100  000627  65                 	db	101
   101  000628  73                 	db	115
   102  000629  69                 	db	105
   103  00062A  72                 	db	114
   104  00062B  65                 	db	101
   105  00062C  64                 	db	100
   106  00062D  3E                 	db	62
   107  00062E  20                 	db	32
   108  00062F  00                 	db	0
   109  000630  00                 	db	0
   110  000631  00                 	db	0
   111  000632  00                 	db	0
   112  000633  00                 	db	0
   113  000634  00                 	db	0
   114  000635  00                 	db	0
   115  000636  41                 	db	65
   116  000637  44                 	db	68
   117  000638  43                 	db	67
   118  000639  52                 	db	82
   119  00063A  65                 	db	101
   120  00063B  61                 	db	97
   121  00063C  64                 	db	100
   122  00063D  3E                 	db	62
   123  00063E  20                 	db	32
   124  00063F  00                 	db	0
   125  000640  00                 	db	0
   126  000641  00                 	db	0
   127  000642  00                 	db	0
   128  000643  00                 	db	0
   129  000644  00                 	db	0
   130  000645  00                 	db	0
   131  000646  00                 	db	0
   132  000647  00                 	db	0
   133  000648  00                 	db	0
   134  000649  00                 	db	0
   135  00064A  00                 	db	0
   136  00064B  00                 	db	0
   137  00064C  00                 	db	0
   138  00064D  00                 	db	0
   139  00064E  00                 	db	0
   140  00064F  00                 	db	0
   141  000650  00                 	db	0
   142  000651  00                 	db	0
   143  000652  00                 	db	0
   144  000653  00                 	db	0
   145  000654  00                 	db	0
   146  000655  00                 	db	0
   147  000656  00                 	db	0
   148  000657  00                 	db	0
   149  000658  00                 	db	0
   150  000659  00                 	db	0
   151  00065A  00                 	db	0
   152  00065B  00                 	db	0
   153  00065C  00                 	db	0
   154  00065D  00                 	db	0
   155  00065E  00                 	db	0
   156  00065F  00                 	db	0
   157  000660  00                 	db	0
   158  000661  00                 	db	0
   159  000662  00                 	db	0
   160  000663  00                 	db	0
   161  000664  00                 	db	0
   162  000665  00                 	db	0
   163  000666  00                 	db	0
   164  000667  00                 	db	0
   165  000668  00                 	db	0
   166  000669  00                 	db	0
   167  00066A  00                 	db	0
   168  00066B  00                 	db	0
   169  00066C  00                 	db	0
   170  00066D  00                 	db	0
   171  00066E  00                 	db	0
   172  00066F  00                 	db	0
   173  000670  00                 	db	0
   174  000671  00                 	db	0
   175  000672  00                 	db	0
   176  000673  00                 	db	0
   177  000674  00                 	db	0
   178  000675  00                 	db	0
   179  000676  00                 	db	0
   180  000677  00                 	db	0
   181  000678  00                 	db	0
   182  000679  00                 	db	0
   183  00067A  00                 	db	0
   184  00067B  00                 	db	0
   185  00067C  00                 	db	0
   186  00067D  00                 	db	0
   187  00067E  00                 	db	0
   188  00067F  00                 	db	0
   189  000680  00                 	db	0
   190  000681  00                 	db	0
   191  000682  00                 	db	0
   192  000683  00                 	db	0
   193  000684  00                 	db	0
   194  000685  00                 	db	0
   195  000686  00                 	db	0
   196  000687  00                 	db	0
   197  000688  00                 	db	0
   198  000689  00                 	db	0
   199  00068A  00                 	db	0
   200  00068B  00                 	db	0
   201  00068C  00                 	db	0
   202  00068D  00                 	db	0
   203  00068E  00                 	db	0
   204  00068F  00                 	db	0
   205  000690  00                 	db	0
   206  000691  00                 	db	0
   207  000692  00                 	db	0
   208  000693  00                 	db	0
   209  000694  00                 	db	0
   210  000695  00                 	db	0
   211  000696  00                 	db	0
   212  000697  00                 	db	0
   213  000698  00                 	db	0
   214  000699  00                 	db	0
   215  00069A  00                 	db	0
   216  00069B  00                 	db	0
   217  00069C  00                 	db	0
   218  00069D  00                 	db	0
   219  00069E  00                 	db	0
   220  00069F  00                 	db	0
   221  0006A0  00                 	db	0
   222  0006A1  00                 	db	0
   223  0006A2  00                 	db	0
   224  0006A3  00                 	db	0
   225  0006A4  00                 	db	0
   226  0006A5  00                 	db	0
   227  0006A6                     __end_of_msg_ary:
   228                           	opt stack 0
   229  0000                     _ADCON0	set	4034
   230  0000                     _ADCON0bits	set	4034
   231  0000                     _ADCON1	set	4033
   232  0000                     _ADRESH	set	4036
   233  0000                     _INTCONbits	set	4082
   234  0000                     _LATC	set	3979
   235  0000                     _LATDbits	set	3980
   236  0000                     _PORTB	set	3969
   237  0000                     _PORTCbits	set	3970
   238  0000                     _T0CON	set	4053
   239  0000                     _T0CONbits	set	4053
   240  0000                     _TMR0H	set	4055
   241  0000                     _TMR0L	set	4054
   242  0000                     _TRISA	set	3986
   243  0000                     _TRISB	set	3987
   244  0000                     _TRISC	set	3988
   245  0000                     _TRISD	set	3989
   246  0006A6                     STR_2:
   247  0006A6  52                 	db	82	;'R'
   248  0006A7  65                 	db	101	;'e'
   249  0006A8  61                 	db	97	;'a'
   250  0006A9  64                 	db	100	;'d'
   251  0006AA  79                 	db	121	;'y'
   252  0006AB  20                 	db	32
   253  0006AC  74                 	db	116	;'t'
   254  0006AD  6F                 	db	111	;'o'
   255  0006AE  20                 	db	32
   256  0006AF  67                 	db	103	;'g'
   257  0006B0  6F                 	db	111	;'o'
   258  0006B1  00                 	db	0
   259  0006B2                     STR_1:
   260  0006B2  50                 	db	80	;'P'
   261  0006B3  72                 	db	114	;'r'
   262  0006B4  6F                 	db	111	;'o'
   263  0006B5  62                 	db	98	;'b'
   264  0006B6  6C                 	db	108	;'l'
   265  0006B7  65                 	db	101	;'e'
   266  0006B8  6D                 	db	109	;'m'
   267  0006B9  00                 	db	0
   268                           
   269                           ; #config settings
   270  0006BA  00                 	db	0	; dummy byte at the end
   271  0000                     
   272                           	psect	cinit
   273  000CD0                     __pcinit:
   274                           	opt stack 0
   275  000CD0                     start_initialization:
   276                           	opt stack 0
   277  000CD0                     __initialization:
   278                           	opt stack 0
   279                           
   280                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   281  000CD0  6A32               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   282                           
   283                           ; Clear objects allocated to COMRAM (6 bytes)
   284  000CD2  6A2B               	clrf	(__pbssCOMRAM+5)& (0+255),c
   285  000CD4  6A2A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   286  000CD6  6A29               	clrf	(__pbssCOMRAM+3)& (0+255),c
   287  000CD8  6A28               	clrf	(__pbssCOMRAM+2)& (0+255),c
   288  000CDA  6A27               	clrf	(__pbssCOMRAM+1)& (0+255),c
   289  000CDC  6A26               	clrf	__pbssCOMRAM& (0+255),c
   290                           
   291                           ; Initialize objects allocated to COMRAM (6 bytes)
   292                           ; load TBLPTR registers with __pidataCOMRAM
   293  000CDE  0E1E               	movlw	low __pidataCOMRAM
   294  000CE0  6EF6               	movwf	tblptrl,c
   295  000CE2  0E0E               	movlw	high __pidataCOMRAM
   296  000CE4  6EF7               	movwf	tblptrh,c
   297  000CE6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   298  000CE8  6EF8               	movwf	tblptru,c
   299  000CEA  EE00  F02C         	lfsr	0,__pdataCOMRAM
   300  000CEE  EE10 F006          	lfsr	1,6
   301  000CF2                     copy_data0:
   302  000CF2  0009               	tblrd		*+
   303  000CF4  CFF5 FFEE          	movff	tablat,postinc0
   304  000CF8  50E5               	movf	postdec1,w,c
   305  000CFA  50E1               	movf	fsr1l,w,c
   306  000CFC  E1FA               	bnz	copy_data0
   307  000CFE                     end_of_initialization:
   308                           	opt stack 0
   309  000CFE                     __end_of__initialization:
   310                           	opt stack 0
   311  000CFE  9033               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   312  000D00  9233               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   313  000D02  0E00               	movlw	low (__Lmediumconst shr (0+16))
   314  000D04  6EF8               	movwf	tblptru,c
   315  000D06  0100               	movlb	0
   316  000D08  EF5E  F003         	goto	_main	;jump to C main() function
   317                           tblptru	equ	0xFF8
   318                           tblptrh	equ	0xFF7
   319                           tblptrl	equ	0xFF6
   320                           tablat	equ	0xFF5
   321                           postinc0	equ	0xFEE
   322                           postdec1	equ	0xFE5
   323                           fsr1l	equ	0xFE1
   324                           
   325                           	psect	bitbssCOMRAM
   326  000190                     __pbitbssCOMRAM:
   327                           	opt stack 0
   328  000190                     _Tick_E:
   329                           	opt stack 0
   330  000190                     	ds	1
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           postdec1	equ	0xFE5
   337                           fsr1l	equ	0xFE1
   338                           
   339                           	psect	bssCOMRAM
   340  000026                     __pbssCOMRAM:
   341                           	opt stack 0
   342  000026                     Find_Button_Press@Button_Count:
   343                           	opt stack 0
   344  000026                     	ds	1
   345  000027                     Find_Button_Press@Button_State:
   346                           	opt stack 0
   347  000027                     	ds	1
   348  000028                     Find_Button_Press@Temp_Press:
   349                           	opt stack 0
   350  000028                     	ds	1
   351  000029                     _Button_Press:
   352                           	opt stack 0
   353  000029                     	ds	1
   354  00002A                     _count:
   355                           	opt stack 0
   356  00002A                     	ds	1
   357  00002B                     _count_hb:
   358                           	opt stack 0
   359  00002B                     	ds	1
   360                           tblptru	equ	0xFF8
   361                           tblptrh	equ	0xFF7
   362                           tblptrl	equ	0xFF6
   363                           tablat	equ	0xFF5
   364                           postinc0	equ	0xFEE
   365                           postdec1	equ	0xFE5
   366                           fsr1l	equ	0xFE1
   367                           
   368                           	psect	dataCOMRAM
   369  00002C                     __pdataCOMRAM:
   370                           	opt stack 0
   371  00002C                     _problem:
   372                           	opt stack 0
   373  00002C                     	ds	2
   374  00002E                     _startup:
   375                           	opt stack 0
   376  00002E                     	ds	2
   377  000030                     main@F4350:
   378                           	opt stack 0
   379  000030                     	ds	2
   380                           tblptru	equ	0xFF8
   381                           tblptrh	equ	0xFF7
   382                           tblptrl	equ	0xFF6
   383                           tablat	equ	0xFF5
   384                           postinc0	equ	0xFEE
   385                           postdec1	equ	0xFE5
   386                           fsr1l	equ	0xFE1
   387                           
   388                           	psect	cstackCOMRAM
   389  000001                     __pcstackCOMRAM:
   390                           	opt stack 0
   391  000001                     i2WriteTimer0@timer0:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x0
   395  000001                     	ds	2
   396  000003                     i2WriteTimer0@timer:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x2
   400  000003                     	ds	2
   401  000005                     ??_myIsr:
   402                           
   403                           ; 0 bytes @ 0x4
   404  000005                     	ds	15
   405  000014                     ??_delay_s:
   406  000014                     ?___awdiv:
   407                           	opt stack 0
   408  000014                     ?___awmod:
   409                           	opt stack 0
   410  000014                     lcd_raw_send@RS:
   411                           	opt stack 0
   412  000014                     OpenTimer0@config:
   413                           	opt stack 0
   414  000014                     WriteTimer0@timer0:
   415                           	opt stack 0
   416  000014                     ___awdiv@dividend:
   417                           	opt stack 0
   418  000014                     ___awmod@dividend:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x13
   422  000014                     	ds	1
   423  000015                     ??_lcd_raw_send:
   424  000015                     delay_s@secs:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x14
   428  000015                     	ds	1
   429  000016                     delay_s@j:
   430                           	opt stack 0
   431  000016                     WriteTimer0@timer:
   432                           	opt stack 0
   433  000016                     ___awdiv@divisor:
   434                           	opt stack 0
   435  000016                     ___awmod@divisor:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x15
   439  000016                     	ds	1
   440  000017                     lcd_raw_send@in:
   441                           	opt stack 0
   442  000017                     delay_s@i:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x16
   446  000017                     	ds	1
   447  000018                     lcd_print_ch@in:
   448                           	opt stack 0
   449  000018                     lcd_command@in:
   450                           	opt stack 0
   451  000018                     ___awdiv@counter:
   452                           	opt stack 0
   453  000018                     ___awmod@counter:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0x17
   457  000018                     	ds	1
   458  000019                     ??_lcd_clear:
   459  000019                     lcd_cursor@y:
   460                           	opt stack 0
   461  000019                     ___awdiv@sign:
   462                           	opt stack 0
   463  000019                     ___awmod@sign:
   464                           	opt stack 0
   465  000019                     lcd_print@mess:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x18
   469  000019                     	ds	1
   470  00001A                     ??_lcd_start:
   471  00001A                     lcd_cursor@x:
   472                           	opt stack 0
   473  00001A                     ___awdiv@quotient:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x19
   477  00001A                     	ds	1
   478  00001B                     ??_lcd_print:
   479  00001B                     lcd_start@i:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x1A
   483  00001B                     	ds	1
   484  00001C                     lcd_display_value@hunds:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x1B
   488  00001C                     	ds	1
   489  00001D                     lcd_print@i:
   490                           	opt stack 0
   491  00001D                     lcd_display_value@tens:
   492                           	opt stack 0
   493                           
   494                           ; 1 bytes @ 0x1C
   495  00001D                     	ds	1
   496  00001E                     ??_Window:
   497  00001E                     lcd_display_value@units:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x1D
   501  00001E                     	ds	1
   502  00001F                     lcd_display_value@value:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x1E
   506  00001F                     	ds	1
   507  000020                     Window@num:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x1F
   511  000020                     	ds	1
   512  000021                     ??_main:
   513                           
   514                           ; 0 bytes @ 0x20
   515  000021                     	ds	1
   516  000022                     main@ADCREAD:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x21
   520  000022                     	ds	1
   521  000023                     main@my_mch_state:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x22
   525  000023                     	ds	1
   526  000024                     main@motor1:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x23
   530  000024                     	ds	2
   531                           tblptru	equ	0xFF8
   532                           tblptrh	equ	0xFF7
   533                           tblptrl	equ	0xFF6
   534                           tablat	equ	0xFF5
   535                           postinc0	equ	0xFEE
   536                           postdec1	equ	0xFE5
   537                           fsr1l	equ	0xFE1
   538                           
   539 ;;
   540 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   541 ;;
   542 ;; *************** function _main *****************
   543 ;; Defined at:
   544 ;;		line 91 in file "Menu_System.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;  motor1          2   35[COMRAM] struct .
   549 ;;  my_mch_state    1   34[COMRAM] enum E4340
   550 ;;  ADCREAD         1   33[COMRAM] unsigned char 
   551 ;; Return value:  Size  Location     Type
   552 ;;		None               void
   553 ;; Registers used:
   554 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   560 ;;      Params:         0       0       0       0       0       0       0
   561 ;;      Locals:         4       0       0       0       0       0       0
   562 ;;      Temps:          1       0       0       0       0       0       0
   563 ;;      Totals:         5       0       0       0       0       0       0
   564 ;;Total ram usage:        5 bytes
   565 ;; Hardware stack levels required when called:    6
   566 ;; This function calls:
   567 ;;		_Initial
   568 ;;		_Window
   569 ;;		_delay_s
   570 ;;		_lcd_clear
   571 ;;		_lcd_cursor
   572 ;;		_lcd_display_value
   573 ;;		_lcd_print
   574 ;;		_lcd_start
   575 ;; This function is called by:
   576 ;;		Startup code after reset
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text0
   581  0006BC                     __ptext0:
   582                           	opt stack 0
   583  0006BC                     _main:
   584                           	opt stack 25
   585                           
   586                           ;Menu_System.c: 93: typedef enum {MENU_0 = 0,MENU_1} states;
   587                           ;Menu_System.c: 95: states my_mch_state = MENU_0;
   588                           
   589                           ;incstack = 0
   590  0006BC  0E00               	movlw	0
   591  0006BE  6E23               	movwf	main@my_mch_state,c
   592                           
   593                           ;Menu_System.c: 97: typedef struct{
   594                           ;Menu_System.c: 98: unsigned char desired;
   595                           ;Menu_System.c: 99: unsigned char actual;
   596                           ;Menu_System.c: 100: } motor;
   597                           ;Menu_System.c: 101: motor motor1 = {50,50};
   598  0006C0  C030  F024         	movff	main@F4350,main@motor1
   599  0006C4  C031  F025         	movff	main@F4350+1,main@motor1+1
   600                           
   601                           ;Menu_System.c: 102: unsigned char ADCREAD = 0;
   602  0006C8  0E00               	movlw	0
   603  0006CA  6E22               	movwf	main@ADCREAD,c
   604                           
   605                           ;Menu_System.c: 103: Initial();
   606  0006CC  EC86  F006         	call	_Initial	;wreg free
   607                           
   608                           ;Menu_System.c: 104: lcd_start ();
   609  0006D0  EC47  F006         	call	_lcd_start	;wreg free
   610                           
   611                           ;Menu_System.c: 105: lcd_cursor ( 0, 0 ) ;
   612  0006D4  0E00               	movlw	0
   613  0006D6  6E19               	movwf	lcd_cursor@y,c
   614  0006D8  0E00               	movlw	0
   615  0006DA  ECE2  F006         	call	_lcd_cursor
   616                           
   617                           ;Menu_System.c: 106: lcd_print ( startup ) ;
   618  0006DE  C02E  F019         	movff	_startup,lcd_print@mess
   619  0006E2  C02F  F01A         	movff	_startup+1,lcd_print@mess+1
   620  0006E6  EC1D  F006         	call	_lcd_print	;wreg free
   621                           
   622                           ;Menu_System.c: 108: delay_s(2);
   623  0006EA  0E02               	movlw	2
   624  0006EC  ECA1  F006         	call	_delay_s
   625                           
   626                           ;Menu_System.c: 110: Window(0);
   627  0006F0  0E00               	movlw	0
   628  0006F2  ECEA  F005         	call	_Window
   629                           
   630                           ;Menu_System.c: 111: lcd_cursor ( 10, 0 ) ;
   631  0006F6  0E00               	movlw	0
   632  0006F8  6E19               	movwf	lcd_cursor@y,c
   633  0006FA  0E0A               	movlw	10
   634  0006FC  ECE2  F006         	call	_lcd_cursor
   635                           
   636                           ;Menu_System.c: 112: lcd_display_value(motor1.desired);
   637  000700  5024               	movf	main@motor1,w,c
   638  000702  ECEC  F004         	call	_lcd_display_value
   639                           
   640                           ;Menu_System.c: 113: lcd_cursor ( 10, 1 ) ;
   641  000706  0E01               	movlw	1
   642  000708  6E19               	movwf	lcd_cursor@y,c
   643  00070A  0E0A               	movlw	10
   644  00070C  ECE2  F006         	call	_lcd_cursor
   645                           
   646                           ;Menu_System.c: 114: lcd_display_value(motor1.actual);
   647  000710  5025               	movf	main@motor1+1,w,c
   648  000712  ECEC  F004         	call	_lcd_display_value
   649  000716                     l1445:
   650  000716  5029               	movf	_Button_Press,w,c
   651  000718  B4D8               	btfsc	status,2,c
   652  00071A  B032               	btfsc	_Tick_E/(0+8),_Tick_E& (0+7),c
   653  00071C  D019               	goto	l1463
   654  00071E  D7FB               	goto	l1445
   655  000720                     l149:
   656                           
   657                           ;Menu_System.c: 126: if (Button_Press.B0){
   658  000720  A029               	btfss	_Button_Press,0,c
   659  000722  D070               	goto	l1491
   660                           
   661                           ;Menu_System.c: 127: my_mch_state = MENU_1;
   662  000724  0E01               	movlw	1
   663  000726  6E23               	movwf	main@my_mch_state,c
   664                           
   665                           ;Menu_System.c: 128: Window(1);
   666  000728  0E01               	movlw	1
   667  00072A  ECEA  F005         	call	_Window
   668                           
   669                           ;Menu_System.c: 129: }
   670                           ;Menu_System.c: 131: break;
   671  00072E  D06A               	goto	l1491
   672  000730                     l152:
   673                           
   674                           ;Menu_System.c: 133: if (Button_Press.B0){
   675  000730  A029               	btfss	_Button_Press,0,c
   676  000732  D068               	goto	l1491
   677                           
   678                           ;Menu_System.c: 134: my_mch_state = MENU_0;
   679  000734  0E00               	movlw	0
   680  000736  6E23               	movwf	main@my_mch_state,c
   681                           
   682                           ;Menu_System.c: 135: Window(0);
   683  000738  0E00               	movlw	0
   684  00073A  ECEA  F005         	call	_Window
   685                           
   686                           ;Menu_System.c: 136: }
   687                           ;Menu_System.c: 137: break;
   688  00073E  D062               	goto	l1491
   689  000740                     l154:
   690                           
   691                           ;Menu_System.c: 139: if (Button_Press.B0){
   692  000740  A029               	btfss	_Button_Press,0,c
   693  000742  D060               	goto	l1491
   694                           
   695                           ;Menu_System.c: 140: my_mch_state = MENU_0;
   696  000744  0E00               	movlw	0
   697  000746  6E23               	movwf	main@my_mch_state,c
   698                           
   699                           ;Menu_System.c: 141: Window(0);
   700  000748  0E00               	movlw	0
   701  00074A  ECEA  F005         	call	_Window
   702                           
   703                           ;Menu_System.c: 144: }
   704                           
   705                           ;Menu_System.c: 142: }
   706                           ;Menu_System.c: 143: break;
   707  00074E  D05A               	goto	l1491
   708  000750                     l1463:
   709  000750  5023               	movf	main@my_mch_state,w,c
   710                           
   711                           ; Switch size 1, requested type "space"
   712                           ; Number of cases is 2, Range of values is 0 to 1
   713                           ; switch strategies available:
   714                           ; Name         Instructions Cycles
   715                           ; simple_byte            7     4 (average)
   716                           ;	Chosen strategy is simple_byte
   717  000752  0A00               	xorlw	0	; case 0
   718  000754  B4D8               	btfsc	status,2,c
   719  000756  D7E4               	goto	l149
   720  000758  0A01               	xorlw	1	; case 1
   721  00075A  B4D8               	btfsc	status,2,c
   722  00075C  D7E9               	goto	l152
   723  00075E  D7F0               	goto	l154
   724  000760                     l1465:
   725                           
   726                           ;Menu_System.c: 150: lcd_cursor ( 10, 0 ) ;
   727  000760  0E00               	movlw	0
   728  000762  6E19               	movwf	lcd_cursor@y,c
   729  000764  0E0A               	movlw	10
   730  000766  ECE2  F006         	call	_lcd_cursor
   731                           
   732                           ;Menu_System.c: 151: lcd_display_value(motor1.desired);
   733  00076A  5024               	movf	main@motor1,w,c
   734  00076C  ECEC  F004         	call	_lcd_display_value
   735                           
   736                           ;Menu_System.c: 152: lcd_cursor ( 10, 1 ) ;
   737  000770  0E01               	movlw	1
   738  000772  6E19               	movwf	lcd_cursor@y,c
   739  000774  0E0A               	movlw	10
   740  000776  ECE2  F006         	call	_lcd_cursor
   741                           
   742                           ;Menu_System.c: 153: lcd_display_value(motor1.actual);
   743  00077A  5025               	movf	main@motor1+1,w,c
   744  00077C  ECEC  F004         	call	_lcd_display_value
   745                           
   746                           ;Menu_System.c: 154: LATC = PORTCbits.RC7 << 7 | 0x1 ;
   747  000780  AE82               	btfss	3970,7,c	;volatile
   748  000782  D003               	goto	u790
   749  000784  0E80               	movlw	128
   750  000786  6E21               	movwf	??_main& (0+255),c
   751  000788  D001               	goto	u805
   752  00078A                     u790:
   753  00078A  6A21               	clrf	??_main& (0+255),c
   754  00078C                     u805:
   755  00078C  5021               	movf	??_main,w,c
   756  00078E  0901               	iorlw	1
   757  000790  D037               	goto	L2
   758  000792                     l159:
   759                           
   760                           ;Menu_System.c: 159: if (Button_Press.B1)
   761  000792  B229               	btfsc	_Button_Press,1,c
   762                           
   763                           ;Menu_System.c: 160: motor1.desired = ADCREAD;
   764  000794  C022  F024         	movff	main@ADCREAD,main@motor1
   765  000798                     l161:
   766  000798  B2C2               	btfsc	4034,1,c	;volatile
   767  00079A  D7FE               	goto	l161
   768                           
   769                           ;Menu_System.c: 163: ADCREAD = ADRESH >> 1;
   770  00079C  90D8               	bcf	status,0,c
   771  00079E  30C4               	rrcf	4036,w,c	;volatile
   772  0007A0  6E22               	movwf	main@ADCREAD,c
   773                           
   774                           ;Menu_System.c: 164: ADCON0bits.GO_nDONE = 1;
   775  0007A2  82C2               	bsf	4034,1,c	;volatile
   776                           
   777                           ;Menu_System.c: 166: lcd_cursor ( 10, 0 ) ;
   778  0007A4  0E00               	movlw	0
   779  0007A6  6E19               	movwf	lcd_cursor@y,c
   780  0007A8  0E0A               	movlw	10
   781  0007AA  ECE2  F006         	call	_lcd_cursor
   782                           
   783                           ;Menu_System.c: 167: lcd_display_value(motor1.desired);
   784  0007AE  5024               	movf	main@motor1,w,c
   785  0007B0  ECEC  F004         	call	_lcd_display_value
   786                           
   787                           ;Menu_System.c: 168: lcd_cursor ( 10, 1 ) ;
   788  0007B4  0E01               	movlw	1
   789  0007B6  6E19               	movwf	lcd_cursor@y,c
   790  0007B8  0E0A               	movlw	10
   791  0007BA  ECE2  F006         	call	_lcd_cursor
   792                           
   793                           ;Menu_System.c: 169: lcd_display_value(ADCREAD);
   794  0007BE  5022               	movf	main@ADCREAD,w,c
   795  0007C0  ECEC  F004         	call	_lcd_display_value
   796                           
   797                           ;Menu_System.c: 170: LATC= PORTCbits.RC7 << 7 | 0x2;
   798  0007C4  AE82               	btfss	3970,7,c	;volatile
   799  0007C6  D003               	goto	u830
   800  0007C8  0E80               	movlw	128
   801  0007CA  6E21               	movwf	??_main& (0+255),c
   802  0007CC  D001               	goto	u845
   803  0007CE                     u830:
   804  0007CE  6A21               	clrf	??_main& (0+255),c
   805  0007D0                     u845:
   806  0007D0  5021               	movf	??_main,w,c
   807  0007D2  0902               	iorlw	2
   808  0007D4  D015               	goto	L2
   809  0007D6                     l1483:
   810                           
   811                           ;Menu_System.c: 174: lcd_cursor ( 0, 0 ) ;
   812  0007D6  0E00               	movlw	0
   813  0007D8  6E19               	movwf	lcd_cursor@y,c
   814  0007DA  0E00               	movlw	0
   815  0007DC  ECE2  F006         	call	_lcd_cursor
   816                           
   817                           ;Menu_System.c: 175: lcd_clear();
   818  0007E0  ECBB  F006         	call	_lcd_clear	;wreg free
   819                           
   820                           ;Menu_System.c: 176: lcd_print ( problem );
   821  0007E4  C02C  F019         	movff	_problem,lcd_print@mess
   822  0007E8  C02D  F01A         	movff	_problem+1,lcd_print@mess+1
   823  0007EC  EC1D  F006         	call	_lcd_print	;wreg free
   824                           
   825                           ;Menu_System.c: 177: LATC = PORTCbits.RC7 << 7 | 0x5;
   826  0007F0  AE82               	btfss	3970,7,c	;volatile
   827  0007F2  D003               	goto	u850
   828  0007F4  0E80               	movlw	128
   829  0007F6  6E21               	movwf	??_main& (0+255),c
   830  0007F8  D001               	goto	u865
   831  0007FA                     u850:
   832  0007FA  6A21               	clrf	??_main& (0+255),c
   833  0007FC                     u865:
   834  0007FC  5021               	movf	??_main,w,c
   835  0007FE  0905               	iorlw	5
   836  000800                     L2:
   837  000800  6E8B               	movwf	3979,c	;volatile
   838                           
   839                           ;Menu_System.c: 179: }
   840                           
   841                           ;Menu_System.c: 178: break;
   842  000802  D008               	goto	l1493
   843  000804                     l1491:
   844  000804  5023               	movf	main@my_mch_state,w,c
   845                           
   846                           ; Switch size 1, requested type "space"
   847                           ; Number of cases is 2, Range of values is 0 to 1
   848                           ; switch strategies available:
   849                           ; Name         Instructions Cycles
   850                           ; simple_byte            7     4 (average)
   851                           ;	Chosen strategy is simple_byte
   852  000806  0A00               	xorlw	0	; case 0
   853  000808  B4D8               	btfsc	status,2,c
   854  00080A  D7AA               	goto	l1465
   855  00080C  0A01               	xorlw	1	; case 1
   856  00080E  B4D8               	btfsc	status,2,c
   857  000810  D7C0               	goto	l159
   858  000812  D7E1               	goto	l1483
   859  000814                     l1493:
   860                           
   861                           ;Menu_System.c: 181: Button_Press.Full = 0;
   862  000814  0E00               	movlw	0
   863  000816  6E29               	movwf	_Button_Press,c
   864                           
   865                           ;Menu_System.c: 183: Tick_E = 0;
   866  000818  9032               	bcf	_Tick_E/(0+8),_Tick_E& (0+7),c
   867  00081A  D77D               	goto	l1445
   868  00081C                     __end_of_main:
   869                           	opt stack 0
   870                           tblptru	equ	0xFF8
   871                           tblptrh	equ	0xFF7
   872                           tblptrl	equ	0xFF6
   873                           tablat	equ	0xFF5
   874                           postinc0	equ	0xFEE
   875                           postdec1	equ	0xFE5
   876                           fsr1l	equ	0xFE1
   877                           status	equ	0xFD8
   878                           
   879 ;; *************** function _lcd_start *****************
   880 ;; Defined at:
   881 ;;		line 189 in file "../../LCD_library/lcdlib_2016.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  i               1   26[COMRAM] unsigned char 
   886 ;;  t               1    0        unsigned char 
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      unsigned char 
   889 ;; Registers used:
   890 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   896 ;;      Params:         0       0       0       0       0       0       0
   897 ;;      Locals:         1       0       0       0       0       0       0
   898 ;;      Temps:          1       0       0       0       0       0       0
   899 ;;      Totals:         2       0       0       0       0       0       0
   900 ;;Total ram usage:        2 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; Hardware stack levels required when called:    5
   903 ;; This function calls:
   904 ;;		_lcd_clear
   905 ;;		_lcd_command
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           	psect	text1
   912  000C8E                     __ptext1:
   913                           	opt stack 0
   914  000C8E                     _lcd_start:
   915                           	opt stack 25
   916                           
   917                           ;lcdlib_2016.c: 191: unsigned char i, t ;
   918                           ;lcdlib_2016.c: 197: TRISD = (TRISD & 0xc0) ;
   919                           
   920                           ;incstack = 0
   921  000C8E  5095               	movf	3989,w,c	;volatile
   922  000C90  0BC0               	andlw	192
   923  000C92  6E95               	movwf	3989,c	;volatile
   924                           
   925                           ;lcdlib_2016.c: 202: _delay((unsigned long)((35)*(19660800/4000.0)));
   926  000C94  0EE0               	movlw	224
   927  000C96  6E1A               	movwf	??_lcd_start& (0+255),c
   928  000C98  0E6A               	movlw	106
   929  000C9A                     u877:
   930  000C9A  2EE8               	decfsz	wreg,f,c
   931  000C9C  D7FE               	goto	u877
   932  000C9E  2E1A               	decfsz	??_lcd_start& (0+255),f,c
   933  000CA0  D7FC               	goto	u877
   934                           
   935                           ;lcdlib_2016.c: 203: for ( i=0 ; i < 5 ; i++ )
   936  000CA2  0E00               	movlw	0
   937  000CA4  6E1B               	movwf	lcd_start@i,c
   938  000CA6                     l1335:
   939  000CA6  0E04               	movlw	4
   940  000CA8  641B               	cpfsgt	lcd_start@i,c
   941  000CAA  D001               	goto	l1339
   942  000CAC  D00E               	goto	l1345
   943  000CAE                     l1339:
   944                           
   945                           ;lcdlib_2016.c: 204: {
   946                           ;lcdlib_2016.c: 205: lcd_command ( lcd_init [i] ) ;
   947  000CAE  501B               	movf	lcd_start@i,w,c
   948  000CB0  0D01               	mullw	1
   949  000CB2  0E01               	movlw	low _lcd_init
   950  000CB4  24F3               	addwf	prodl,w,c
   951  000CB6  6EF6               	movwf	tblptrl,c
   952  000CB8  0E06               	movlw	high _lcd_init
   953  000CBA  20F4               	addwfc	prodh,w,c
   954  000CBC  6EF7               	movwf	tblptrh,c
   955  000CBE                     	if	0	;There are less than 3 active tblptr bytes
   956  000CBE                     	endif
   957  000CBE  0008               	tblrd		*
   958  000CC0  50F5               	movf	tablat,w,c
   959  000CC2  EC08  F007         	call	_lcd_command
   960  000CC6  2A1B               	incf	lcd_start@i,f,c
   961  000CC8  D7EE               	goto	l1335
   962  000CCA                     l1345:
   963                           
   964                           ;lcdlib_2016.c: 206: }
   965                           ;lcdlib_2016.c: 207: lcd_clear () ;
   966  000CCA  ECBB  F006         	call	_lcd_clear	;wreg free
   967  000CCE  0012               	return	
   968  000CD0                     __end_of_lcd_start:
   969                           	opt stack 0
   970                           tblptru	equ	0xFF8
   971                           tblptrh	equ	0xFF7
   972                           tblptrl	equ	0xFF6
   973                           tablat	equ	0xFF5
   974                           prodh	equ	0xFF4
   975                           prodl	equ	0xFF3
   976                           postinc0	equ	0xFEE
   977                           wreg	equ	0xFE8
   978                           postdec1	equ	0xFE5
   979                           fsr1l	equ	0xFE1
   980                           status	equ	0xFD8
   981                           
   982 ;; *************** function _lcd_display_value *****************
   983 ;; Defined at:
   984 ;;		line 244 in file "../../LCD_library/lcdlib_2016.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  value           1    wreg     unsigned char 
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  value           1   30[COMRAM] unsigned char 
   989 ;;  units           1   29[COMRAM] unsigned char 
   990 ;;  tens            1   28[COMRAM] unsigned char 
   991 ;;  hunds           1   27[COMRAM] unsigned char 
   992 ;; Return value:  Size  Location     Type
   993 ;;		None               void
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1001 ;;      Params:         0       0       0       0       0       0       0
  1002 ;;      Locals:         4       0       0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0       0       0
  1004 ;;      Totals:         4       0       0       0       0       0       0
  1005 ;;Total ram usage:        4 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; Hardware stack levels required when called:    4
  1008 ;; This function calls:
  1009 ;;		___awdiv
  1010 ;;		___awmod
  1011 ;;		_lcd_print_ch
  1012 ;; This function is called by:
  1013 ;;		_main
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text2
  1018  0009D8                     __ptext2:
  1019                           	opt stack 0
  1020  0009D8                     _lcd_display_value:
  1021                           	opt stack 26
  1022                           
  1023                           ;incstack = 0
  1024                           ;lcd_display_value@value stored from wreg
  1025  0009D8  6E1F               	movwf	lcd_display_value@value,c
  1026                           
  1027                           ;lcdlib_2016.c: 246: unsigned char hunds, tens, units ;
  1028                           ;lcdlib_2016.c: 250: units = value % 10 ;
  1029  0009DA  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
  1030  0009DE  6A15               	clrf	___awmod@dividend+1,c
  1031  0009E0  0E00               	movlw	0
  1032  0009E2  6E17               	movwf	___awmod@divisor+1,c
  1033  0009E4  0E0A               	movlw	10
  1034  0009E6  6E16               	movwf	___awmod@divisor,c
  1035  0009E8  ECB2  F005         	call	___awmod	;wreg free
  1036  0009EC  5014               	movf	?___awmod,w,c
  1037  0009EE  6E1E               	movwf	lcd_display_value@units,c
  1038                           
  1039                           ;lcdlib_2016.c: 251: value = value / 10 ;
  1040  0009F0  C01F  F014         	movff	lcd_display_value@value,___awdiv@dividend
  1041  0009F4  6A15               	clrf	___awdiv@dividend+1,c
  1042  0009F6  0E00               	movlw	0
  1043  0009F8  6E17               	movwf	___awdiv@divisor+1,c
  1044  0009FA  0E0A               	movlw	10
  1045  0009FC  6E16               	movwf	___awdiv@divisor,c
  1046  0009FE  EC31  F005         	call	___awdiv	;wreg free
  1047  000A02  5014               	movf	?___awdiv,w,c
  1048  000A04  6E1F               	movwf	lcd_display_value@value,c
  1049                           
  1050                           ;lcdlib_2016.c: 252: tens = value % 10 ;
  1051  000A06  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
  1052  000A0A  6A15               	clrf	___awmod@dividend+1,c
  1053  000A0C  0E00               	movlw	0
  1054  000A0E  6E17               	movwf	___awmod@divisor+1,c
  1055  000A10  0E0A               	movlw	10
  1056  000A12  6E16               	movwf	___awmod@divisor,c
  1057  000A14  ECB2  F005         	call	___awmod	;wreg free
  1058  000A18  5014               	movf	?___awmod,w,c
  1059  000A1A  6E1D               	movwf	lcd_display_value@tens,c
  1060                           
  1061                           ;lcdlib_2016.c: 253: value = value / 10 ;
  1062  000A1C  C01F  F014         	movff	lcd_display_value@value,___awdiv@dividend
  1063  000A20  6A15               	clrf	___awdiv@dividend+1,c
  1064  000A22  0E00               	movlw	0
  1065  000A24  6E17               	movwf	___awdiv@divisor+1,c
  1066  000A26  0E0A               	movlw	10
  1067  000A28  6E16               	movwf	___awdiv@divisor,c
  1068  000A2A  EC31  F005         	call	___awdiv	;wreg free
  1069  000A2E  5014               	movf	?___awdiv,w,c
  1070  000A30  6E1F               	movwf	lcd_display_value@value,c
  1071                           
  1072                           ;lcdlib_2016.c: 254: hunds = value % 10 ;
  1073  000A32  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
  1074  000A36  6A15               	clrf	___awmod@dividend+1,c
  1075  000A38  0E00               	movlw	0
  1076  000A3A  6E17               	movwf	___awmod@divisor+1,c
  1077  000A3C  0E0A               	movlw	10
  1078  000A3E  6E16               	movwf	___awmod@divisor,c
  1079  000A40  ECB2  F005         	call	___awmod	;wreg free
  1080  000A44  5014               	movf	?___awmod,w,c
  1081  000A46  6E1C               	movwf	lcd_display_value@hunds,c
  1082                           
  1083                           ;lcdlib_2016.c: 260: lcd_print_ch ( '0' + hunds ) ;
  1084  000A48  501C               	movf	lcd_display_value@hunds,w,c
  1085  000A4A  0F30               	addlw	48
  1086  000A4C  EC01  F007         	call	_lcd_print_ch
  1087                           
  1088                           ;lcdlib_2016.c: 261: lcd_print_ch ( '0' + tens ) ;
  1089  000A50  501D               	movf	lcd_display_value@tens,w,c
  1090  000A52  0F30               	addlw	48
  1091  000A54  EC01  F007         	call	_lcd_print_ch
  1092                           
  1093                           ;lcdlib_2016.c: 262: lcd_print_ch ( '0' + units ) ;
  1094  000A58  501E               	movf	lcd_display_value@units,w,c
  1095  000A5A  0F30               	addlw	48
  1096  000A5C  EC01  F007         	call	_lcd_print_ch
  1097  000A60  0012               	return		;funcret
  1098  000A62                     __end_of_lcd_display_value:
  1099                           	opt stack 0
  1100                           tblptru	equ	0xFF8
  1101                           tblptrh	equ	0xFF7
  1102                           tblptrl	equ	0xFF6
  1103                           tablat	equ	0xFF5
  1104                           prodh	equ	0xFF4
  1105                           prodl	equ	0xFF3
  1106                           postinc0	equ	0xFEE
  1107                           wreg	equ	0xFE8
  1108                           postdec1	equ	0xFE5
  1109                           fsr1l	equ	0xFE1
  1110                           status	equ	0xFD8
  1111                           
  1112 ;; *************** function ___awmod *****************
  1113 ;; Defined at:
  1114 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  dividend        2   19[COMRAM] int 
  1117 ;;  divisor         2   21[COMRAM] int 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  sign            1   24[COMRAM] unsigned char 
  1120 ;;  counter         1   23[COMRAM] unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  2   19[COMRAM] int 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2, status,0
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1130 ;;      Params:         4       0       0       0       0       0       0
  1131 ;;      Locals:         2       0       0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0
  1133 ;;      Totals:         6       0       0       0       0       0       0
  1134 ;;Total ram usage:        6 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; Hardware stack levels required when called:    2
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_lcd_display_value
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text3
  1145  000B64                     __ptext3:
  1146                           	opt stack 0
  1147  000B64                     ___awmod:
  1148                           	opt stack 27
  1149                           
  1150                           ;incstack = 0
  1151  000B64  0E00               	movlw	0
  1152  000B66  6E19               	movwf	___awmod@sign,c
  1153  000B68  AE15               	btfss	___awmod@dividend+1,7,c
  1154  000B6A  D006               	goto	l1301
  1155  000B6C  6C14               	negf	___awmod@dividend,c
  1156  000B6E  1E15               	comf	___awmod@dividend+1,f,c
  1157  000B70  B0D8               	btfsc	status,0,c
  1158  000B72  2A15               	incf	___awmod@dividend+1,f,c
  1159  000B74  0E01               	movlw	1
  1160  000B76  6E19               	movwf	___awmod@sign,c
  1161  000B78                     l1301:
  1162  000B78  AE17               	btfss	___awmod@divisor+1,7,c
  1163  000B7A  D004               	goto	l1305
  1164  000B7C  6C16               	negf	___awmod@divisor,c
  1165  000B7E  1E17               	comf	___awmod@divisor+1,f,c
  1166  000B80  B0D8               	btfsc	status,0,c
  1167  000B82  2A17               	incf	___awmod@divisor+1,f,c
  1168  000B84                     l1305:
  1169  000B84  5016               	movf	___awmod@divisor,w,c
  1170  000B86  1017               	iorwf	___awmod@divisor+1,w,c
  1171  000B88  B4D8               	btfsc	status,2,c
  1172  000B8A  D018               	goto	l1321
  1173  000B8C  0E01               	movlw	1
  1174  000B8E  6E18               	movwf	___awmod@counter,c
  1175  000B90  D004               	goto	l1311
  1176  000B92                     l1309:
  1177  000B92  90D8               	bcf	status,0,c
  1178  000B94  3616               	rlcf	___awmod@divisor,f,c
  1179  000B96  3617               	rlcf	___awmod@divisor+1,f,c
  1180  000B98  2A18               	incf	___awmod@counter,f,c
  1181  000B9A                     l1311:
  1182  000B9A  AE17               	btfss	___awmod@divisor+1,7,c
  1183  000B9C  D7FA               	goto	l1309
  1184  000B9E                     l1313:
  1185  000B9E  5016               	movf	___awmod@divisor,w,c
  1186  000BA0  5C14               	subwf	___awmod@dividend,w,c
  1187  000BA2  5017               	movf	___awmod@divisor+1,w,c
  1188  000BA4  5815               	subwfb	___awmod@dividend+1,w,c
  1189  000BA6  A0D8               	btfss	status,0,c
  1190  000BA8  D004               	goto	l1317
  1191  000BAA  5016               	movf	___awmod@divisor,w,c
  1192  000BAC  5E14               	subwf	___awmod@dividend,f,c
  1193  000BAE  5017               	movf	___awmod@divisor+1,w,c
  1194  000BB0  5A15               	subwfb	___awmod@dividend+1,f,c
  1195  000BB2                     l1317:
  1196  000BB2  90D8               	bcf	status,0,c
  1197  000BB4  3217               	rrcf	___awmod@divisor+1,f,c
  1198  000BB6  3216               	rrcf	___awmod@divisor,f,c
  1199  000BB8  2E18               	decfsz	___awmod@counter,f,c
  1200  000BBA  D7F1               	goto	l1313
  1201  000BBC                     l1321:
  1202  000BBC  5019               	movf	___awmod@sign,w,c
  1203  000BBE  B4D8               	btfsc	status,2,c
  1204  000BC0  D004               	goto	l1325
  1205  000BC2  6C14               	negf	___awmod@dividend,c
  1206  000BC4  1E15               	comf	___awmod@dividend+1,f,c
  1207  000BC6  B0D8               	btfsc	status,0,c
  1208  000BC8  2A15               	incf	___awmod@dividend+1,f,c
  1209  000BCA                     l1325:
  1210  000BCA  C014  F014         	movff	___awmod@dividend,?___awmod
  1211  000BCE  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  1212  000BD2  0012               	return	
  1213  000BD4                     __end_of___awmod:
  1214                           	opt stack 0
  1215                           tblptru	equ	0xFF8
  1216                           tblptrh	equ	0xFF7
  1217                           tblptrl	equ	0xFF6
  1218                           tablat	equ	0xFF5
  1219                           prodh	equ	0xFF4
  1220                           prodl	equ	0xFF3
  1221                           postinc0	equ	0xFEE
  1222                           wreg	equ	0xFE8
  1223                           postdec1	equ	0xFE5
  1224                           fsr1l	equ	0xFE1
  1225                           status	equ	0xFD8
  1226                           
  1227 ;; *************** function ___awdiv *****************
  1228 ;; Defined at:
  1229 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  dividend        2   19[COMRAM] int 
  1232 ;;  divisor         2   21[COMRAM] int 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  quotient        2   25[COMRAM] int 
  1235 ;;  sign            1   24[COMRAM] unsigned char 
  1236 ;;  counter         1   23[COMRAM] unsigned char 
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  2   19[COMRAM] int 
  1239 ;; Registers used:
  1240 ;;		wreg, status,2, status,0
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1246 ;;      Params:         4       0       0       0       0       0       0
  1247 ;;      Locals:         4       0       0       0       0       0       0
  1248 ;;      Temps:          0       0       0       0       0       0       0
  1249 ;;      Totals:         8       0       0       0       0       0       0
  1250 ;;Total ram usage:        8 bytes
  1251 ;; Hardware stack levels used:    1
  1252 ;; Hardware stack levels required when called:    2
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_lcd_display_value
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           	psect	text4
  1261  000A62                     __ptext4:
  1262                           	opt stack 0
  1263  000A62                     ___awdiv:
  1264                           	opt stack 27
  1265                           
  1266                           ;incstack = 0
  1267  000A62  0E00               	movlw	0
  1268  000A64  6E19               	movwf	___awdiv@sign,c
  1269  000A66  AE17               	btfss	___awdiv@divisor+1,7,c
  1270  000A68  D006               	goto	l1257
  1271  000A6A  6C16               	negf	___awdiv@divisor,c
  1272  000A6C  1E17               	comf	___awdiv@divisor+1,f,c
  1273  000A6E  B0D8               	btfsc	status,0,c
  1274  000A70  2A17               	incf	___awdiv@divisor+1,f,c
  1275  000A72  0E01               	movlw	1
  1276  000A74  6E19               	movwf	___awdiv@sign,c
  1277  000A76                     l1257:
  1278  000A76  AE15               	btfss	___awdiv@dividend+1,7,c
  1279  000A78  D006               	goto	l1263
  1280  000A7A  6C14               	negf	___awdiv@dividend,c
  1281  000A7C  1E15               	comf	___awdiv@dividend+1,f,c
  1282  000A7E  B0D8               	btfsc	status,0,c
  1283  000A80  2A15               	incf	___awdiv@dividend+1,f,c
  1284  000A82  0E01               	movlw	1
  1285  000A84  1A19               	xorwf	___awdiv@sign,f,c
  1286  000A86                     l1263:
  1287  000A86  0E00               	movlw	0
  1288  000A88  6E1B               	movwf	___awdiv@quotient+1,c
  1289  000A8A  0E00               	movlw	0
  1290  000A8C  6E1A               	movwf	___awdiv@quotient,c
  1291  000A8E  5016               	movf	___awdiv@divisor,w,c
  1292  000A90  1017               	iorwf	___awdiv@divisor+1,w,c
  1293  000A92  B4D8               	btfsc	status,2,c
  1294  000A94  D01C               	goto	l1285
  1295  000A96  0E01               	movlw	1
  1296  000A98  6E18               	movwf	___awdiv@counter,c
  1297  000A9A  D004               	goto	l1271
  1298  000A9C                     l1269:
  1299  000A9C  90D8               	bcf	status,0,c
  1300  000A9E  3616               	rlcf	___awdiv@divisor,f,c
  1301  000AA0  3617               	rlcf	___awdiv@divisor+1,f,c
  1302  000AA2  2A18               	incf	___awdiv@counter,f,c
  1303  000AA4                     l1271:
  1304  000AA4  AE17               	btfss	___awdiv@divisor+1,7,c
  1305  000AA6  D7FA               	goto	l1269
  1306  000AA8                     l1273:
  1307  000AA8  90D8               	bcf	status,0,c
  1308  000AAA  361A               	rlcf	___awdiv@quotient,f,c
  1309  000AAC  361B               	rlcf	___awdiv@quotient+1,f,c
  1310  000AAE  5016               	movf	___awdiv@divisor,w,c
  1311  000AB0  5C14               	subwf	___awdiv@dividend,w,c
  1312  000AB2  5017               	movf	___awdiv@divisor+1,w,c
  1313  000AB4  5815               	subwfb	___awdiv@dividend+1,w,c
  1314  000AB6  A0D8               	btfss	status,0,c
  1315  000AB8  D005               	goto	l1281
  1316  000ABA  5016               	movf	___awdiv@divisor,w,c
  1317  000ABC  5E14               	subwf	___awdiv@dividend,f,c
  1318  000ABE  5017               	movf	___awdiv@divisor+1,w,c
  1319  000AC0  5A15               	subwfb	___awdiv@dividend+1,f,c
  1320  000AC2  801A               	bsf	___awdiv@quotient,0,c
  1321  000AC4                     l1281:
  1322  000AC4  90D8               	bcf	status,0,c
  1323  000AC6  3217               	rrcf	___awdiv@divisor+1,f,c
  1324  000AC8  3216               	rrcf	___awdiv@divisor,f,c
  1325  000ACA  2E18               	decfsz	___awdiv@counter,f,c
  1326  000ACC  D7ED               	goto	l1273
  1327  000ACE                     l1285:
  1328  000ACE  5019               	movf	___awdiv@sign,w,c
  1329  000AD0  B4D8               	btfsc	status,2,c
  1330  000AD2  D004               	goto	l1289
  1331  000AD4  6C1A               	negf	___awdiv@quotient,c
  1332  000AD6  1E1B               	comf	___awdiv@quotient+1,f,c
  1333  000AD8  B0D8               	btfsc	status,0,c
  1334  000ADA  2A1B               	incf	___awdiv@quotient+1,f,c
  1335  000ADC                     l1289:
  1336  000ADC  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  1337  000AE0  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  1338  000AE4  0012               	return	
  1339  000AE6                     __end_of___awdiv:
  1340                           	opt stack 0
  1341                           tblptru	equ	0xFF8
  1342                           tblptrh	equ	0xFF7
  1343                           tblptrl	equ	0xFF6
  1344                           tablat	equ	0xFF5
  1345                           prodh	equ	0xFF4
  1346                           prodl	equ	0xFF3
  1347                           postinc0	equ	0xFEE
  1348                           wreg	equ	0xFE8
  1349                           postdec1	equ	0xFE5
  1350                           fsr1l	equ	0xFE1
  1351                           status	equ	0xFD8
  1352                           
  1353 ;; *************** function _Window *****************
  1354 ;; Defined at:
  1355 ;;		line 206 in file "Menu_System.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  num             1    wreg     unsigned char 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  num             1   31[COMRAM] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;		None               void
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1369 ;;      Params:         0       0       0       0       0       0       0
  1370 ;;      Locals:         1       0       0       0       0       0       0
  1371 ;;      Temps:          2       0       0       0       0       0       0
  1372 ;;      Totals:         3       0       0       0       0       0       0
  1373 ;;Total ram usage:        3 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    5
  1376 ;; This function calls:
  1377 ;;		_lcd_clear
  1378 ;;		_lcd_cursor
  1379 ;;		_lcd_print
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text5
  1386  000BD4                     __ptext5:
  1387                           	opt stack 0
  1388  000BD4                     _Window:
  1389                           	opt stack 25
  1390                           
  1391                           ;incstack = 0
  1392                           ;Window@num stored from wreg
  1393  000BD4  6E20               	movwf	Window@num,c
  1394                           
  1395                           ;Menu_System.c: 208: lcd_clear();
  1396  000BD6  ECBB  F006         	call	_lcd_clear	;wreg free
  1397                           
  1398                           ;Menu_System.c: 209: lcd_cursor ( 0, 0 ) ;
  1399  000BDA  0E00               	movlw	0
  1400  000BDC  6E19               	movwf	lcd_cursor@y,c
  1401  000BDE  0E00               	movlw	0
  1402  000BE0  ECE2  F006         	call	_lcd_cursor
  1403                           
  1404                           ;Menu_System.c: 210: lcd_print ( msg_ary[num*2]);
  1405  000BE4  5020               	movf	Window@num,w,c
  1406  000BE6  0D20               	mullw	32
  1407  000BE8  0E06               	movlw	low _msg_ary
  1408  000BEA  24F3               	addwf	prodl,w,c
  1409  000BEC  6E19               	movwf	lcd_print@mess,c
  1410  000BEE  0E06               	movlw	high _msg_ary
  1411  000BF0  20F4               	addwfc	prodh,w,c
  1412  000BF2  6E1A               	movwf	lcd_print@mess+1,c
  1413  000BF4  EC1D  F006         	call	_lcd_print	;wreg free
  1414                           
  1415                           ;Menu_System.c: 211: lcd_cursor ( 0, 1 ) ;
  1416  000BF8  0E01               	movlw	1
  1417  000BFA  6E19               	movwf	lcd_cursor@y,c
  1418  000BFC  0E00               	movlw	0
  1419  000BFE  ECE2  F006         	call	_lcd_cursor
  1420                           
  1421                           ;Menu_System.c: 212: lcd_print ( msg_ary[(num*2)+1]);
  1422  000C02  5020               	movf	Window@num,w,c
  1423  000C04  6E1E               	movwf	??_Window& (0+255),c
  1424  000C06  6A1F               	clrf	(??_Window+1)& (0+255),c
  1425  000C08  90D8               	bcf	status,0,c
  1426  000C0A  361E               	rlcf	??_Window,f,c
  1427  000C0C  361F               	rlcf	??_Window+1,f,c
  1428  000C0E  3A1E               	swapf	??_Window,f,c
  1429  000C10  3A1F               	swapf	??_Window+1,f,c
  1430  000C12  0EF0               	movlw	240
  1431  000C14  161F               	andwf	??_Window+1,f,c
  1432  000C16  501E               	movf	??_Window,w,c
  1433  000C18  0B0F               	andlw	15
  1434  000C1A  121F               	iorwf	??_Window+1,f,c
  1435  000C1C  0EF0               	movlw	240
  1436  000C1E  161E               	andwf	??_Window,f,c
  1437  000C20  0E10               	movlw	16
  1438  000C22  261E               	addwf	??_Window,f,c
  1439  000C24  0E00               	movlw	0
  1440  000C26  221F               	addwfc	??_Window+1,f,c
  1441  000C28  0E06               	movlw	low _msg_ary
  1442  000C2A  241E               	addwf	??_Window,w,c
  1443  000C2C  6E19               	movwf	lcd_print@mess,c
  1444  000C2E  0E06               	movlw	high _msg_ary
  1445  000C30  201F               	addwfc	??_Window+1,w,c
  1446  000C32  6E1A               	movwf	lcd_print@mess+1,c
  1447  000C34  EC1D  F006         	call	_lcd_print	;wreg free
  1448  000C38  0012               	return		;funcret
  1449  000C3A                     __end_of_Window:
  1450                           	opt stack 0
  1451                           tblptru	equ	0xFF8
  1452                           tblptrh	equ	0xFF7
  1453                           tblptrl	equ	0xFF6
  1454                           tablat	equ	0xFF5
  1455                           prodh	equ	0xFF4
  1456                           prodl	equ	0xFF3
  1457                           postinc0	equ	0xFEE
  1458                           wreg	equ	0xFE8
  1459                           postdec1	equ	0xFE5
  1460                           fsr1l	equ	0xFE1
  1461                           status	equ	0xFD8
  1462                           
  1463 ;; *************** function _lcd_print *****************
  1464 ;; Defined at:
  1465 ;;		line 215 in file "../../LCD_library/lcdlib_2016.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  mess            2   24[COMRAM] PTR const unsigned char 
  1468 ;;		 -> msg_ary(160), STR_2(12), STR_1(8), 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  i               1   28[COMRAM] unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      unsigned char 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1480 ;;      Params:         2       0       0       0       0       0       0
  1481 ;;      Locals:         1       0       0       0       0       0       0
  1482 ;;      Temps:          2       0       0       0       0       0       0
  1483 ;;      Totals:         5       0       0       0       0       0       0
  1484 ;;Total ram usage:        5 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; Hardware stack levels required when called:    4
  1487 ;; This function calls:
  1488 ;;		_lcd_print_ch
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;;		_Window
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text6
  1496  000C3A                     __ptext6:
  1497                           	opt stack 0
  1498  000C3A                     _lcd_print:
  1499                           	opt stack 26
  1500                           
  1501                           ;lcdlib_2016.c: 217: unsigned char i = 0 ;
  1502                           
  1503                           ;incstack = 0
  1504  000C3A  0E00               	movlw	0
  1505  000C3C  6E1D               	movwf	lcd_print@i,c
  1506                           
  1507                           ;lcdlib_2016.c: 224: while ( mess [i] != 0 )
  1508  000C3E  D013               	goto	l1245
  1509  000C40                     l1241:
  1510                           
  1511                           ;lcdlib_2016.c: 225: {
  1512                           ;lcdlib_2016.c: 226: lcd_print_ch ( mess[i] ) ;
  1513  000C40  501D               	movf	lcd_print@i,w,c
  1514  000C42  0D01               	mullw	1
  1515  000C44  C019  F01B         	movff	lcd_print@mess,??_lcd_print
  1516  000C48  C01A  F01C         	movff	lcd_print@mess+1,??_lcd_print+1
  1517  000C4C  50F3               	movf	prodl,w,c
  1518  000C4E  261B               	addwf	??_lcd_print,f,c
  1519  000C50  50F4               	movf	prodh,w,c
  1520  000C52  221C               	addwfc	??_lcd_print+1,f,c
  1521  000C54  C01B  FFF6         	movff	??_lcd_print,tblptrl
  1522  000C58  C01C  FFF7         	movff	??_lcd_print+1,tblptrh
  1523  000C5C                     	if	0	;tblptru may be non-zero
  1524  000C5C                     	endif
  1525  000C5C                     	if	0	;tblptru may be non-zero
  1526  000C5C                     	endif
  1527  000C5C  0008               	tblrd		*
  1528  000C5E  50F5               	movf	tablat,w,c
  1529  000C60  EC01  F007         	call	_lcd_print_ch
  1530                           
  1531                           ;lcdlib_2016.c: 227: i++ ;
  1532  000C64  2A1D               	incf	lcd_print@i,f,c
  1533  000C66                     l1245:
  1534  000C66  501D               	movf	lcd_print@i,w,c
  1535  000C68  0D01               	mullw	1
  1536  000C6A  C019  F01B         	movff	lcd_print@mess,??_lcd_print
  1537  000C6E  C01A  F01C         	movff	lcd_print@mess+1,??_lcd_print+1
  1538  000C72  50F3               	movf	prodl,w,c
  1539  000C74  261B               	addwf	??_lcd_print,f,c
  1540  000C76  50F4               	movf	prodh,w,c
  1541  000C78  221C               	addwfc	??_lcd_print+1,f,c
  1542  000C7A  C01B  FFF6         	movff	??_lcd_print,tblptrl
  1543  000C7E  C01C  FFF7         	movff	??_lcd_print+1,tblptrh
  1544  000C82                     	if	0	;tblptru may be non-zero
  1545  000C82                     	endif
  1546  000C82                     	if	0	;tblptru may be non-zero
  1547  000C82                     	endif
  1548  000C82  0008               	tblrd		*
  1549  000C84  50F5               	movf	tablat,w,c
  1550  000C86  0900               	iorlw	0
  1551  000C88  B4D8               	btfsc	status,2,c
  1552  000C8A  0012               	return	
  1553  000C8C  D7D9               	goto	l1241
  1554  000C8E                     __end_of_lcd_print:
  1555                           	opt stack 0
  1556                           tblptru	equ	0xFF8
  1557                           tblptrh	equ	0xFF7
  1558                           tblptrl	equ	0xFF6
  1559                           tablat	equ	0xFF5
  1560                           prodh	equ	0xFF4
  1561                           prodl	equ	0xFF3
  1562                           postinc0	equ	0xFEE
  1563                           wreg	equ	0xFE8
  1564                           postdec1	equ	0xFE5
  1565                           fsr1l	equ	0xFE1
  1566                           status	equ	0xFD8
  1567                           
  1568 ;; *************** function _lcd_print_ch *****************
  1569 ;; Defined at:
  1570 ;;		line 115 in file "../../LCD_library/lcdlib_2016.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  in              1    wreg     unsigned char 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  in              1   23[COMRAM] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      unsigned char 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1584 ;;      Params:         0       0       0       0       0       0       0
  1585 ;;      Locals:         1       0       0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0       0       0
  1587 ;;      Totals:         1       0       0       0       0       0       0
  1588 ;;Total ram usage:        1 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:    3
  1591 ;; This function calls:
  1592 ;;		_lcd_raw_send
  1593 ;; This function is called by:
  1594 ;;		_lcd_print
  1595 ;;		_lcd_display_value
  1596 ;;		_lcd_display_int_value
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text7
  1601  000E02                     __ptext7:
  1602                           	opt stack 0
  1603  000E02                     _lcd_print_ch:
  1604                           	opt stack 26
  1605                           
  1606                           ;incstack = 0
  1607                           ;lcd_print_ch@in stored from wreg
  1608  000E02  6E18               	movwf	lcd_print_ch@in,c
  1609                           
  1610                           ;lcdlib_2016.c: 118: lcd_raw_send ( in, 0x01 ) ;
  1611  000E04  0E01               	movlw	1
  1612  000E06  6E14               	movwf	lcd_raw_send@RS,c
  1613  000E08  5018               	movf	lcd_print_ch@in,w,c
  1614  000E0A  EC0E  F004         	call	_lcd_raw_send
  1615  000E0E  0012               	return	
  1616  000E10                     __end_of_lcd_print_ch:
  1617                           	opt stack 0
  1618                           tblptru	equ	0xFF8
  1619                           tblptrh	equ	0xFF7
  1620                           tblptrl	equ	0xFF6
  1621                           tablat	equ	0xFF5
  1622                           prodh	equ	0xFF4
  1623                           prodl	equ	0xFF3
  1624                           postinc0	equ	0xFEE
  1625                           wreg	equ	0xFE8
  1626                           postdec1	equ	0xFE5
  1627                           fsr1l	equ	0xFE1
  1628                           status	equ	0xFD8
  1629                           
  1630 ;; *************** function _lcd_cursor *****************
  1631 ;; Defined at:
  1632 ;;		line 144 in file "../../LCD_library/lcdlib_2016.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;  x               1    wreg     unsigned char 
  1635 ;;  y               1   24[COMRAM] unsigned char 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  x               1   25[COMRAM] unsigned char 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      unsigned char 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2, status,0, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1647 ;;      Params:         1       0       0       0       0       0       0
  1648 ;;      Locals:         1       0       0       0       0       0       0
  1649 ;;      Temps:          0       0       0       0       0       0       0
  1650 ;;      Totals:         2       0       0       0       0       0       0
  1651 ;;Total ram usage:        2 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    4
  1654 ;; This function calls:
  1655 ;;		_lcd_command
  1656 ;; This function is called by:
  1657 ;;		_main
  1658 ;;		_Window
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	text8
  1663  000DC4                     __ptext8:
  1664                           	opt stack 0
  1665  000DC4                     _lcd_cursor:
  1666                           	opt stack 26
  1667                           
  1668                           ;incstack = 0
  1669                           ;lcd_cursor@x stored from wreg
  1670  000DC4  6E1A               	movwf	lcd_cursor@x,c
  1671                           
  1672                           ;lcdlib_2016.c: 153: if ( y==0 )
  1673  000DC6  5019               	movf	lcd_cursor@y,w,c
  1674  000DC8  A4D8               	btfss	status,2,c
  1675  000DCA  D002               	goto	l1233
  1676                           
  1677                           ;lcdlib_2016.c: 154: {
  1678                           ;lcdlib_2016.c: 156: y=0x80 ;
  1679  000DCC  0E80               	movlw	128
  1680  000DCE  D001               	goto	L3
  1681  000DD0                     l1233:
  1682                           
  1683                           ;lcdlib_2016.c: 158: else
  1684                           ;lcdlib_2016.c: 159: {
  1685                           ;lcdlib_2016.c: 161: y=0xc0 ;
  1686  000DD0  0EC0               	movlw	192
  1687  000DD2                     L3:
  1688  000DD2  6E19               	movwf	lcd_cursor@y,c
  1689                           
  1690                           ;lcdlib_2016.c: 162: }
  1691                           ;lcdlib_2016.c: 164: lcd_command ( y+x ) ;
  1692  000DD4  5019               	movf	lcd_cursor@y,w,c
  1693  000DD6  241A               	addwf	lcd_cursor@x,w,c
  1694  000DD8  EC08  F007         	call	_lcd_command
  1695  000DDC  0012               	return	
  1696  000DDE                     __end_of_lcd_cursor:
  1697                           	opt stack 0
  1698                           tblptru	equ	0xFF8
  1699                           tblptrh	equ	0xFF7
  1700                           tblptrl	equ	0xFF6
  1701                           tablat	equ	0xFF5
  1702                           prodh	equ	0xFF4
  1703                           prodl	equ	0xFF3
  1704                           postinc0	equ	0xFEE
  1705                           wreg	equ	0xFE8
  1706                           postdec1	equ	0xFE5
  1707                           fsr1l	equ	0xFE1
  1708                           status	equ	0xFD8
  1709                           
  1710 ;; *************** function _lcd_clear *****************
  1711 ;; Defined at:
  1712 ;;		line 131 in file "../../LCD_library/lcdlib_2016.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;		None
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;		None
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      unsigned char 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1726 ;;      Params:         0       0       0       0       0       0       0
  1727 ;;      Locals:         0       0       0       0       0       0       0
  1728 ;;      Temps:          1       0       0       0       0       0       0
  1729 ;;      Totals:         1       0       0       0       0       0       0
  1730 ;;Total ram usage:        1 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; Hardware stack levels required when called:    4
  1733 ;; This function calls:
  1734 ;;		_lcd_command
  1735 ;; This function is called by:
  1736 ;;		_lcd_start
  1737 ;;		_main
  1738 ;;		_Window
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text9
  1743  000D76                     __ptext9:
  1744                           	opt stack 0
  1745  000D76                     _lcd_clear:
  1746                           	opt stack 25
  1747                           
  1748                           ;lcdlib_2016.c: 134: lcd_command ( 0x01 ) ;
  1749                           
  1750                           ;incstack = 0
  1751  000D76  0E01               	movlw	1
  1752  000D78  EC08  F007         	call	_lcd_command
  1753                           
  1754                           ;lcdlib_2016.c: 135: _delay((unsigned long)((2)*(19660800/4000.0)));
  1755  000D7C  0E0D               	movlw	13
  1756  000D7E  6E19               	movwf	??_lcd_clear& (0+255),c
  1757  000D80  0EC3               	movlw	195
  1758  000D82                     u887:
  1759  000D82  2EE8               	decfsz	wreg,f,c
  1760  000D84  D7FE               	goto	u887
  1761  000D86  2E19               	decfsz	??_lcd_clear& (0+255),f,c
  1762  000D88  D7FC               	goto	u887
  1763  000D8A  F000               	nop	
  1764                           
  1765                           ;lcdlib_2016.c: 138: lcd_command ( 0x02 ) ;
  1766  000D8C  0E02               	movlw	2
  1767  000D8E  EC08  F007         	call	_lcd_command
  1768                           
  1769                           ;lcdlib_2016.c: 139: _delay((unsigned long)((2)*(19660800/4000.0)));
  1770  000D92  0E0D               	movlw	13
  1771  000D94  6E19               	movwf	??_lcd_clear& (0+255),c
  1772  000D96  0EC3               	movlw	195
  1773  000D98                     u897:
  1774  000D98  2EE8               	decfsz	wreg,f,c
  1775  000D9A  D7FE               	goto	u897
  1776  000D9C  2E19               	decfsz	??_lcd_clear& (0+255),f,c
  1777  000D9E  D7FC               	goto	u897
  1778  000DA0  F000               	nop	
  1779  000DA2  0012               	return	
  1780  000DA4                     __end_of_lcd_clear:
  1781                           	opt stack 0
  1782                           tblptru	equ	0xFF8
  1783                           tblptrh	equ	0xFF7
  1784                           tblptrl	equ	0xFF6
  1785                           tablat	equ	0xFF5
  1786                           prodh	equ	0xFF4
  1787                           prodl	equ	0xFF3
  1788                           postinc0	equ	0xFEE
  1789                           wreg	equ	0xFE8
  1790                           postdec1	equ	0xFE5
  1791                           fsr1l	equ	0xFE1
  1792                           status	equ	0xFD8
  1793                           
  1794 ;; *************** function _lcd_command *****************
  1795 ;; Defined at:
  1796 ;;		line 123 in file "../../LCD_library/lcdlib_2016.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  in              1    wreg     unsigned char 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  in              1   23[COMRAM] unsigned char 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;		None               void
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1810 ;;      Params:         0       0       0       0       0       0       0
  1811 ;;      Locals:         1       0       0       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0
  1813 ;;      Totals:         1       0       0       0       0       0       0
  1814 ;;Total ram usage:        1 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    3
  1817 ;; This function calls:
  1818 ;;		_lcd_raw_send
  1819 ;; This function is called by:
  1820 ;;		_lcd_clear
  1821 ;;		_lcd_cursor
  1822 ;;		_lcd_start
  1823 ;;		_lcd_cursor_on
  1824 ;;		_lcd_cursor_off
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text10
  1829  000E10                     __ptext10:
  1830                           	opt stack 0
  1831  000E10                     _lcd_command:
  1832                           	opt stack 26
  1833                           
  1834                           ;incstack = 0
  1835                           ;lcd_command@in stored from wreg
  1836  000E10  6E18               	movwf	lcd_command@in,c
  1837                           
  1838                           ;lcdlib_2016.c: 125: lcd_raw_send ( in, 0x00 ) ;
  1839  000E12  0E00               	movlw	0
  1840  000E14  6E14               	movwf	lcd_raw_send@RS,c
  1841  000E16  5018               	movf	lcd_command@in,w,c
  1842  000E18  EC0E  F004         	call	_lcd_raw_send
  1843  000E1C  0012               	return		;funcret
  1844  000E1E                     __end_of_lcd_command:
  1845                           	opt stack 0
  1846                           tblptru	equ	0xFF8
  1847                           tblptrh	equ	0xFF7
  1848                           tblptrl	equ	0xFF6
  1849                           tablat	equ	0xFF5
  1850                           prodh	equ	0xFF4
  1851                           prodl	equ	0xFF3
  1852                           postinc0	equ	0xFEE
  1853                           wreg	equ	0xFE8
  1854                           postdec1	equ	0xFE5
  1855                           fsr1l	equ	0xFE1
  1856                           status	equ	0xFD8
  1857                           
  1858 ;; *************** function _lcd_raw_send *****************
  1859 ;; Defined at:
  1860 ;;		line 74 in file "../../LCD_library/lcdlib_2016.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  in              1    wreg     unsigned char 
  1863 ;;  RS              1   19[COMRAM] unsigned char 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  in              1   22[COMRAM] unsigned char 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;		None               void
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1875 ;;      Params:         1       0       0       0       0       0       0
  1876 ;;      Locals:         1       0       0       0       0       0       0
  1877 ;;      Temps:          2       0       0       0       0       0       0
  1878 ;;      Totals:         4       0       0       0       0       0       0
  1879 ;;Total ram usage:        4 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; Hardware stack levels required when called:    2
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_lcd_print_ch
  1886 ;;		_lcd_command
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text11
  1891  00081C                     __ptext11:
  1892                           	opt stack 0
  1893  00081C                     _lcd_raw_send:
  1894                           	opt stack 26
  1895                           
  1896                           ;incstack = 0
  1897                           ;lcd_raw_send@in stored from wreg
  1898  00081C  6E17               	movwf	lcd_raw_send@in,c
  1899                           
  1900                           ;lcdlib_2016.c: 78: LATDbits.LD0 = in >> 4;
  1901  00081E  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1902  000822  3A15               	swapf	??_lcd_raw_send,f,c
  1903  000824  0E0F               	movlw	15
  1904  000826  1615               	andwf	??_lcd_raw_send,f,c
  1905  000828  508C               	movf	3980,w,c	;volatile
  1906  00082A  1815               	xorwf	??_lcd_raw_send,w,c
  1907  00082C  0BFE               	andlw	-2
  1908  00082E  1815               	xorwf	??_lcd_raw_send,w,c
  1909  000830  6E8C               	movwf	3980,c	;volatile
  1910                           
  1911                           ;lcdlib_2016.c: 79: LATDbits.LD1 = in >> 5;
  1912  000832  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1913  000836  0E05               	movlw	5
  1914  000838  6E16               	movwf	(??_lcd_raw_send+1)& (0+255),c
  1915  00083A                     u485:
  1916  00083A  90D8               	bcf	status,0,c
  1917  00083C  3215               	rrcf	??_lcd_raw_send,f,c
  1918  00083E  2E16               	decfsz	(??_lcd_raw_send+1)& (0+255),f,c
  1919  000840  D7FC               	goto	u485
  1920  000842  4615               	rlncf	??_lcd_raw_send,f,c
  1921  000844  508C               	movf	3980,w,c	;volatile
  1922  000846  1815               	xorwf	??_lcd_raw_send,w,c
  1923  000848  0BFD               	andlw	-3
  1924  00084A  1815               	xorwf	??_lcd_raw_send,w,c
  1925  00084C  6E8C               	movwf	3980,c	;volatile
  1926                           
  1927                           ;lcdlib_2016.c: 80: LATDbits.LD2 = in >> 6;
  1928  00084E  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1929  000852  0E06               	movlw	6
  1930  000854  6E16               	movwf	(??_lcd_raw_send+1)& (0+255),c
  1931  000856                     u495:
  1932  000856  90D8               	bcf	status,0,c
  1933  000858  3215               	rrcf	??_lcd_raw_send,f,c
  1934  00085A  2E16               	decfsz	(??_lcd_raw_send+1)& (0+255),f,c
  1935  00085C  D7FC               	goto	u495
  1936  00085E  4615               	rlncf	??_lcd_raw_send,f,c
  1937  000860  4615               	rlncf	??_lcd_raw_send,f,c
  1938  000862  508C               	movf	3980,w,c	;volatile
  1939  000864  1815               	xorwf	??_lcd_raw_send,w,c
  1940  000866  0BFB               	andlw	-5
  1941  000868  1815               	xorwf	??_lcd_raw_send,w,c
  1942  00086A  6E8C               	movwf	3980,c	;volatile
  1943                           
  1944                           ;lcdlib_2016.c: 81: LATDbits.LD3 = in >> 7;
  1945  00086C  6A15               	clrf	??_lcd_raw_send& (0+255),c
  1946  00086E  AE17               	btfss	lcd_raw_send@in,7,c
  1947  000870  D001               	bra	u505
  1948  000872  2A15               	incf	??_lcd_raw_send& (0+255),f,c
  1949  000874                     u505:
  1950  000874  4615               	rlncf	??_lcd_raw_send,f,c
  1951  000876  4615               	rlncf	??_lcd_raw_send,f,c
  1952  000878  4615               	rlncf	??_lcd_raw_send,f,c
  1953  00087A  508C               	movf	3980,w,c	;volatile
  1954  00087C  1815               	xorwf	??_lcd_raw_send,w,c
  1955  00087E  0BF7               	andlw	-9
  1956  000880  1815               	xorwf	??_lcd_raw_send,w,c
  1957  000882  6E8C               	movwf	3980,c	;volatile
  1958                           
  1959                           ;lcdlib_2016.c: 82: LATDbits.LD4 = RS;
  1960  000884  B014               	btfsc	lcd_raw_send@RS,0,c
  1961  000886  D002               	bra	u515
  1962  000888  988C               	bcf	3980,4,c	;volatile
  1963  00088A  D001               	bra	u516
  1964  00088C                     u515:
  1965  00088C  888C               	bsf	3980,4,c	;volatile
  1966  00088E                     u516:
  1967                           
  1968                           ;lcdlib_2016.c: 84: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1969  00088E  0E03               	movlw	3
  1970  000890                     u907:
  1971  000890  2EE8               	decfsz	wreg,f,c
  1972  000892  D7FE               	goto	u907
  1973                           
  1974                           ;lcdlib_2016.c: 89: LATDbits.LD5 = 1;
  1975  000894  8A8C               	bsf	3980,5,c	;volatile
  1976                           
  1977                           ;lcdlib_2016.c: 91: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1978  000896  0E03               	movlw	3
  1979  000898                     u917:
  1980  000898  2EE8               	decfsz	wreg,f,c
  1981  00089A  D7FE               	goto	u917
  1982                           
  1983                           ;lcdlib_2016.c: 93: LATDbits.LD5 = 0;
  1984  00089C  9A8C               	bcf	3980,5,c	;volatile
  1985                           
  1986                           ;lcdlib_2016.c: 95: _delay((unsigned long)((50)*(19660800/4000000.0)));
  1987  00089E  0E51               	movlw	81
  1988  0008A0                     u927:
  1989  0008A0  2EE8               	decfsz	wreg,f,c
  1990  0008A2  D7FE               	goto	u927
  1991  0008A4  D000               	nop2		;nop
  1992                           
  1993                           ;lcdlib_2016.c: 98: LATDbits.LD0 = in;
  1994  0008A6  B017               	btfsc	lcd_raw_send@in,0,c
  1995  0008A8  D002               	bra	u525
  1996  0008AA  908C               	bcf	3980,0,c	;volatile
  1997  0008AC  D001               	bra	u526
  1998  0008AE                     u525:
  1999  0008AE  808C               	bsf	3980,0,c	;volatile
  2000  0008B0                     u526:
  2001                           
  2002                           ;lcdlib_2016.c: 99: LATDbits.LD1 = in >> 1;
  2003  0008B0  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  2004  0008B4  90D8               	bcf	status,0,c
  2005  0008B6  3215               	rrcf	??_lcd_raw_send,f,c
  2006  0008B8  4615               	rlncf	??_lcd_raw_send,f,c
  2007  0008BA  508C               	movf	3980,w,c	;volatile
  2008  0008BC  1815               	xorwf	??_lcd_raw_send,w,c
  2009  0008BE  0BFD               	andlw	-3
  2010  0008C0  1815               	xorwf	??_lcd_raw_send,w,c
  2011  0008C2  6E8C               	movwf	3980,c	;volatile
  2012                           
  2013                           ;lcdlib_2016.c: 100: LATDbits.LD2 = in >> 2;
  2014  0008C4  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  2015  0008C8  90D8               	bcf	status,0,c
  2016  0008CA  3215               	rrcf	??_lcd_raw_send,f,c
  2017  0008CC  90D8               	bcf	status,0,c
  2018  0008CE  3215               	rrcf	??_lcd_raw_send,f,c
  2019  0008D0  4615               	rlncf	??_lcd_raw_send,f,c
  2020  0008D2  4615               	rlncf	??_lcd_raw_send,f,c
  2021  0008D4  508C               	movf	3980,w,c	;volatile
  2022  0008D6  1815               	xorwf	??_lcd_raw_send,w,c
  2023  0008D8  0BFB               	andlw	-5
  2024  0008DA  1815               	xorwf	??_lcd_raw_send,w,c
  2025  0008DC  6E8C               	movwf	3980,c	;volatile
  2026                           
  2027                           ;lcdlib_2016.c: 101: LATDbits.LD3 = in >> 3;
  2028  0008DE  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  2029  0008E2  90D8               	bcf	status,0,c
  2030  0008E4  3215               	rrcf	??_lcd_raw_send,f,c
  2031  0008E6  90D8               	bcf	status,0,c
  2032  0008E8  3215               	rrcf	??_lcd_raw_send,f,c
  2033  0008EA  90D8               	bcf	status,0,c
  2034  0008EC  3215               	rrcf	??_lcd_raw_send,f,c
  2035  0008EE  4615               	rlncf	??_lcd_raw_send,f,c
  2036  0008F0  4615               	rlncf	??_lcd_raw_send,f,c
  2037  0008F2  4615               	rlncf	??_lcd_raw_send,f,c
  2038  0008F4  508C               	movf	3980,w,c	;volatile
  2039  0008F6  1815               	xorwf	??_lcd_raw_send,w,c
  2040  0008F8  0BF7               	andlw	-9
  2041  0008FA  1815               	xorwf	??_lcd_raw_send,w,c
  2042  0008FC  6E8C               	movwf	3980,c	;volatile
  2043                           
  2044                           ;lcdlib_2016.c: 103: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2045  0008FE  0E03               	movlw	3
  2046  000900                     u937:
  2047  000900  2EE8               	decfsz	wreg,f,c
  2048  000902  D7FE               	goto	u937
  2049                           
  2050                           ;lcdlib_2016.c: 105: LATDbits.LD5 = 1;
  2051  000904  8A8C               	bsf	3980,5,c	;volatile
  2052                           
  2053                           ;lcdlib_2016.c: 107: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2054  000906  0E03               	movlw	3
  2055  000908                     u947:
  2056  000908  2EE8               	decfsz	wreg,f,c
  2057  00090A  D7FE               	goto	u947
  2058                           
  2059                           ;lcdlib_2016.c: 109: LATDbits.LD5 = 0;
  2060  00090C  9A8C               	bcf	3980,5,c	;volatile
  2061                           
  2062                           ;lcdlib_2016.c: 111: _delay((unsigned long)((50)*(19660800/4000000.0)));
  2063  00090E  0E51               	movlw	81
  2064  000910                     u957:
  2065  000910  2EE8               	decfsz	wreg,f,c
  2066  000912  D7FE               	goto	u957
  2067  000914  D000               	nop2		;nop
  2068  000916  0012               	return		;funcret
  2069  000918                     __end_of_lcd_raw_send:
  2070                           	opt stack 0
  2071                           tblptru	equ	0xFF8
  2072                           tblptrh	equ	0xFF7
  2073                           tblptrl	equ	0xFF6
  2074                           tablat	equ	0xFF5
  2075                           prodh	equ	0xFF4
  2076                           prodl	equ	0xFF3
  2077                           postinc0	equ	0xFEE
  2078                           wreg	equ	0xFE8
  2079                           postdec1	equ	0xFE5
  2080                           fsr1l	equ	0xFE1
  2081                           status	equ	0xFD8
  2082                           
  2083 ;; *************** function _Initial *****************
  2084 ;; Defined at:
  2085 ;;		line 188 in file "Menu_System.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;		None               void
  2092 ;; Registers used:
  2093 ;;		wreg, status,2, status,0, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2099 ;;      Params:         0       0       0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0       0       0
  2101 ;;      Temps:          0       0       0       0       0       0       0
  2102 ;;      Totals:         0       0       0       0       0       0       0
  2103 ;;Total ram usage:        0 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    3
  2106 ;; This function calls:
  2107 ;;		_OpenTimer0
  2108 ;;		_WriteTimer0
  2109 ;;		_delay_s
  2110 ;; This function is called by:
  2111 ;;		_main
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text12
  2116  000D0C                     __ptext12:
  2117                           	opt stack 0
  2118  000D0C                     _Initial:
  2119                           	opt stack 27
  2120                           
  2121                           ;Menu_System.c: 189: ADCON0 = 0x01;
  2122                           
  2123                           ;incstack = 0
  2124  000D0C  0E01               	movlw	1
  2125  000D0E  6EC2               	movwf	4034,c	;volatile
  2126                           
  2127                           ;Menu_System.c: 190: ADCON1 = 0x0E;
  2128  000D10  0E0E               	movlw	14
  2129  000D12  6EC1               	movwf	4033,c	;volatile
  2130                           
  2131                           ;Menu_System.c: 191: TRISA = 0x01;
  2132  000D14  0E01               	movlw	1
  2133  000D16  6E92               	movwf	3986,c	;volatile
  2134                           
  2135                           ;Menu_System.c: 192: TRISB = 0xFF;
  2136  000D18  6893               	setf	3987,c	;volatile
  2137                           
  2138                           ;Menu_System.c: 193: TRISC = 0x00;
  2139  000D1A  0E00               	movlw	0
  2140  000D1C  6E94               	movwf	3988,c	;volatile
  2141                           
  2142                           ;Menu_System.c: 194: ADCON0bits.GO_nDONE = 1;
  2143  000D1E  82C2               	bsf	4034,1,c	;volatile
  2144                           
  2145                           ;Menu_System.c: 195: LATC = 0xff;
  2146  000D20  688B               	setf	3979,c	;volatile
  2147                           
  2148                           ;Menu_System.c: 196: delay_s(3);
  2149  000D22  0E03               	movlw	3
  2150  000D24  ECA1  F006         	call	_delay_s
  2151                           
  2152                           ;Menu_System.c: 197: LATC = 0x00;
  2153  000D28  0E00               	movlw	0
  2154  000D2A  6E8B               	movwf	3979,c	;volatile
  2155                           
  2156                           ;Menu_System.c: 200: OpenTimer0( 0b11111111 & 0b10111111 & 0b11011111 & 0b11110000);
  2157  000D2C  0E90               	movlw	144
  2158  000D2E  ECD2  F006         	call	_OpenTimer0
  2159                           
  2160                           ;Menu_System.c: 201: WriteTimer0(40960);
  2161  000D32  0EA0               	movlw	160
  2162  000D34  6E15               	movwf	WriteTimer0@timer0+1,c
  2163  000D36  0E00               	movlw	0
  2164  000D38  6E14               	movwf	WriteTimer0@timer0,c
  2165  000D3A  ECEF  F006         	call	_WriteTimer0	;wreg free
  2166                           
  2167                           ;Menu_System.c: 202: (INTCONbits.GIE = 1);
  2168  000D3E  8EF2               	bsf	intcon,7,c	;volatile
  2169  000D40  0012               	return		;funcret
  2170  000D42                     __end_of_Initial:
  2171                           	opt stack 0
  2172                           tblptru	equ	0xFF8
  2173                           tblptrh	equ	0xFF7
  2174                           tblptrl	equ	0xFF6
  2175                           tablat	equ	0xFF5
  2176                           prodh	equ	0xFF4
  2177                           prodl	equ	0xFF3
  2178                           intcon	equ	0xFF2
  2179                           postinc0	equ	0xFEE
  2180                           wreg	equ	0xFE8
  2181                           postdec1	equ	0xFE5
  2182                           fsr1l	equ	0xFE1
  2183                           status	equ	0xFD8
  2184                           
  2185 ;; *************** function _delay_s *****************
  2186 ;; Defined at:
  2187 ;;		line 216 in file "Menu_System.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  secs            1    wreg     unsigned char 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  secs            1   20[COMRAM] unsigned char 
  2192 ;;  i               1   22[COMRAM] unsigned char 
  2193 ;;  j               1   21[COMRAM] unsigned char 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;		None               void
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2203 ;;      Params:         0       0       0       0       0       0       0
  2204 ;;      Locals:         3       0       0       0       0       0       0
  2205 ;;      Temps:          1       0       0       0       0       0       0
  2206 ;;      Totals:         4       0       0       0       0       0       0
  2207 ;;Total ram usage:        4 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    2
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_main
  2214 ;;		_Initial
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text13
  2219  000D42                     __ptext13:
  2220                           	opt stack 0
  2221  000D42                     _delay_s:
  2222                           	opt stack 28
  2223                           
  2224                           ;incstack = 0
  2225                           ;delay_s@secs stored from wreg
  2226  000D42  6E15               	movwf	delay_s@secs,c
  2227                           
  2228                           ;Menu_System.c: 218: unsigned char i,j;
  2229                           ;Menu_System.c: 219: for(j=0;j<secs;j++)
  2230  000D44  0E00               	movlw	0
  2231  000D46  6E16               	movwf	delay_s@j,c
  2232  000D48  D011               	goto	l899
  2233  000D4A                     l887:
  2234                           
  2235                           ;Menu_System.c: 220: {
  2236                           ;Menu_System.c: 221: for (i=0;i<25;i++)
  2237  000D4A  0E00               	movlw	0
  2238  000D4C  6E17               	movwf	delay_s@i,c
  2239  000D4E                     l889:
  2240  000D4E  0E18               	movlw	24
  2241  000D50  6417               	cpfsgt	delay_s@i,c
  2242  000D52  D001               	goto	l893
  2243  000D54  D00A               	goto	l897
  2244  000D56                     l893:
  2245                           
  2246                           ;Menu_System.c: 222: _delay((unsigned long)((40)*(19660800/4000.0)));
  2247  000D56  0E00               	movlw	0
  2248  000D58  6E14               	movwf	??_delay_s& (0+255),c
  2249  000D5A  0E54               	movlw	84
  2250  000D5C                     u967:
  2251  000D5C  2EE8               	decfsz	wreg,f,c
  2252  000D5E  D7FE               	goto	u967
  2253  000D60  2E14               	decfsz	??_delay_s& (0+255),f,c
  2254  000D62  D7FC               	goto	u967
  2255  000D64  D000               	nop2	
  2256  000D66  2A17               	incf	delay_s@i,f,c
  2257  000D68  D7F2               	goto	l889
  2258  000D6A                     l897:
  2259  000D6A  2A16               	incf	delay_s@j,f,c
  2260  000D6C                     l899:
  2261  000D6C  5015               	movf	delay_s@secs,w,c
  2262  000D6E  5C16               	subwf	delay_s@j,w,c
  2263  000D70  B0D8               	btfsc	status,0,c
  2264  000D72  0012               	return	
  2265  000D74  D7EA               	goto	l887
  2266  000D76                     __end_of_delay_s:
  2267                           	opt stack 0
  2268                           tblptru	equ	0xFF8
  2269                           tblptrh	equ	0xFF7
  2270                           tblptrl	equ	0xFF6
  2271                           tablat	equ	0xFF5
  2272                           prodh	equ	0xFF4
  2273                           prodl	equ	0xFF3
  2274                           intcon	equ	0xFF2
  2275                           postinc0	equ	0xFEE
  2276                           wreg	equ	0xFE8
  2277                           postdec1	equ	0xFE5
  2278                           fsr1l	equ	0xFE1
  2279                           status	equ	0xFD8
  2280                           
  2281 ;; *************** function _WriteTimer0 *****************
  2282 ;; Defined at:
  2283 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  timer0          2   19[COMRAM] unsigned int 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  timer           2   21[COMRAM] struct Timers
  2288 ;; Return value:  Size  Location     Type
  2289 ;;		None               void
  2290 ;; Registers used:
  2291 ;;		None
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2297 ;;      Params:         2       0       0       0       0       0       0
  2298 ;;      Locals:         2       0       0       0       0       0       0
  2299 ;;      Temps:          0       0       0       0       0       0       0
  2300 ;;      Totals:         4       0       0       0       0       0       0
  2301 ;;Total ram usage:        4 bytes
  2302 ;; Hardware stack levels used:    1
  2303 ;; Hardware stack levels required when called:    2
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		_Initial
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text14
  2312  000DDE                     __ptext14:
  2313                           	opt stack 0
  2314  000DDE                     _WriteTimer0:
  2315                           	opt stack 27
  2316                           
  2317                           ;incstack = 0
  2318  000DDE  C014  F016         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2319  000DE2  C015  F017         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2320  000DE6  C017  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2321  000DEA  C016  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2322  000DEE  0012               	return		;funcret
  2323  000DF0                     __end_of_WriteTimer0:
  2324                           	opt stack 0
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           prodh	equ	0xFF4
  2330                           prodl	equ	0xFF3
  2331                           intcon	equ	0xFF2
  2332                           postinc0	equ	0xFEE
  2333                           wreg	equ	0xFE8
  2334                           postdec1	equ	0xFE5
  2335                           fsr1l	equ	0xFE1
  2336                           status	equ	0xFD8
  2337                           
  2338 ;; *************** function _OpenTimer0 *****************
  2339 ;; Defined at:
  2340 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0open.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  config          1    wreg     unsigned char 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  config          1   19[COMRAM] unsigned char 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;		None               void
  2347 ;; Registers used:
  2348 ;;		wreg, status,2, status,0
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2354 ;;      Params:         0       0       0       0       0       0       0
  2355 ;;      Locals:         1       0       0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0
  2357 ;;      Totals:         1       0       0       0       0       0       0
  2358 ;;Total ram usage:        1 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; Hardware stack levels required when called:    2
  2361 ;; This function calls:
  2362 ;;		Nothing
  2363 ;; This function is called by:
  2364 ;;		_Initial
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text15
  2369  000DA4                     __ptext15:
  2370                           	opt stack 0
  2371  000DA4                     _OpenTimer0:
  2372                           	opt stack 27
  2373                           
  2374                           ;incstack = 0
  2375                           ;OpenTimer0@config stored from wreg
  2376  000DA4  6E14               	movwf	OpenTimer0@config,c
  2377  000DA6  5014               	movf	OpenTimer0@config,w,c
  2378  000DA8  0B7F               	andlw	127
  2379  000DAA  6ED5               	movwf	4053,c	;volatile
  2380  000DAC  0E00               	movlw	0
  2381  000DAE  6ED7               	movwf	4055,c	;volatile
  2382  000DB0  0E00               	movlw	0
  2383  000DB2  6ED6               	movwf	4054,c	;volatile
  2384  000DB4  94F2               	bcf	intcon,2,c	;volatile
  2385  000DB6  AE14               	btfss	OpenTimer0@config,7,c
  2386  000DB8  D002               	goto	l194
  2387  000DBA  8AF2               	bsf	intcon,5,c	;volatile
  2388  000DBC  D001               	goto	l195
  2389  000DBE                     l194:
  2390  000DBE  9AF2               	bcf	intcon,5,c	;volatile
  2391  000DC0                     l195:
  2392  000DC0  8ED5               	bsf	4053,7,c	;volatile
  2393  000DC2  0012               	return		;funcret
  2394  000DC4                     __end_of_OpenTimer0:
  2395                           	opt stack 0
  2396                           tblptru	equ	0xFF8
  2397                           tblptrh	equ	0xFF7
  2398                           tblptrl	equ	0xFF6
  2399                           tablat	equ	0xFF5
  2400                           prodh	equ	0xFF4
  2401                           prodl	equ	0xFF3
  2402                           intcon	equ	0xFF2
  2403                           postinc0	equ	0xFEE
  2404                           wreg	equ	0xFE8
  2405                           postdec1	equ	0xFE5
  2406                           fsr1l	equ	0xFE1
  2407                           status	equ	0xFD8
  2408                           
  2409 ;; *************** function _myIsr *****************
  2410 ;; Defined at:
  2411 ;;		line 54 in file "Menu_System.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;		None
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;		None
  2416 ;; Return value:  Size  Location     Type
  2417 ;;		None               void
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2425 ;;      Params:         0       0       0       0       0       0       0
  2426 ;;      Locals:         0       0       0       0       0       0       0
  2427 ;;      Temps:         15       0       0       0       0       0       0
  2428 ;;      Totals:        15       0       0       0       0       0       0
  2429 ;;Total ram usage:       15 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    1
  2432 ;; This function calls:
  2433 ;;		_Find_Button_Press
  2434 ;;		i2_WriteTimer0
  2435 ;; This function is called by:
  2436 ;;		Interrupt level 2
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	intcode
  2441  000008                     __pintcode:
  2442                           	opt stack 0
  2443  000008                     _myIsr:
  2444                           	opt stack 25
  2445                           
  2446                           ;incstack = 0
  2447  000008  8233               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2448  00000A  CFFA F006          	movff	pclath,??_myIsr+1
  2449  00000E  CFFB F007          	movff	pclatu,??_myIsr+2
  2450  000012  ED8C  F004         	call	int_func,f	;refresh shadow registers
  2451                           pclatu	equ	0xFFB
  2452                           pclath	equ	0xFFA
  2453                           tblptru	equ	0xFF8
  2454                           tblptrh	equ	0xFF7
  2455                           tblptrl	equ	0xFF6
  2456                           tablat	equ	0xFF5
  2457                           prodh	equ	0xFF4
  2458                           prodl	equ	0xFF3
  2459                           intcon	equ	0xFF2
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           postdec1	equ	0xFE5
  2463                           fsr1l	equ	0xFE1
  2464                           status	equ	0xFD8
  2465                           
  2466                           	psect	intcode_body
  2467  000918                     __pintcode_body:
  2468                           	opt stack 25
  2469  000918                     int_func:
  2470                           	opt stack 25
  2471  000918  0006               	pop		; remove dummy address from shadow register refresh
  2472  00091A  CFE9 F008          	movff	fsr0l,??_myIsr+3
  2473  00091E  CFEA F009          	movff	fsr0h,??_myIsr+4
  2474  000922  CFE1 F00A          	movff	fsr1l,??_myIsr+5
  2475  000926  CFE2 F00B          	movff	fsr1h,??_myIsr+6
  2476  00092A  CFD9 F00C          	movff	fsr2l,??_myIsr+7
  2477  00092E  CFDA F00D          	movff	fsr2h,??_myIsr+8
  2478  000932  CFF3 F00E          	movff	prodl,??_myIsr+9
  2479  000936  CFF4 F00F          	movff	prodh,??_myIsr+10
  2480  00093A  CFF6 F010          	movff	tblptrl,??_myIsr+11
  2481  00093E  CFF7 F011          	movff	tblptrh,??_myIsr+12
  2482  000942  CFF8 F012          	movff	tblptru,??_myIsr+13
  2483  000946  CFF5 F013          	movff	tablat,??_myIsr+14
  2484                           
  2485                           ;Menu_System.c: 58: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  2486  00094A  BAF2               	btfsc	intcon,5,c	;volatile
  2487  00094C  A4F2               	btfss	intcon,2,c	;volatile
  2488  00094E  D026               	goto	i2l135
  2489                           
  2490                           ;Menu_System.c: 60: Find_Button_Press();
  2491  000950  EC73  F005         	call	_Find_Button_Press	;wreg free
  2492                           
  2493                           ;Menu_System.c: 61: WriteTimer0(40960);
  2494  000954  0EA0               	movlw	160
  2495  000956  6E02               	movwf	i2WriteTimer0@timer0+1,c
  2496  000958  0E00               	movlw	0
  2497  00095A  6E01               	movwf	i2WriteTimer0@timer0,c
  2498  00095C  ECF8  F006         	call	i2_WriteTimer0	;wreg free
  2499                           
  2500                           ;Menu_System.c: 62: INTCONbits.TMR0IF = 0;
  2501  000960  94F2               	bcf	intcon,2,c	;volatile
  2502                           
  2503                           ;Menu_System.c: 64: count++;
  2504  000962  2A2A               	incf	_count,f,c
  2505                           
  2506                           ;Menu_System.c: 65: count_hb++;
  2507  000964  2A2B               	incf	_count_hb,f,c
  2508                           
  2509                           ;Menu_System.c: 66: if(count == 10){
  2510  000966  0E0A               	movlw	10
  2511  000968  182A               	xorwf	_count,w,c
  2512  00096A  A4D8               	btfss	status,2,c
  2513  00096C  D003               	goto	i2l1415
  2514                           
  2515                           ;Menu_System.c: 67: count = 0;
  2516  00096E  0E00               	movlw	0
  2517  000970  6E2A               	movwf	_count,c
  2518                           
  2519                           ;Menu_System.c: 68: Tick_E = 1;
  2520  000972  8032               	bsf	_Tick_E/(0+8),_Tick_E& (0+7),c
  2521  000974                     i2l1415:
  2522                           
  2523                           ;Menu_System.c: 69: }
  2524                           ;Menu_System.c: 71: if(count_hb == 100){
  2525  000974  0E64               	movlw	100
  2526  000976  182B               	xorwf	_count_hb,w,c
  2527  000978  A4D8               	btfss	status,2,c
  2528  00097A  D010               	goto	i2l135
  2529                           
  2530                           ;Menu_System.c: 72: PORTCbits.RC7 = ~PORTCbits.RC7;
  2531  00097C  AE82               	btfss	3970,7,c	;volatile
  2532  00097E  D002               	goto	i2u73_40
  2533  000980  0E01               	movlw	1
  2534  000982  D001               	goto	i2u73_46
  2535  000984                     i2u73_40:
  2536  000984  0E00               	movlw	0
  2537  000986                     i2u73_46:
  2538  000986  0AFF               	xorlw	255
  2539  000988  6E05               	movwf	??_myIsr& (0+255),c
  2540  00098A  3205               	rrcf	??_myIsr,f,c
  2541  00098C  3205               	rrcf	??_myIsr,f,c
  2542  00098E  5082               	movf	3970,w,c	;volatile
  2543  000990  1805               	xorwf	??_myIsr,w,c
  2544  000992  0B7F               	andlw	-129
  2545  000994  1805               	xorwf	??_myIsr,w,c
  2546  000996  6E82               	movwf	3970,c	;volatile
  2547                           
  2548                           ;Menu_System.c: 73: count_hb = 0;
  2549  000998  0E00               	movlw	0
  2550  00099A  6E2B               	movwf	_count_hb,c
  2551  00099C                     i2l135:
  2552  00099C  C013  FFF5         	movff	??_myIsr+14,tablat
  2553  0009A0  C012  FFF8         	movff	??_myIsr+13,tblptru
  2554  0009A4  C011  FFF7         	movff	??_myIsr+12,tblptrh
  2555  0009A8  C010  FFF6         	movff	??_myIsr+11,tblptrl
  2556  0009AC  C00F  FFF4         	movff	??_myIsr+10,prodh
  2557  0009B0  C00E  FFF3         	movff	??_myIsr+9,prodl
  2558  0009B4  C00D  FFDA         	movff	??_myIsr+8,fsr2h
  2559  0009B8  C00C  FFD9         	movff	??_myIsr+7,fsr2l
  2560  0009BC  C00B  FFE2         	movff	??_myIsr+6,fsr1h
  2561  0009C0  C00A  FFE1         	movff	??_myIsr+5,fsr1l
  2562  0009C4  C009  FFEA         	movff	??_myIsr+4,fsr0h
  2563  0009C8  C008  FFE9         	movff	??_myIsr+3,fsr0l
  2564  0009CC  C007  FFFB         	movff	??_myIsr+2,pclatu
  2565  0009D0  C006  FFFA         	movff	??_myIsr+1,pclath
  2566  0009D4  9233               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2567  0009D6  0011               	retfie		f
  2568  0009D8                     __end_of_myIsr:
  2569                           	opt stack 0
  2570                           pclatu	equ	0xFFB
  2571                           pclath	equ	0xFFA
  2572                           tblptru	equ	0xFF8
  2573                           tblptrh	equ	0xFF7
  2574                           tblptrl	equ	0xFF6
  2575                           tablat	equ	0xFF5
  2576                           prodh	equ	0xFF4
  2577                           prodl	equ	0xFF3
  2578                           intcon	equ	0xFF2
  2579                           postinc0	equ	0xFEE
  2580                           fsr0h	equ	0xFEA
  2581                           fsr0l	equ	0xFE9
  2582                           wreg	equ	0xFE8
  2583                           postdec1	equ	0xFE5
  2584                           fsr1h	equ	0xFE2
  2585                           fsr1l	equ	0xFE1
  2586                           fsr2h	equ	0xFDA
  2587                           fsr2l	equ	0xFD9
  2588                           status	equ	0xFD8
  2589                           
  2590 ;; *************** function i2_WriteTimer0 *****************
  2591 ;; Defined at:
  2592 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  timer0          2    0[COMRAM] unsigned int 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  WriteTimer0     2    2[COMRAM] struct Timers
  2597 ;; Return value:  Size  Location     Type
  2598 ;;		None               void
  2599 ;; Registers used:
  2600 ;;		None
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2606 ;;      Params:         2       0       0       0       0       0       0
  2607 ;;      Locals:         2       0       0       0       0       0       0
  2608 ;;      Temps:          0       0       0       0       0       0       0
  2609 ;;      Totals:         4       0       0       0       0       0       0
  2610 ;;Total ram usage:        4 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; This function calls:
  2613 ;;		Nothing
  2614 ;; This function is called by:
  2615 ;;		_myIsr
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text17
  2620  000DF0                     __ptext17:
  2621                           	opt stack 0
  2622  000DF0                     i2_WriteTimer0:
  2623                           	opt stack 25
  2624                           
  2625                           ;incstack = 0
  2626  000DF0  C001  F003         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  2627  000DF4  C002  F004         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  2628  000DF8  C004  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  2629  000DFC  C003  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  2630  000E00  0012               	return		;funcret
  2631  000E02                     __end_ofi2_WriteTimer0:
  2632                           	opt stack 0
  2633                           pclatu	equ	0xFFB
  2634                           pclath	equ	0xFFA
  2635                           tblptru	equ	0xFF8
  2636                           tblptrh	equ	0xFF7
  2637                           tblptrl	equ	0xFF6
  2638                           tablat	equ	0xFF5
  2639                           prodh	equ	0xFF4
  2640                           prodl	equ	0xFF3
  2641                           intcon	equ	0xFF2
  2642                           postinc0	equ	0xFEE
  2643                           fsr0h	equ	0xFEA
  2644                           fsr0l	equ	0xFE9
  2645                           wreg	equ	0xFE8
  2646                           postdec1	equ	0xFE5
  2647                           fsr1h	equ	0xFE2
  2648                           fsr1l	equ	0xFE1
  2649                           fsr2h	equ	0xFDA
  2650                           fsr2l	equ	0xFD9
  2651                           status	equ	0xFD8
  2652                           
  2653 ;; *************** function _Find_Button_Press *****************
  2654 ;; Defined at:
  2655 ;;		line 36 in file "../../Buttons_Debounce_State_Mch-master/Buttons_Debounce.X/Buttons_Debounce.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;		None
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;		None
  2660 ;; Return value:  Size  Location     Type
  2661 ;;		None               void
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2669 ;;      Params:         0       0       0       0       0       0       0
  2670 ;;      Locals:         0       0       0       0       0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0
  2672 ;;      Totals:         0       0       0       0       0       0       0
  2673 ;;Total ram usage:        0 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; This function calls:
  2676 ;;		Nothing
  2677 ;; This function is called by:
  2678 ;;		_myIsr
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text18
  2683  000AE6                     __ptext18:
  2684                           	opt stack 0
  2685  000AE6                     _Find_Button_Press:
  2686                           	opt stack 25
  2687                           
  2688                           ;Buttons_Debounce.c: 38: static states Button_State=Waiting;
  2689                           ;Buttons_Debounce.c: 39: static unsigned char Button_Count=0;
  2690                           ;Buttons_Debounce.c: 40: static Bit_Mask Temp_Press;
  2691                           ;Buttons_Debounce.c: 44: switch (Button_State){
  2692                           
  2693                           ;incstack = 0
  2694  000AE6  D030               	goto	i2l1041
  2695  000AE8                     i2l1017:
  2696                           
  2697                           ;Buttons_Debounce.c: 46: if(PORTB)
  2698  000AE8  5081               	movf	3969,w,c	;volatile
  2699  000AEA  B4D8               	btfsc	status,2,c
  2700  000AEC  0012               	return	
  2701                           
  2702                           ;Buttons_Debounce.c: 47: {
  2703                           ;Buttons_Debounce.c: 48: Button_State = Detected;
  2704  000AEE  0E01               	movlw	1
  2705  000AF0  6E27               	movwf	Find_Button_Press@Button_State,c
  2706                           
  2707                           ;Buttons_Debounce.c: 49: Button_Count = 0;
  2708  000AF2  0E00               	movlw	0
  2709  000AF4  6E26               	movwf	Find_Button_Press@Button_Count,c
  2710                           
  2711                           ;Buttons_Debounce.c: 51: Temp_Press.Full=PORTB;
  2712  000AF6  CF81 F028          	movff	3969,Find_Button_Press@Temp_Press	;volatile
  2713                           
  2714                           ;Buttons_Debounce.c: 52: }
  2715                           ;Buttons_Debounce.c: 53: break;
  2716  000AFA  0012               	return	
  2717  000AFC                     i2l1023:
  2718                           
  2719                           ;Buttons_Debounce.c: 55: if (Temp_Press.Full == PORTB)
  2720  000AFC  5081               	movf	3969,w,c	;volatile
  2721  000AFE  1828               	xorwf	Find_Button_Press@Temp_Press,w,c
  2722  000B00  A4D8               	btfss	status,2,c
  2723  000B02  D007               	goto	i2l1031
  2724                           
  2725                           ;Buttons_Debounce.c: 56: {
  2726                           ;Buttons_Debounce.c: 57: ++Button_Count;
  2727  000B04  2A26               	incf	Find_Button_Press@Button_Count,f,c
  2728                           
  2729                           ;Buttons_Debounce.c: 58: if (Button_Count > 10)
  2730  000B06  0E0A               	movlw	10
  2731  000B08  6426               	cpfsgt	Find_Button_Press@Button_Count,c
  2732  000B0A  0012               	return	
  2733                           
  2734                           ;Buttons_Debounce.c: 59: {
  2735                           ;Buttons_Debounce.c: 60: Button_State = WaitForRelease;
  2736  000B0C  0E02               	movlw	2
  2737  000B0E  6E27               	movwf	Find_Button_Press@Button_State,c
  2738                           
  2739                           ;Buttons_Debounce.c: 61: }
  2740                           ;Buttons_Debounce.c: 62: }
  2741  000B10  0012               	return	
  2742  000B12                     i2l1031:
  2743                           
  2744                           ;Buttons_Debounce.c: 63: else
  2745                           ;Buttons_Debounce.c: 64: {
  2746                           ;Buttons_Debounce.c: 65: Button_State = Waiting;
  2747  000B12  0E00               	movlw	0
  2748  000B14  6E27               	movwf	Find_Button_Press@Button_State,c
  2749                           
  2750                           ;Buttons_Debounce.c: 66: }
  2751                           ;Buttons_Debounce.c: 67: break;
  2752  000B16  0012               	return	
  2753  000B18                     i2l1033:
  2754                           
  2755                           ;Buttons_Debounce.c: 69: if (!PORTB)
  2756  000B18  5081               	movf	3969,w,c	;volatile
  2757  000B1A  A4D8               	btfss	status,2,c
  2758  000B1C  0012               	return	
  2759                           
  2760                           ;Buttons_Debounce.c: 70: {
  2761                           ;Buttons_Debounce.c: 71: Button_State = Update;
  2762  000B1E  0E03               	movlw	3
  2763  000B20  6E27               	movwf	Find_Button_Press@Button_State,c
  2764                           
  2765                           ;Buttons_Debounce.c: 72: }
  2766                           ;Buttons_Debounce.c: 73: break;
  2767  000B22  0012               	return	
  2768  000B24                     i2l71:
  2769                           
  2770                           ;Buttons_Debounce.c: 75: {
  2771                           ;Buttons_Debounce.c: 76: Button_Press = Temp_Press;
  2772  000B24  C028  F029         	movff	Find_Button_Press@Temp_Press,_Button_Press
  2773                           
  2774                           ;Buttons_Debounce.c: 77: Button_State = Waiting;
  2775  000B28  0E00               	movlw	0
  2776  000B2A  6E27               	movwf	Find_Button_Press@Button_State,c
  2777                           
  2778                           ;Buttons_Debounce.c: 78: Button_Count = 0;
  2779  000B2C  0E00               	movlw	0
  2780  000B2E  6E26               	movwf	Find_Button_Press@Button_Count,c
  2781                           
  2782                           ;Buttons_Debounce.c: 79: Temp_Press.Full=0;
  2783  000B30  0E00               	movlw	0
  2784  000B32  6E28               	movwf	Find_Button_Press@Temp_Press,c
  2785                           
  2786                           ;Buttons_Debounce.c: 80: }
  2787                           ;Buttons_Debounce.c: 81: break;
  2788  000B34  0012               	return	
  2789  000B36                     i2l1039:
  2790                           
  2791                           ;Buttons_Debounce.c: 83: {
  2792                           ;Buttons_Debounce.c: 84: Button_State = Waiting;
  2793  000B36  0E00               	movlw	0
  2794  000B38  6E27               	movwf	Find_Button_Press@Button_State,c
  2795                           
  2796                           ;Buttons_Debounce.c: 85: Button_Count = 0;
  2797  000B3A  0E00               	movlw	0
  2798  000B3C  6E26               	movwf	Find_Button_Press@Button_Count,c
  2799                           
  2800                           ;Buttons_Debounce.c: 86: Temp_Press.Full=0;
  2801  000B3E  0E00               	movlw	0
  2802  000B40  6E28               	movwf	Find_Button_Press@Temp_Press,c
  2803                           
  2804                           ;Buttons_Debounce.c: 87: Button_Press.Full=0;
  2805  000B42  0E00               	movlw	0
  2806  000B44  6E29               	movwf	_Button_Press,c
  2807                           
  2808                           ;Buttons_Debounce.c: 88: }
  2809                           ;Buttons_Debounce.c: 89: }
  2810  000B46  0012               	return	
  2811  000B48                     i2l1041:
  2812  000B48  5027               	movf	Find_Button_Press@Button_State,w,c
  2813                           
  2814                           ; Switch size 1, requested type "space"
  2815                           ; Number of cases is 4, Range of values is 0 to 3
  2816                           ; switch strategies available:
  2817                           ; Name         Instructions Cycles
  2818                           ; simple_byte           13     7 (average)
  2819                           ;	Chosen strategy is simple_byte
  2820  000B4A  0A00               	xorlw	0	; case 0
  2821  000B4C  B4D8               	btfsc	status,2,c
  2822  000B4E  D7CC               	goto	i2l1017
  2823  000B50  0A01               	xorlw	1	; case 1
  2824  000B52  B4D8               	btfsc	status,2,c
  2825  000B54  D7D3               	goto	i2l1023
  2826  000B56  0A03               	xorlw	3	; case 2
  2827  000B58  B4D8               	btfsc	status,2,c
  2828  000B5A  D7DE               	goto	i2l1033
  2829  000B5C  0A01               	xorlw	1	; case 3
  2830  000B5E  B4D8               	btfsc	status,2,c
  2831  000B60  D7E1               	goto	i2l71
  2832  000B62  D7E9               	goto	i2l1039
  2833  000B64                     __end_of_Find_Button_Press:
  2834                           	opt stack 0
  2835                           pclatu	equ	0xFFB
  2836                           pclath	equ	0xFFA
  2837                           tblptru	equ	0xFF8
  2838                           tblptrh	equ	0xFF7
  2839                           tblptrl	equ	0xFF6
  2840                           tablat	equ	0xFF5
  2841                           prodh	equ	0xFF4
  2842                           prodl	equ	0xFF3
  2843                           intcon	equ	0xFF2
  2844                           postinc0	equ	0xFEE
  2845                           fsr0h	equ	0xFEA
  2846                           fsr0l	equ	0xFE9
  2847                           wreg	equ	0xFE8
  2848                           postdec1	equ	0xFE5
  2849                           fsr1h	equ	0xFE2
  2850                           fsr1l	equ	0xFE1
  2851                           fsr2h	equ	0xFDA
  2852                           fsr2l	equ	0xFD9
  2853                           status	equ	0xFD8
  2854                           pclatu	equ	0xFFB
  2855                           pclath	equ	0xFFA
  2856                           tblptru	equ	0xFF8
  2857                           tblptrh	equ	0xFF7
  2858                           tblptrl	equ	0xFF6
  2859                           tablat	equ	0xFF5
  2860                           prodh	equ	0xFF4
  2861                           prodl	equ	0xFF3
  2862                           intcon	equ	0xFF2
  2863                           postinc0	equ	0xFEE
  2864                           fsr0h	equ	0xFEA
  2865                           fsr0l	equ	0xFE9
  2866                           wreg	equ	0xFE8
  2867                           postdec1	equ	0xFE5
  2868                           fsr1h	equ	0xFE2
  2869                           fsr1l	equ	0xFE1
  2870                           fsr2h	equ	0xFDA
  2871                           fsr2l	equ	0xFD9
  2872                           status	equ	0xFD8
  2873                           
  2874                           	psect	rparam
  2875  0000                     pclatu	equ	0xFFB
  2876                           pclath	equ	0xFFA
  2877                           tblptru	equ	0xFF8
  2878                           tblptrh	equ	0xFF7
  2879                           tblptrl	equ	0xFF6
  2880                           tablat	equ	0xFF5
  2881                           prodh	equ	0xFF4
  2882                           prodl	equ	0xFF3
  2883                           intcon	equ	0xFF2
  2884                           postinc0	equ	0xFEE
  2885                           fsr0h	equ	0xFEA
  2886                           fsr0l	equ	0xFE9
  2887                           wreg	equ	0xFE8
  2888                           postdec1	equ	0xFE5
  2889                           fsr1h	equ	0xFE2
  2890                           fsr1l	equ	0xFE1
  2891                           fsr2h	equ	0xFDA
  2892                           fsr2l	equ	0xFD9
  2893                           status	equ	0xFD8
  2894                           
  2895                           	psect	temp
  2896  000033                     btemp:
  2897                           	opt stack 0
  2898  000033                     	ds	1
  2899  0000                     int$flags	set	btemp
  2900                           pclatu	equ	0xFFB
  2901                           pclath	equ	0xFFA
  2902                           tblptru	equ	0xFF8
  2903                           tblptrh	equ	0xFF7
  2904                           tblptrl	equ	0xFF6
  2905                           tablat	equ	0xFF5
  2906                           prodh	equ	0xFF4
  2907                           prodl	equ	0xFF3
  2908                           intcon	equ	0xFF2
  2909                           postinc0	equ	0xFEE
  2910                           fsr0h	equ	0xFEA
  2911                           fsr0l	equ	0xFE9
  2912                           wreg	equ	0xFE8
  2913                           postdec1	equ	0xFE5
  2914                           fsr1h	equ	0xFE2
  2915                           fsr1l	equ	0xFE1
  2916                           fsr2h	equ	0xFDA
  2917                           fsr2l	equ	0xFD9
  2918                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    165
    Data        6
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     37      50
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    startup	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), 

    problem	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    lcd_print@mess	PTR const unsigned char  size(2) Largest target is 160
		 -> msg_ary(CODE[160]), STR_2(CODE[12]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Window
    _lcd_start->_lcd_clear
    _lcd_display_value->___awdiv
    _Window->_lcd_print
    _lcd_print->_lcd_print_ch
    _lcd_print_ch->_lcd_raw_send
    _lcd_cursor->_lcd_command
    _lcd_clear->_lcd_command
    _lcd_command->_lcd_raw_send
    _Initial->_WriteTimer0
    _Initial->_delay_s

Critical Paths under _myIsr in COMRAM

    _myIsr->i2_WriteTimer0

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    7994
                                             32 COMRAM     5     5      0
                            _Initial
                             _Window
                            _delay_s
                          _lcd_clear
                         _lcd_cursor
                  _lcd_display_value
                          _lcd_print
                          _lcd_start
 ---------------------------------------------------------------------------------
 (1) _lcd_start                                            3     3      0     812
                                             25 COMRAM     2     2      0
                          _lcd_clear
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_display_value                                    4     4      0    1909
                                             27 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Window                                               3     3      0    2382
                                             29 COMRAM     3     3      0
                          _lcd_clear
                         _lcd_cursor
                          _lcd_print
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     766
                                             24 COMRAM     5     3      2
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) _lcd_print_ch                                         1     1      0     372
                                             23 COMRAM     1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor                                           2     1      1    1200
                                             24 COMRAM     2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0     372
                                             24 COMRAM     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          1     1      0     372
                                             23 COMRAM     1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (3) _lcd_raw_send                                         4     3      1     350
                                             19 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Initial                                              0     0      0     285
                         _OpenTimer0
                        _WriteTimer0
                            _delay_s
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              4     4      0      60
                                             19 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     195
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      30
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myIsr                                               15    15      0      93
                                              4 COMRAM    15    15      0
                  _Find_Button_Press
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (6) i2_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _Find_Button_Press                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initial
     _OpenTimer0
     _WriteTimer0
     _delay_s
   _Window
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_cursor
       _lcd_command
         _lcd_raw_send
     _lcd_print
       _lcd_print_ch
         _lcd_raw_send
   _delay_s
   _lcd_clear
     _lcd_command
       _lcd_raw_send
   _lcd_cursor
     _lcd_command
       _lcd_raw_send
   _lcd_display_value
     ___awdiv
     ___awmod
     _lcd_print_ch
       _lcd_raw_send
   _lcd_print
     _lcd_print_ch
       _lcd_raw_send
   _lcd_start
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_command
       _lcd_raw_send

 _myIsr (ROOT)
   _Find_Button_Press
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     25      32       1       39.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      32      15        0.0%
DATA                 0      0      32       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Mar 01 12:44:07 2017

                ?_lcd_raw_send 0014                   ___awdiv@sign 0019                    __CFG_BORV$3 000000  
                ?_lcd_print_ch 0001                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                    __CFG_OSC$HS 000000  
                          l152 0730                            l161 0798                            l154 0740  
                          l149 0720                            l159 0792                            l194 0DBE  
                          l195 0DC0                            l893 0D56                            l887 0D4A  
                          l897 0D6A                            l889 0D4E                            l899 0D6C  
                 __CFG_CPB$OFF 000000                            u505 0874                   __CFG_CPD$OFF 000000  
                          u515 088C                            u516 088E                            u525 08AE  
                          u526 08B0                            u485 083A                            u805 078C  
                          u830 07CE                            u495 0856                            u850 07FA  
                          u907 0890                            u917 0898                            u845 07D0  
                          u790 078A                            u927 08A0                            u937 0900  
                          u865 07FC                            u947 0908                            u957 0910  
                          u877 0C9A                            u967 0D5C                            u887 0D82  
                          u897 0D98           __size_of_WriteTimer0 0012                   ___awmod@sign 0019  
                          prod 000FF3                            wreg 000FE8                    lcd_cursor@x 001A  
                  lcd_cursor@y 0019                   __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000  
                         l1301 0B78                           l1311 0B9A                           l1233 0DD0  
                         l1241 0C40                           l1313 0B9E                           l1321 0BBC  
                         l1305 0B84                           l1245 0C66                           l1325 0BCA  
                         l1317 0BB2                           l1309 0B92                           l1271 0AA4  
                         l1263 0A86                           l1335 0CA6                           l1281 0AC4  
                         l1273 0AA8                           l1257 0A76                           l1345 0CCA  
                         l1339 0CAE                           l1269 0A9C                           l1285 0ACE  
                         l1445 0716                           l1463 0750                           l1289 0ADC  
                         l1465 0760                           l1483 07D6                           l1491 0804  
                         l1493 0814                           STR_1 06B2                           STR_2 06A6  
                         _LATC 000F8B                           i2l71 0B24                           _main 06BC  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 0033         __size_ofi2_WriteTimer0 0012                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 0016  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                 ??_lcd_raw_send 0015  
                 ___param_bank 000010                __end_of_Initial 0D42                 ??_lcd_print_ch 0018  
                lcd_command@in 0018                          ?_main 0001                __end_of___awdiv 0AE6  
              __end_of___awmod 0BD4                          _T0CON 000FD5                ___awdiv@divisor 0016  
                        i2l135 099C                ___awdiv@counter 0018                          _TMR0H 000FD7  
                        _TMR0L 000FD6                          _PORTB 000F81                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                __CFG_PWRT$OFF 000000                __end_of_delay_s 0D76                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000  
               __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000  
               __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
                        _count 002A                          _myIsr 0008                __end_of_msg_ary 06A6  
               __pbitbssCOMRAM 0190                          tablat 000FF5                          status 000FD8  
              __initialization 0CD0                   __end_of_main 081C                         ??_main 0021  
                i2_WriteTimer0 0DF0                  __activetblptr 000002                         _ADCON0 000FC2  
                       _ADCON1 000FC1                         _ADRESH 000FC4                         ?_myIsr 0001  
             ___awdiv@dividend 0014                         i2l1031 0B12                         i2l1023 0AFC  
                       i2l1033 0B18                         i2l1017 0AE8                         i2l1041 0B48  
                       i2l1039 0B36                         i2l1415 0974                     _OpenTimer0 0DA4  
                    ??_Initial 0018                 __CFG_XINST$OFF 000000                  lcd_print@mess 0019  
                       _Tick_E 0190               __end_of_lcd_init 0606           __size_of_lcd_command 000E  
                       _Window 0BD4                      ??___awdiv 0018                 __CFG_STVREN$ON 000000  
                    ??___awmod 0018               OpenTimer0@config 0014               ___awdiv@quotient 001A  
              ___awmod@divisor 0016                      ??_delay_s 0014                 ?i2_WriteTimer0 0001  
              ___awmod@counter 0018                   __pdataCOMRAM 002C                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
         __end_of_lcd_raw_send 0918           __end_of_lcd_print_ch 0E10                     __accesstop 0080  
      __end_of__initialization 0CFE                __CFG_PBADEN$OFF 000000                  ___rparam_used 000001  
               __pcstackCOMRAM 0001                  __end_of_myIsr 09D8             __size_of_lcd_clear 002E  
           __size_of_lcd_print 0054             __size_of_lcd_start 0042                        ??_myIsr 0005  
                  ?_OpenTimer0 0001                 lcd_raw_send@RS 0014                 lcd_raw_send@in 0017  
                      ?_Window 0001          lcd_display_value@tens 001D                ??i2_WriteTimer0 0003  
             WriteTimer0@timer 0016                  ??_WriteTimer0 0016                     _lcd_cursor 0DC4  
                      i2u73_40 0984                        i2u73_46 0986            i2WriteTimer0@timer0 0001  
                      _Initial 0D0C                        __Hparam 0000                        __Lparam 0000  
            __end_of_lcd_clear 0DA4    Find_Button_Press@Temp_Press 0028                __size_of_Window 0066  
            __end_of_lcd_print 0C8E              __end_of_lcd_start 0CD0                 lcd_print_ch@in 0018  
                      ___awdiv 0A62                        ___awmod 0B64                   __psmallconst 0600  
                      __pcinit 0CD0                        _delay_s 0D42                        __ramtop 0600  
          __size_of_OpenTimer0 0020                        __ptext0 06BC                        __ptext1 0C8E  
                      __ptext2 09D8                        __ptext3 0B64                        __ptext4 0A62  
                      __ptext5 0BD4                        __ptext6 0C3A                        __ptext7 0E02  
                      __ptext8 0DC4                        __ptext9 0D76                      _T0CONbits 000FD5  
        __size_of_lcd_raw_send 00FC               ___awmod@dividend 0014                        _msg_ary 0606  
          __end_of_WriteTimer0 0DF0          __size_of_lcd_print_ch 000E                        _problem 002C  
                      _startup 002E                 __pintcode_body 0918           end_of_initialization 0CFE  
                __Lmediumconst 0000                        int_func 0918              _Find_Button_Press 0AE6  
           ?_Find_Button_Press 0001                        postdec1 000FE5                        postinc0 000FEE  
                 _lcd_raw_send 081C            ??_Find_Button_Press 0001                   _lcd_print_ch 0E02  
                    _PORTCbits 000F82                    ?_lcd_cursor 0019      __end_of_Find_Button_Press 0B64  
                ??_lcd_command 0018                     lcd_print@i 001D                     main@motor1 0024  
                   lcd_start@i 001B              _lcd_display_value 09D8                 __end_of_Window 0C3A  
           ?_lcd_display_value 0001                  __pidataCOMRAM 0E1E                    _WriteTimer0 0DDE  
          ??_lcd_display_value 001C            start_initialization 0CD0                   _Button_Press 0029  
                 ??_OpenTimer0 0014      __end_of_lcd_display_value 0A62                       ??_Window 001E  
          __size_of_lcd_cursor 001A            __end_of_lcd_command 0E1E               __CFG_LPT1OSC$OFF 000000  
           __end_of_OpenTimer0 0DC4                    __pbssCOMRAM 0026                      Window@num 0020  
   __size_of_Find_Button_Press 007E                       ?_Initial 0001              __CFG_CCP2MX$PORTC 000000  
                    __pintcode 0008                       ?___awdiv 0014                       ?___awmod 0014  
                    _lcd_clear 0D76                       ?_delay_s 0001          __end_ofi2_WriteTimer0 0E02  
                    _lcd_print 0C3A         lcd_display_value@hunds 001C                      _lcd_start 0C8E  
       lcd_display_value@value 001F         lcd_display_value@units 001E                    __smallconst 0600  
            WriteTimer0@timer0 0014             i2WriteTimer0@timer 0003                 __size_of_myIsr 09D0  
                     _LATDbits 000F8C                    _lcd_command 0E10     __size_of_lcd_display_value 008A  
             main@my_mch_state 0023               __CFG_WDTPS$32768 000000                      main@F4350 0030  
                   ?_lcd_clear 0001                     ?_lcd_print 0019                     ?_lcd_start 0001  
                   _ADCON0bits 000FC2                   ??_lcd_cursor 001A                      copy_data0 0CF2  
                     __Hrparam 0000               __size_of_Initial 0036                       __Lrparam 0000  
           __CFG_BOREN$SBORDIS 000000             __end_of_lcd_cursor 0DDE               __size_of___awdiv 0084  
             __size_of___awmod 0070                   ?_WriteTimer0 0014               __size_of_delay_s 0034  
                     __ptext10 0E10                       __ptext11 081C                       __ptext12 0D0C  
                     __ptext13 0D42                       __ptext14 0DDE                       __ptext15 0DA4  
                     __ptext17 0DF0                       __ptext18 0AE6                       _lcd_init 0601  
                     _count_hb 002B                  __size_of_main 0160                       delay_s@i 0017  
                     delay_s@j 0016                       int$flags 0033                    ??_lcd_clear 0019  
                  delay_s@secs 0015                    ??_lcd_print 001B                    ??_lcd_start 001A  
                   _INTCONbits 000FF2                       intlevel2 0000                    main@ADCREAD 0022  
Find_Button_Press@Button_Count 0026  Find_Button_Press@Button_State 0027                   ?_lcd_command 0001  
