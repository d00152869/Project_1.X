

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Feb 22 12:54:15 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           	psect	idataCOMRAM
    37  000DF0                     __pidataCOMRAM:
    38                           	opt stack 0
    39                           
    40                           ;initializer for _problem
    41  000DF0  B2                 	db	low STR_1
    42  000DF1  06                 	db	high STR_1
    43                           
    44                           ;initializer for _startup
    45  000DF2  A6                 	db	low STR_2
    46  000DF3  06                 	db	high STR_2
    47                           
    48                           	psect	smallconst
    49  000600                     __psmallconst:
    50                           	opt stack 0
    51  000600  00                 	db	0
    52  000601                     _lcd_init:
    53                           	opt stack 0
    54  000601  33                 	db	51
    55  000602  32                 	db	50
    56  000603  2C                 	db	44
    57  000604  06                 	db	6
    58  000605  0C                 	db	12
    59  000606                     __end_of_lcd_init:
    60                           	opt stack 0
    61  000606                     _msg_ary:
    62                           	opt stack 0
    63  000606  44                 	db	68
    64  000607  65                 	db	101
    65  000608  73                 	db	115
    66  000609  69                 	db	105
    67  00060A  72                 	db	114
    68  00060B  65                 	db	101
    69  00060C  64                 	db	100
    70  00060D  3E                 	db	62
    71  00060E  20                 	db	32
    72  00060F  00                 	db	0
    73  000610  00                 	db	0
    74  000611  00                 	db	0
    75  000612  00                 	db	0
    76  000613  00                 	db	0
    77  000614  00                 	db	0
    78  000615  00                 	db	0
    79  000616  41                 	db	65
    80  000617  63                 	db	99
    81  000618  74                 	db	116
    82  000619  75                 	db	117
    83  00061A  61                 	db	97
    84  00061B  6C                 	db	108
    85  00061C  3E                 	db	62
    86  00061D  20                 	db	32
    87  00061E  00                 	db	0
    88  00061F  00                 	db	0
    89  000620  00                 	db	0
    90  000621  00                 	db	0
    91  000622  00                 	db	0
    92  000623  00                 	db	0
    93  000624  00                 	db	0
    94  000625  00                 	db	0
    95  000626  44                 	db	68
    96  000627  65                 	db	101
    97  000628  73                 	db	115
    98  000629  69                 	db	105
    99  00062A  72                 	db	114
   100  00062B  65                 	db	101
   101  00062C  64                 	db	100
   102  00062D  3E                 	db	62
   103  00062E  20                 	db	32
   104  00062F  00                 	db	0
   105  000630  00                 	db	0
   106  000631  00                 	db	0
   107  000632  00                 	db	0
   108  000633  00                 	db	0
   109  000634  00                 	db	0
   110  000635  00                 	db	0
   111  000636  41                 	db	65
   112  000637  44                 	db	68
   113  000638  43                 	db	67
   114  000639  52                 	db	82
   115  00063A  65                 	db	101
   116  00063B  61                 	db	97
   117  00063C  64                 	db	100
   118  00063D  3E                 	db	62
   119  00063E  20                 	db	32
   120  00063F  00                 	db	0
   121  000640  00                 	db	0
   122  000641  00                 	db	0
   123  000642  00                 	db	0
   124  000643  00                 	db	0
   125  000644  00                 	db	0
   126  000645  00                 	db	0
   127  000646  00                 	db	0
   128  000647  00                 	db	0
   129  000648  00                 	db	0
   130  000649  00                 	db	0
   131  00064A  00                 	db	0
   132  00064B  00                 	db	0
   133  00064C  00                 	db	0
   134  00064D  00                 	db	0
   135  00064E  00                 	db	0
   136  00064F  00                 	db	0
   137  000650  00                 	db	0
   138  000651  00                 	db	0
   139  000652  00                 	db	0
   140  000653  00                 	db	0
   141  000654  00                 	db	0
   142  000655  00                 	db	0
   143  000656  00                 	db	0
   144  000657  00                 	db	0
   145  000658  00                 	db	0
   146  000659  00                 	db	0
   147  00065A  00                 	db	0
   148  00065B  00                 	db	0
   149  00065C  00                 	db	0
   150  00065D  00                 	db	0
   151  00065E  00                 	db	0
   152  00065F  00                 	db	0
   153  000660  00                 	db	0
   154  000661  00                 	db	0
   155  000662  00                 	db	0
   156  000663  00                 	db	0
   157  000664  00                 	db	0
   158  000665  00                 	db	0
   159  000666  00                 	db	0
   160  000667  00                 	db	0
   161  000668  00                 	db	0
   162  000669  00                 	db	0
   163  00066A  00                 	db	0
   164  00066B  00                 	db	0
   165  00066C  00                 	db	0
   166  00066D  00                 	db	0
   167  00066E  00                 	db	0
   168  00066F  00                 	db	0
   169  000670  00                 	db	0
   170  000671  00                 	db	0
   171  000672  00                 	db	0
   172  000673  00                 	db	0
   173  000674  00                 	db	0
   174  000675  00                 	db	0
   175  000676  00                 	db	0
   176  000677  00                 	db	0
   177  000678  00                 	db	0
   178  000679  00                 	db	0
   179  00067A  00                 	db	0
   180  00067B  00                 	db	0
   181  00067C  00                 	db	0
   182  00067D  00                 	db	0
   183  00067E  00                 	db	0
   184  00067F  00                 	db	0
   185  000680  00                 	db	0
   186  000681  00                 	db	0
   187  000682  00                 	db	0
   188  000683  00                 	db	0
   189  000684  00                 	db	0
   190  000685  00                 	db	0
   191  000686  00                 	db	0
   192  000687  00                 	db	0
   193  000688  00                 	db	0
   194  000689  00                 	db	0
   195  00068A  00                 	db	0
   196  00068B  00                 	db	0
   197  00068C  00                 	db	0
   198  00068D  00                 	db	0
   199  00068E  00                 	db	0
   200  00068F  00                 	db	0
   201  000690  00                 	db	0
   202  000691  00                 	db	0
   203  000692  00                 	db	0
   204  000693  00                 	db	0
   205  000694  00                 	db	0
   206  000695  00                 	db	0
   207  000696  00                 	db	0
   208  000697  00                 	db	0
   209  000698  00                 	db	0
   210  000699  00                 	db	0
   211  00069A  00                 	db	0
   212  00069B  00                 	db	0
   213  00069C  00                 	db	0
   214  00069D  00                 	db	0
   215  00069E  00                 	db	0
   216  00069F  00                 	db	0
   217  0006A0  00                 	db	0
   218  0006A1  00                 	db	0
   219  0006A2  00                 	db	0
   220  0006A3  00                 	db	0
   221  0006A4  00                 	db	0
   222  0006A5  00                 	db	0
   223  0006A6                     __end_of_msg_ary:
   224                           	opt stack 0
   225  0000                     _ADCON0	set	4034
   226  0000                     _ADCON0bits	set	4034
   227  0000                     _ADCON1	set	4033
   228  0000                     _ADRESH	set	4036
   229  0000                     _INTCONbits	set	4082
   230  0000                     _LATC	set	3979
   231  0000                     _LATDbits	set	3980
   232  0000                     _PORTB	set	3969
   233  0000                     _PORTCbits	set	3970
   234  0000                     _T0CON	set	4053
   235  0000                     _T0CONbits	set	4053
   236  0000                     _TMR0H	set	4055
   237  0000                     _TMR0L	set	4054
   238  0000                     _TRISB	set	3987
   239  0000                     _TRISC	set	3988
   240  0000                     _TRISD	set	3989
   241  0006A6                     STR_2:
   242  0006A6  52                 	db	82	;'R'
   243  0006A7  65                 	db	101	;'e'
   244  0006A8  61                 	db	97	;'a'
   245  0006A9  64                 	db	100	;'d'
   246  0006AA  79                 	db	121	;'y'
   247  0006AB  20                 	db	32
   248  0006AC  74                 	db	116	;'t'
   249  0006AD  6F                 	db	111	;'o'
   250  0006AE  20                 	db	32
   251  0006AF  67                 	db	103	;'g'
   252  0006B0  6F                 	db	111	;'o'
   253  0006B1  00                 	db	0
   254  0006B2                     STR_1:
   255  0006B2  50                 	db	80	;'P'
   256  0006B3  72                 	db	114	;'r'
   257  0006B4  6F                 	db	111	;'o'
   258  0006B5  62                 	db	98	;'b'
   259  0006B6  6C                 	db	108	;'l'
   260  0006B7  65                 	db	101	;'e'
   261  0006B8  6D                 	db	109	;'m'
   262  0006B9  00                 	db	0
   263                           
   264                           ; #config settings
   265  0006BA  00                 	db	0	; dummy byte at the end
   266  0000                     
   267                           	psect	cinit
   268  000CA6                     __pcinit:
   269                           	opt stack 0
   270  000CA6                     start_initialization:
   271                           	opt stack 0
   272  000CA6                     __initialization:
   273                           	opt stack 0
   274                           
   275                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   276  000CA6  6A2F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   277                           
   278                           ; Clear objects allocated to COMRAM (6 bytes)
   279  000CA8  6A2A               	clrf	(__pbssCOMRAM+5)& (0+255),c
   280  000CAA  6A29               	clrf	(__pbssCOMRAM+4)& (0+255),c
   281  000CAC  6A28               	clrf	(__pbssCOMRAM+3)& (0+255),c
   282  000CAE  6A27               	clrf	(__pbssCOMRAM+2)& (0+255),c
   283  000CB0  6A26               	clrf	(__pbssCOMRAM+1)& (0+255),c
   284  000CB2  6A25               	clrf	__pbssCOMRAM& (0+255),c
   285                           
   286                           ; Initialize objects allocated to COMRAM (4 bytes)
   287                           ; load TBLPTR registers with __pidataCOMRAM
   288  000CB4  0EF0               	movlw	low __pidataCOMRAM
   289  000CB6  6EF6               	movwf	tblptrl,c
   290  000CB8  0E0D               	movlw	high __pidataCOMRAM
   291  000CBA  6EF7               	movwf	tblptrh,c
   292  000CBC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   293  000CBE  6EF8               	movwf	tblptru,c
   294  000CC0  EE00  F02B         	lfsr	0,__pdataCOMRAM
   295  000CC4  EE10 F004          	lfsr	1,4
   296  000CC8                     copy_data0:
   297  000CC8  0009               	tblrd		*+
   298  000CCA  CFF5 FFEE          	movff	tablat,postinc0
   299  000CCE  50E5               	movf	postdec1,w,c
   300  000CD0  50E1               	movf	fsr1l,w,c
   301  000CD2  E1FA               	bnz	copy_data0
   302  000CD4                     end_of_initialization:
   303                           	opt stack 0
   304  000CD4                     __end_of__initialization:
   305                           	opt stack 0
   306  000CD4  9030               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   307  000CD6  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   308  000CD8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   309  000CDA  6EF8               	movwf	tblptru,c
   310  000CDC  0100               	movlb	0
   311  000CDE  EF5E  F003         	goto	_main	;jump to C main() function
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           postinc0	equ	0xFEE
   317                           postdec1	equ	0xFE5
   318                           fsr1l	equ	0xFE1
   319                           
   320                           	psect	bitbssCOMRAM
   321  000178                     __pbitbssCOMRAM:
   322                           	opt stack 0
   323  000178                     _Tick_E:
   324                           	opt stack 0
   325  000178                     	ds	1
   326                           tblptru	equ	0xFF8
   327                           tblptrh	equ	0xFF7
   328                           tblptrl	equ	0xFF6
   329                           tablat	equ	0xFF5
   330                           postinc0	equ	0xFEE
   331                           postdec1	equ	0xFE5
   332                           fsr1l	equ	0xFE1
   333                           
   334                           	psect	bssCOMRAM
   335  000025                     __pbssCOMRAM:
   336                           	opt stack 0
   337  000025                     Find_Button_Press@Button_Count:
   338                           	opt stack 0
   339  000025                     	ds	1
   340  000026                     Find_Button_Press@Button_State:
   341                           	opt stack 0
   342  000026                     	ds	1
   343  000027                     Find_Button_Press@Temp_Press:
   344                           	opt stack 0
   345  000027                     	ds	1
   346  000028                     _Button_Press:
   347                           	opt stack 0
   348  000028                     	ds	1
   349  000029                     _count:
   350                           	opt stack 0
   351  000029                     	ds	1
   352  00002A                     _count_test:
   353                           	opt stack 0
   354  00002A                     	ds	1
   355                           tblptru	equ	0xFF8
   356                           tblptrh	equ	0xFF7
   357                           tblptrl	equ	0xFF6
   358                           tablat	equ	0xFF5
   359                           postinc0	equ	0xFEE
   360                           postdec1	equ	0xFE5
   361                           fsr1l	equ	0xFE1
   362                           
   363                           	psect	dataCOMRAM
   364  00002B                     __pdataCOMRAM:
   365                           	opt stack 0
   366  00002B                     _problem:
   367                           	opt stack 0
   368  00002B                     	ds	2
   369  00002D                     _startup:
   370                           	opt stack 0
   371  00002D                     	ds	2
   372                           tblptru	equ	0xFF8
   373                           tblptrh	equ	0xFF7
   374                           tblptrl	equ	0xFF6
   375                           tablat	equ	0xFF5
   376                           postinc0	equ	0xFEE
   377                           postdec1	equ	0xFE5
   378                           fsr1l	equ	0xFE1
   379                           
   380                           	psect	cstackCOMRAM
   381  000001                     __pcstackCOMRAM:
   382                           	opt stack 0
   383  000001                     i2WriteTimer0@timer0:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x0
   387  000001                     	ds	2
   388  000003                     i2WriteTimer0@timer:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x2
   392  000003                     	ds	2
   393  000005                     ??_myIsr:
   394                           
   395                           ; 0 bytes @ 0x4
   396  000005                     	ds	15
   397  000014                     ??_delay_s:
   398  000014                     ?___awdiv:
   399                           	opt stack 0
   400  000014                     ?___awmod:
   401                           	opt stack 0
   402  000014                     lcd_raw_send@RS:
   403                           	opt stack 0
   404  000014                     OpenTimer0@config:
   405                           	opt stack 0
   406  000014                     WriteTimer0@timer0:
   407                           	opt stack 0
   408  000014                     ___awdiv@dividend:
   409                           	opt stack 0
   410  000014                     ___awmod@dividend:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x13
   414  000014                     	ds	1
   415  000015                     ??_lcd_raw_send:
   416  000015                     delay_s@secs:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x14
   420  000015                     	ds	1
   421  000016                     delay_s@j:
   422                           	opt stack 0
   423  000016                     WriteTimer0@timer:
   424                           	opt stack 0
   425  000016                     ___awdiv@divisor:
   426                           	opt stack 0
   427  000016                     ___awmod@divisor:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x15
   431  000016                     	ds	1
   432  000017                     lcd_raw_send@in:
   433                           	opt stack 0
   434  000017                     delay_s@i:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x16
   438  000017                     	ds	1
   439  000018                     lcd_print_ch@in:
   440                           	opt stack 0
   441  000018                     lcd_command@in:
   442                           	opt stack 0
   443  000018                     ___awdiv@counter:
   444                           	opt stack 0
   445  000018                     ___awmod@counter:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0x17
   449  000018                     	ds	1
   450  000019                     ??_lcd_clear:
   451  000019                     lcd_cursor@y:
   452                           	opt stack 0
   453  000019                     ___awdiv@sign:
   454                           	opt stack 0
   455  000019                     ___awmod@sign:
   456                           	opt stack 0
   457  000019                     lcd_print@mess:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x18
   461  000019                     	ds	1
   462  00001A                     ??_lcd_start:
   463  00001A                     lcd_cursor@x:
   464                           	opt stack 0
   465  00001A                     ___awdiv@quotient:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x19
   469  00001A                     	ds	1
   470  00001B                     ??_lcd_print:
   471  00001B                     lcd_start@i:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0x1A
   475  00001B                     	ds	1
   476  00001C                     lcd_display_value@hunds:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x1B
   480  00001C                     	ds	1
   481  00001D                     lcd_print@i:
   482                           	opt stack 0
   483  00001D                     lcd_display_value@tens:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x1C
   487  00001D                     	ds	1
   488  00001E                     ??_Window:
   489  00001E                     lcd_display_value@units:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x1D
   493  00001E                     	ds	1
   494  00001F                     lcd_display_value@value:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x1E
   498  00001F                     	ds	1
   499  000020                     Window@num:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x1F
   503  000020                     	ds	1
   504  000021                     main@Actual_Value:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x20
   508  000021                     	ds	1
   509  000022                     main@Temp_Value:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x21
   513  000022                     	ds	1
   514  000023                     main@my_mch_state:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x22
   518  000023                     	ds	1
   519  000024                     main@Desired_Value:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x23
   523  000024                     	ds	1
   524                           tblptru	equ	0xFF8
   525                           tblptrh	equ	0xFF7
   526                           tblptrl	equ	0xFF6
   527                           tablat	equ	0xFF5
   528                           postinc0	equ	0xFEE
   529                           postdec1	equ	0xFE5
   530                           fsr1l	equ	0xFE1
   531                           
   532 ;;
   533 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   534 ;;
   535 ;; *************** function _main *****************
   536 ;; Defined at:
   537 ;;		line 94 in file "Menu_System.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;  Desired_Valu    1   35[COMRAM] unsigned char 
   542 ;;  my_mch_state    1   34[COMRAM] enum E4343
   543 ;;  Temp_Value      1   33[COMRAM] unsigned char 
   544 ;;  Actual_Value    1   32[COMRAM] unsigned char 
   545 ;; Return value:  Size  Location     Type
   546 ;;		None               void
   547 ;; Registers used:
   548 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   554 ;;      Params:         0       0       0       0       0       0       0
   555 ;;      Locals:         4       0       0       0       0       0       0
   556 ;;      Temps:          0       0       0       0       0       0       0
   557 ;;      Totals:         4       0       0       0       0       0       0
   558 ;;Total ram usage:        4 bytes
   559 ;; Hardware stack levels required when called:    6
   560 ;; This function calls:
   561 ;;		_Initial
   562 ;;		_Window
   563 ;;		_delay_s
   564 ;;		_lcd_clear
   565 ;;		_lcd_cursor
   566 ;;		_lcd_display_value
   567 ;;		_lcd_print
   568 ;;		_lcd_start
   569 ;; This function is called by:
   570 ;;		Startup code after reset
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           	psect	text0
   575  0006BC                     __ptext0:
   576                           	opt stack 0
   577  0006BC                     _main:
   578                           	opt stack 25
   579                           
   580                           ;Menu_System.c: 96: unsigned char Desired_Value = 50;
   581                           
   582                           ;incstack = 0
   583  0006BC  0E32               	movlw	50
   584  0006BE  6E24               	movwf	main@Desired_Value,c
   585                           
   586                           ;Menu_System.c: 97: unsigned char Actual_Value = 50;
   587  0006C0  0E32               	movlw	50
   588  0006C2  6E21               	movwf	main@Actual_Value,c
   589                           
   590                           ;Menu_System.c: 98: unsigned char Temp_Value = 0;
   591  0006C4  0E00               	movlw	0
   592  0006C6  6E22               	movwf	main@Temp_Value,c
   593                           
   594                           ;Menu_System.c: 100: typedef enum {MENU_0 = 0,MENU_1} states;
   595                           ;Menu_System.c: 101: states my_mch_state = MENU_1;
   596  0006C8  0E01               	movlw	1
   597  0006CA  6E23               	movwf	main@my_mch_state,c
   598                           
   599                           ;Menu_System.c: 103: Initial();
   600  0006CC  EC8B  F006         	call	_Initial	;wreg free
   601                           
   602                           ;Menu_System.c: 104: lcd_start ();
   603  0006D0  EC32  F006         	call	_lcd_start	;wreg free
   604                           
   605                           ;Menu_System.c: 105: lcd_cursor ( 0, 0 ) ;
   606  0006D4  0E00               	movlw	0
   607  0006D6  6E19               	movwf	lcd_cursor@y,c
   608  0006D8  0E00               	movlw	0
   609  0006DA  ECCB  F006         	call	_lcd_cursor
   610                           
   611                           ;Menu_System.c: 106: lcd_print ( startup ) ;
   612  0006DE  C02D  F019         	movff	_startup,lcd_print@mess
   613  0006E2  C02E  F01A         	movff	_startup+1,lcd_print@mess+1
   614  0006E6  EC08  F006         	call	_lcd_print	;wreg free
   615                           
   616                           ;Menu_System.c: 108: delay_s(2);
   617  0006EA  0E02               	movlw	2
   618  0006EC  EC71  F006         	call	_delay_s
   619                           
   620                           ;Menu_System.c: 110: Window(0);
   621  0006F0  0E00               	movlw	0
   622  0006F2  ECD5  F005         	call	_Window
   623                           
   624                           ;Menu_System.c: 111: lcd_cursor ( 10, 0 ) ;
   625  0006F6  0E00               	movlw	0
   626  0006F8  6E19               	movwf	lcd_cursor@y,c
   627  0006FA  0E0A               	movlw	10
   628  0006FC  ECCB  F006         	call	_lcd_cursor
   629                           
   630                           ;Menu_System.c: 112: lcd_display_value(Desired_Value);
   631  000700  5024               	movf	main@Desired_Value,w,c
   632  000702  ECD7  F004         	call	_lcd_display_value
   633                           
   634                           ;Menu_System.c: 113: lcd_cursor ( 10, 1 ) ;
   635  000706  0E01               	movlw	1
   636  000708  6E19               	movwf	lcd_cursor@y,c
   637  00070A  0E0A               	movlw	10
   638  00070C  ECCB  F006         	call	_lcd_cursor
   639                           
   640                           ;Menu_System.c: 114: lcd_display_value(Actual_Value);
   641  000710  5021               	movf	main@Actual_Value,w,c
   642  000712  ECD7  F004         	call	_lcd_display_value
   643  000716                     l1437:
   644  000716  5028               	movf	_Button_Press,w,c
   645  000718  B4D8               	btfsc	status,2,c
   646  00071A  B02F               	btfsc	_Tick_E/(0+8),_Tick_E& (0+7),c
   647  00071C  D019               	goto	l1455
   648  00071E  D7FB               	goto	l1437
   649  000720                     l145:
   650                           
   651                           ;Menu_System.c: 126: if (Button_Press.B0){
   652  000720  A028               	btfss	_Button_Press,0,c
   653  000722  D05C               	goto	l1485
   654                           
   655                           ;Menu_System.c: 127: my_mch_state = MENU_1;
   656  000724  0E01               	movlw	1
   657  000726  6E23               	movwf	main@my_mch_state,c
   658                           
   659                           ;Menu_System.c: 128: Window(1);
   660  000728  0E01               	movlw	1
   661  00072A  ECD5  F005         	call	_Window
   662                           
   663                           ;Menu_System.c: 129: }
   664                           ;Menu_System.c: 131: break;
   665  00072E  D056               	goto	l1485
   666  000730                     l148:
   667                           
   668                           ;Menu_System.c: 133: if (Button_Press.B0){
   669  000730  A028               	btfss	_Button_Press,0,c
   670  000732  D054               	goto	l1485
   671                           
   672                           ;Menu_System.c: 134: my_mch_state = MENU_0;
   673  000734  0E00               	movlw	0
   674  000736  6E23               	movwf	main@my_mch_state,c
   675                           
   676                           ;Menu_System.c: 135: Window(0);
   677  000738  0E00               	movlw	0
   678  00073A  ECD5  F005         	call	_Window
   679                           
   680                           ;Menu_System.c: 136: }
   681                           ;Menu_System.c: 137: break;
   682  00073E  D04E               	goto	l1485
   683  000740                     l150:
   684                           
   685                           ;Menu_System.c: 139: if (Button_Press.B0){
   686  000740  A028               	btfss	_Button_Press,0,c
   687  000742  D04C               	goto	l1485
   688                           
   689                           ;Menu_System.c: 140: my_mch_state = MENU_0;
   690  000744  0E00               	movlw	0
   691  000746  6E23               	movwf	main@my_mch_state,c
   692                           
   693                           ;Menu_System.c: 141: Window(0);
   694  000748  0E00               	movlw	0
   695  00074A  ECD5  F005         	call	_Window
   696                           
   697                           ;Menu_System.c: 144: }
   698                           
   699                           ;Menu_System.c: 142: }
   700                           ;Menu_System.c: 143: break;
   701  00074E  D046               	goto	l1485
   702  000750                     l1455:
   703  000750  5023               	movf	main@my_mch_state,w,c
   704                           
   705                           ; Switch size 1, requested type "space"
   706                           ; Number of cases is 2, Range of values is 0 to 1
   707                           ; switch strategies available:
   708                           ; Name         Instructions Cycles
   709                           ; simple_byte            7     4 (average)
   710                           ;	Chosen strategy is simple_byte
   711  000752  0A00               	xorlw	0	; case 0
   712  000754  B4D8               	btfsc	status,2,c
   713  000756  D7E4               	goto	l145
   714  000758  0A01               	xorlw	1	; case 1
   715  00075A  B4D8               	btfsc	status,2,c
   716  00075C  D7E9               	goto	l148
   717  00075E  D7F0               	goto	l150
   718  000760                     l1457:
   719                           
   720                           ;Menu_System.c: 150: lcd_cursor ( 10, 0 ) ;
   721  000760  0E00               	movlw	0
   722  000762  6E19               	movwf	lcd_cursor@y,c
   723  000764  0E0A               	movlw	10
   724  000766  ECCB  F006         	call	_lcd_cursor
   725                           
   726                           ;Menu_System.c: 151: lcd_display_value(Desired_Value);
   727  00076A  5024               	movf	main@Desired_Value,w,c
   728  00076C  ECD7  F004         	call	_lcd_display_value
   729                           
   730                           ;Menu_System.c: 152: lcd_cursor ( 10, 1 ) ;
   731  000770  0E01               	movlw	1
   732  000772  6E19               	movwf	lcd_cursor@y,c
   733  000774  0E0A               	movlw	10
   734  000776  ECCB  F006         	call	_lcd_cursor
   735                           
   736                           ;Menu_System.c: 153: lcd_display_value(Actual_Value);
   737  00077A  5021               	movf	main@Actual_Value,w,c
   738  00077C  ECD7  F004         	call	_lcd_display_value
   739                           
   740                           ;Menu_System.c: 154: LATC = 0x01;
   741  000780  0E01               	movlw	1
   742  000782  D02A               	goto	L2
   743  000784                     l155:
   744                           
   745                           ;Menu_System.c: 158: if (Button_Press.B1)
   746  000784  B228               	btfsc	_Button_Press,1,c
   747                           
   748                           ;Menu_System.c: 159: Desired_Value = Temp_Value;
   749  000786  C022  F024         	movff	main@Temp_Value,main@Desired_Value
   750  00078A                     l157:
   751  00078A  B2C2               	btfsc	4034,1,c	;volatile
   752  00078C  D7FE               	goto	l157
   753                           
   754                           ;Menu_System.c: 162: Temp_Value = ADRESH >> 2;
   755  00078E  40C4               	rrncf	4036,w,c	;volatile
   756  000790  42E8               	rrncf	wreg,f,c
   757  000792  0B3F               	andlw	63
   758  000794  6E22               	movwf	main@Temp_Value,c
   759                           
   760                           ;Menu_System.c: 163: ADCON0bits.GO_nDONE = 1;
   761  000796  82C2               	bsf	4034,1,c	;volatile
   762                           
   763                           ;Menu_System.c: 165: lcd_cursor ( 10, 0 ) ;
   764  000798  0E00               	movlw	0
   765  00079A  6E19               	movwf	lcd_cursor@y,c
   766  00079C  0E0A               	movlw	10
   767  00079E  ECCB  F006         	call	_lcd_cursor
   768                           
   769                           ;Menu_System.c: 166: lcd_display_value(Desired_Value);
   770  0007A2  5024               	movf	main@Desired_Value,w,c
   771  0007A4  ECD7  F004         	call	_lcd_display_value
   772                           
   773                           ;Menu_System.c: 167: lcd_cursor ( 10, 1 ) ;
   774  0007A8  0E01               	movlw	1
   775  0007AA  6E19               	movwf	lcd_cursor@y,c
   776  0007AC  0E0A               	movlw	10
   777  0007AE  ECCB  F006         	call	_lcd_cursor
   778                           
   779                           ;Menu_System.c: 168: lcd_display_value(Temp_Value);
   780  0007B2  5022               	movf	main@Temp_Value,w,c
   781  0007B4  ECD7  F004         	call	_lcd_display_value
   782                           
   783                           ;Menu_System.c: 169: LATC= 0x02;
   784  0007B8  0E02               	movlw	2
   785  0007BA  D00E               	goto	L2
   786  0007BC                     l1477:
   787                           
   788                           ;Menu_System.c: 173: lcd_cursor ( 0, 0 ) ;
   789  0007BC  0E00               	movlw	0
   790  0007BE  6E19               	movwf	lcd_cursor@y,c
   791  0007C0  0E00               	movlw	0
   792  0007C2  ECCB  F006         	call	_lcd_cursor
   793                           
   794                           ;Menu_System.c: 174: lcd_clear();
   795  0007C6  ECA4  F006         	call	_lcd_clear	;wreg free
   796                           
   797                           ;Menu_System.c: 175: lcd_print ( problem );
   798  0007CA  C02B  F019         	movff	_problem,lcd_print@mess
   799  0007CE  C02C  F01A         	movff	_problem+1,lcd_print@mess+1
   800  0007D2  EC08  F006         	call	_lcd_print	;wreg free
   801                           
   802                           ;Menu_System.c: 176: LATC = 0x05;
   803  0007D6  0E05               	movlw	5
   804  0007D8                     L2:
   805  0007D8  6E8B               	movwf	3979,c	;volatile
   806                           
   807                           ;Menu_System.c: 178: }
   808                           
   809                           ;Menu_System.c: 177: break;
   810  0007DA  D008               	goto	l1487
   811  0007DC                     l1485:
   812  0007DC  5023               	movf	main@my_mch_state,w,c
   813                           
   814                           ; Switch size 1, requested type "space"
   815                           ; Number of cases is 2, Range of values is 0 to 1
   816                           ; switch strategies available:
   817                           ; Name         Instructions Cycles
   818                           ; simple_byte            7     4 (average)
   819                           ;	Chosen strategy is simple_byte
   820  0007DE  0A00               	xorlw	0	; case 0
   821  0007E0  B4D8               	btfsc	status,2,c
   822  0007E2  D7BE               	goto	l1457
   823  0007E4  0A01               	xorlw	1	; case 1
   824  0007E6  B4D8               	btfsc	status,2,c
   825  0007E8  D7CD               	goto	l155
   826  0007EA  D7E8               	goto	l1477
   827  0007EC                     l1487:
   828                           
   829                           ;Menu_System.c: 180: Button_Press.Full = 0;
   830  0007EC  0E00               	movlw	0
   831  0007EE  6E28               	movwf	_Button_Press,c
   832  0007F0  D792               	goto	l1437
   833  0007F2                     __end_of_main:
   834                           	opt stack 0
   835                           tblptru	equ	0xFF8
   836                           tblptrh	equ	0xFF7
   837                           tblptrl	equ	0xFF6
   838                           tablat	equ	0xFF5
   839                           postinc0	equ	0xFEE
   840                           wreg	equ	0xFE8
   841                           postdec1	equ	0xFE5
   842                           fsr1l	equ	0xFE1
   843                           status	equ	0xFD8
   844                           
   845 ;; *************** function _lcd_start *****************
   846 ;; Defined at:
   847 ;;		line 189 in file "../../LCD_library/lcdlib_2016.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  i               1   26[COMRAM] unsigned char 
   852 ;;  t               1    0        unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      unsigned char 
   855 ;; Registers used:
   856 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   862 ;;      Params:         0       0       0       0       0       0       0
   863 ;;      Locals:         1       0       0       0       0       0       0
   864 ;;      Temps:          1       0       0       0       0       0       0
   865 ;;      Totals:         2       0       0       0       0       0       0
   866 ;;Total ram usage:        2 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; Hardware stack levels required when called:    5
   869 ;; This function calls:
   870 ;;		_lcd_clear
   871 ;;		_lcd_command
   872 ;; This function is called by:
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text1
   878  000C64                     __ptext1:
   879                           	opt stack 0
   880  000C64                     _lcd_start:
   881                           	opt stack 25
   882                           
   883                           ;lcdlib_2016.c: 191: unsigned char i, t ;
   884                           ;lcdlib_2016.c: 197: TRISD = (TRISD & 0xc0) ;
   885                           
   886                           ;incstack = 0
   887  000C64  5095               	movf	3989,w,c	;volatile
   888  000C66  0BC0               	andlw	192
   889  000C68  6E95               	movwf	3989,c	;volatile
   890                           
   891                           ;lcdlib_2016.c: 202: _delay((unsigned long)((35)*(19660800/4000.0)));
   892  000C6A  0EE0               	movlw	224
   893  000C6C  6E1A               	movwf	??_lcd_start& (0+255),c
   894  000C6E  0E6A               	movlw	106
   895  000C70                     u757:
   896  000C70  2EE8               	decfsz	wreg,f,c
   897  000C72  D7FE               	goto	u757
   898  000C74  2E1A               	decfsz	??_lcd_start& (0+255),f,c
   899  000C76  D7FC               	goto	u757
   900                           
   901                           ;lcdlib_2016.c: 203: for ( i=0 ; i < 5 ; i++ )
   902  000C78  0E00               	movlw	0
   903  000C7A  6E1B               	movwf	lcd_start@i,c
   904  000C7C                     l1329:
   905  000C7C  0E04               	movlw	4
   906  000C7E  641B               	cpfsgt	lcd_start@i,c
   907  000C80  D001               	goto	l1333
   908  000C82  D00E               	goto	l1339
   909  000C84                     l1333:
   910                           
   911                           ;lcdlib_2016.c: 204: {
   912                           ;lcdlib_2016.c: 205: lcd_command ( lcd_init [i] ) ;
   913  000C84  501B               	movf	lcd_start@i,w,c
   914  000C86  0D01               	mullw	1
   915  000C88  0E01               	movlw	low _lcd_init
   916  000C8A  24F3               	addwf	prodl,w,c
   917  000C8C  6EF6               	movwf	tblptrl,c
   918  000C8E  0E06               	movlw	high _lcd_init
   919  000C90  20F4               	addwfc	prodh,w,c
   920  000C92  6EF7               	movwf	tblptrh,c
   921  000C94                     	if	0	;There are less than 3 active tblptr bytes
   922  000C94                     	endif
   923  000C94  0008               	tblrd		*
   924  000C96  50F5               	movf	tablat,w,c
   925  000C98  ECF1  F006         	call	_lcd_command
   926  000C9C  2A1B               	incf	lcd_start@i,f,c
   927  000C9E  D7EE               	goto	l1329
   928  000CA0                     l1339:
   929                           
   930                           ;lcdlib_2016.c: 206: }
   931                           ;lcdlib_2016.c: 207: lcd_clear () ;
   932  000CA0  ECA4  F006         	call	_lcd_clear	;wreg free
   933  000CA4  0012               	return	
   934  000CA6                     __end_of_lcd_start:
   935                           	opt stack 0
   936                           tblptru	equ	0xFF8
   937                           tblptrh	equ	0xFF7
   938                           tblptrl	equ	0xFF6
   939                           tablat	equ	0xFF5
   940                           prodh	equ	0xFF4
   941                           prodl	equ	0xFF3
   942                           postinc0	equ	0xFEE
   943                           wreg	equ	0xFE8
   944                           postdec1	equ	0xFE5
   945                           fsr1l	equ	0xFE1
   946                           status	equ	0xFD8
   947                           
   948 ;; *************** function _lcd_display_value *****************
   949 ;; Defined at:
   950 ;;		line 244 in file "../../LCD_library/lcdlib_2016.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  value           1    wreg     unsigned char 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;  value           1   30[COMRAM] unsigned char 
   955 ;;  units           1   29[COMRAM] unsigned char 
   956 ;;  tens            1   28[COMRAM] unsigned char 
   957 ;;  hunds           1   27[COMRAM] unsigned char 
   958 ;; Return value:  Size  Location     Type
   959 ;;		None               void
   960 ;; Registers used:
   961 ;;		wreg, status,2, status,0, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   967 ;;      Params:         0       0       0       0       0       0       0
   968 ;;      Locals:         4       0       0       0       0       0       0
   969 ;;      Temps:          0       0       0       0       0       0       0
   970 ;;      Totals:         4       0       0       0       0       0       0
   971 ;;Total ram usage:        4 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; Hardware stack levels required when called:    4
   974 ;; This function calls:
   975 ;;		___awdiv
   976 ;;		___awmod
   977 ;;		_lcd_print_ch
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text2
   984  0009AE                     __ptext2:
   985                           	opt stack 0
   986  0009AE                     _lcd_display_value:
   987                           	opt stack 26
   988                           
   989                           ;incstack = 0
   990                           ;lcd_display_value@value stored from wreg
   991  0009AE  6E1F               	movwf	lcd_display_value@value,c
   992                           
   993                           ;lcdlib_2016.c: 246: unsigned char hunds, tens, units ;
   994                           ;lcdlib_2016.c: 250: units = value % 10 ;
   995  0009B0  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
   996  0009B4  6A15               	clrf	___awmod@dividend+1,c
   997  0009B6  0E00               	movlw	0
   998  0009B8  6E17               	movwf	___awmod@divisor+1,c
   999  0009BA  0E0A               	movlw	10
  1000  0009BC  6E16               	movwf	___awmod@divisor,c
  1001  0009BE  EC9D  F005         	call	___awmod	;wreg free
  1002  0009C2  5014               	movf	?___awmod,w,c
  1003  0009C4  6E1E               	movwf	lcd_display_value@units,c
  1004                           
  1005                           ;lcdlib_2016.c: 251: value = value / 10 ;
  1006  0009C6  C01F  F014         	movff	lcd_display_value@value,___awdiv@dividend
  1007  0009CA  6A15               	clrf	___awdiv@dividend+1,c
  1008  0009CC  0E00               	movlw	0
  1009  0009CE  6E17               	movwf	___awdiv@divisor+1,c
  1010  0009D0  0E0A               	movlw	10
  1011  0009D2  6E16               	movwf	___awdiv@divisor,c
  1012  0009D4  EC1C  F005         	call	___awdiv	;wreg free
  1013  0009D8  5014               	movf	?___awdiv,w,c
  1014  0009DA  6E1F               	movwf	lcd_display_value@value,c
  1015                           
  1016                           ;lcdlib_2016.c: 252: tens = value % 10 ;
  1017  0009DC  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
  1018  0009E0  6A15               	clrf	___awmod@dividend+1,c
  1019  0009E2  0E00               	movlw	0
  1020  0009E4  6E17               	movwf	___awmod@divisor+1,c
  1021  0009E6  0E0A               	movlw	10
  1022  0009E8  6E16               	movwf	___awmod@divisor,c
  1023  0009EA  EC9D  F005         	call	___awmod	;wreg free
  1024  0009EE  5014               	movf	?___awmod,w,c
  1025  0009F0  6E1D               	movwf	lcd_display_value@tens,c
  1026                           
  1027                           ;lcdlib_2016.c: 253: value = value / 10 ;
  1028  0009F2  C01F  F014         	movff	lcd_display_value@value,___awdiv@dividend
  1029  0009F6  6A15               	clrf	___awdiv@dividend+1,c
  1030  0009F8  0E00               	movlw	0
  1031  0009FA  6E17               	movwf	___awdiv@divisor+1,c
  1032  0009FC  0E0A               	movlw	10
  1033  0009FE  6E16               	movwf	___awdiv@divisor,c
  1034  000A00  EC1C  F005         	call	___awdiv	;wreg free
  1035  000A04  5014               	movf	?___awdiv,w,c
  1036  000A06  6E1F               	movwf	lcd_display_value@value,c
  1037                           
  1038                           ;lcdlib_2016.c: 254: hunds = value % 10 ;
  1039  000A08  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
  1040  000A0C  6A15               	clrf	___awmod@dividend+1,c
  1041  000A0E  0E00               	movlw	0
  1042  000A10  6E17               	movwf	___awmod@divisor+1,c
  1043  000A12  0E0A               	movlw	10
  1044  000A14  6E16               	movwf	___awmod@divisor,c
  1045  000A16  EC9D  F005         	call	___awmod	;wreg free
  1046  000A1A  5014               	movf	?___awmod,w,c
  1047  000A1C  6E1C               	movwf	lcd_display_value@hunds,c
  1048                           
  1049                           ;lcdlib_2016.c: 260: lcd_print_ch ( '0' + hunds ) ;
  1050  000A1E  501C               	movf	lcd_display_value@hunds,w,c
  1051  000A20  0F30               	addlw	48
  1052  000A22  ECEA  F006         	call	_lcd_print_ch
  1053                           
  1054                           ;lcdlib_2016.c: 261: lcd_print_ch ( '0' + tens ) ;
  1055  000A26  501D               	movf	lcd_display_value@tens,w,c
  1056  000A28  0F30               	addlw	48
  1057  000A2A  ECEA  F006         	call	_lcd_print_ch
  1058                           
  1059                           ;lcdlib_2016.c: 262: lcd_print_ch ( '0' + units ) ;
  1060  000A2E  501E               	movf	lcd_display_value@units,w,c
  1061  000A30  0F30               	addlw	48
  1062  000A32  ECEA  F006         	call	_lcd_print_ch
  1063  000A36  0012               	return		;funcret
  1064  000A38                     __end_of_lcd_display_value:
  1065                           	opt stack 0
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           prodh	equ	0xFF4
  1071                           prodl	equ	0xFF3
  1072                           postinc0	equ	0xFEE
  1073                           wreg	equ	0xFE8
  1074                           postdec1	equ	0xFE5
  1075                           fsr1l	equ	0xFE1
  1076                           status	equ	0xFD8
  1077                           
  1078 ;; *************** function ___awmod *****************
  1079 ;; Defined at:
  1080 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  dividend        2   19[COMRAM] int 
  1083 ;;  divisor         2   21[COMRAM] int 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  sign            1   24[COMRAM] unsigned char 
  1086 ;;  counter         1   23[COMRAM] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  2   19[COMRAM] int 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1096 ;;      Params:         4       0       0       0       0       0       0
  1097 ;;      Locals:         2       0       0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0
  1099 ;;      Totals:         6       0       0       0       0       0       0
  1100 ;;Total ram usage:        6 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    2
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_lcd_display_value
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           	psect	text3
  1111  000B3A                     __ptext3:
  1112                           	opt stack 0
  1113  000B3A                     ___awmod:
  1114                           	opt stack 27
  1115                           
  1116                           ;incstack = 0
  1117  000B3A  0E00               	movlw	0
  1118  000B3C  6E19               	movwf	___awmod@sign,c
  1119  000B3E  AE15               	btfss	___awmod@dividend+1,7,c
  1120  000B40  D006               	goto	l1295
  1121  000B42  6C14               	negf	___awmod@dividend,c
  1122  000B44  1E15               	comf	___awmod@dividend+1,f,c
  1123  000B46  B0D8               	btfsc	status,0,c
  1124  000B48  2A15               	incf	___awmod@dividend+1,f,c
  1125  000B4A  0E01               	movlw	1
  1126  000B4C  6E19               	movwf	___awmod@sign,c
  1127  000B4E                     l1295:
  1128  000B4E  AE17               	btfss	___awmod@divisor+1,7,c
  1129  000B50  D004               	goto	l1299
  1130  000B52  6C16               	negf	___awmod@divisor,c
  1131  000B54  1E17               	comf	___awmod@divisor+1,f,c
  1132  000B56  B0D8               	btfsc	status,0,c
  1133  000B58  2A17               	incf	___awmod@divisor+1,f,c
  1134  000B5A                     l1299:
  1135  000B5A  5016               	movf	___awmod@divisor,w,c
  1136  000B5C  1017               	iorwf	___awmod@divisor+1,w,c
  1137  000B5E  B4D8               	btfsc	status,2,c
  1138  000B60  D018               	goto	l1315
  1139  000B62  0E01               	movlw	1
  1140  000B64  6E18               	movwf	___awmod@counter,c
  1141  000B66  D004               	goto	l1305
  1142  000B68                     l1303:
  1143  000B68  90D8               	bcf	status,0,c
  1144  000B6A  3616               	rlcf	___awmod@divisor,f,c
  1145  000B6C  3617               	rlcf	___awmod@divisor+1,f,c
  1146  000B6E  2A18               	incf	___awmod@counter,f,c
  1147  000B70                     l1305:
  1148  000B70  AE17               	btfss	___awmod@divisor+1,7,c
  1149  000B72  D7FA               	goto	l1303
  1150  000B74                     l1307:
  1151  000B74  5016               	movf	___awmod@divisor,w,c
  1152  000B76  5C14               	subwf	___awmod@dividend,w,c
  1153  000B78  5017               	movf	___awmod@divisor+1,w,c
  1154  000B7A  5815               	subwfb	___awmod@dividend+1,w,c
  1155  000B7C  A0D8               	btfss	status,0,c
  1156  000B7E  D004               	goto	l1311
  1157  000B80  5016               	movf	___awmod@divisor,w,c
  1158  000B82  5E14               	subwf	___awmod@dividend,f,c
  1159  000B84  5017               	movf	___awmod@divisor+1,w,c
  1160  000B86  5A15               	subwfb	___awmod@dividend+1,f,c
  1161  000B88                     l1311:
  1162  000B88  90D8               	bcf	status,0,c
  1163  000B8A  3217               	rrcf	___awmod@divisor+1,f,c
  1164  000B8C  3216               	rrcf	___awmod@divisor,f,c
  1165  000B8E  2E18               	decfsz	___awmod@counter,f,c
  1166  000B90  D7F1               	goto	l1307
  1167  000B92                     l1315:
  1168  000B92  5019               	movf	___awmod@sign,w,c
  1169  000B94  B4D8               	btfsc	status,2,c
  1170  000B96  D004               	goto	l1319
  1171  000B98  6C14               	negf	___awmod@dividend,c
  1172  000B9A  1E15               	comf	___awmod@dividend+1,f,c
  1173  000B9C  B0D8               	btfsc	status,0,c
  1174  000B9E  2A15               	incf	___awmod@dividend+1,f,c
  1175  000BA0                     l1319:
  1176  000BA0  C014  F014         	movff	___awmod@dividend,?___awmod
  1177  000BA4  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  1178  000BA8  0012               	return	
  1179  000BAA                     __end_of___awmod:
  1180                           	opt stack 0
  1181                           tblptru	equ	0xFF8
  1182                           tblptrh	equ	0xFF7
  1183                           tblptrl	equ	0xFF6
  1184                           tablat	equ	0xFF5
  1185                           prodh	equ	0xFF4
  1186                           prodl	equ	0xFF3
  1187                           postinc0	equ	0xFEE
  1188                           wreg	equ	0xFE8
  1189                           postdec1	equ	0xFE5
  1190                           fsr1l	equ	0xFE1
  1191                           status	equ	0xFD8
  1192                           
  1193 ;; *************** function ___awdiv *****************
  1194 ;; Defined at:
  1195 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  dividend        2   19[COMRAM] int 
  1198 ;;  divisor         2   21[COMRAM] int 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  quotient        2   25[COMRAM] int 
  1201 ;;  sign            1   24[COMRAM] unsigned char 
  1202 ;;  counter         1   23[COMRAM] unsigned char 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  2   19[COMRAM] int 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1212 ;;      Params:         4       0       0       0       0       0       0
  1213 ;;      Locals:         4       0       0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0
  1215 ;;      Totals:         8       0       0       0       0       0       0
  1216 ;;Total ram usage:        8 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    2
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_lcd_display_value
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text4
  1227  000A38                     __ptext4:
  1228                           	opt stack 0
  1229  000A38                     ___awdiv:
  1230                           	opt stack 27
  1231                           
  1232                           ;incstack = 0
  1233  000A38  0E00               	movlw	0
  1234  000A3A  6E19               	movwf	___awdiv@sign,c
  1235  000A3C  AE17               	btfss	___awdiv@divisor+1,7,c
  1236  000A3E  D006               	goto	l1251
  1237  000A40  6C16               	negf	___awdiv@divisor,c
  1238  000A42  1E17               	comf	___awdiv@divisor+1,f,c
  1239  000A44  B0D8               	btfsc	status,0,c
  1240  000A46  2A17               	incf	___awdiv@divisor+1,f,c
  1241  000A48  0E01               	movlw	1
  1242  000A4A  6E19               	movwf	___awdiv@sign,c
  1243  000A4C                     l1251:
  1244  000A4C  AE15               	btfss	___awdiv@dividend+1,7,c
  1245  000A4E  D006               	goto	l1257
  1246  000A50  6C14               	negf	___awdiv@dividend,c
  1247  000A52  1E15               	comf	___awdiv@dividend+1,f,c
  1248  000A54  B0D8               	btfsc	status,0,c
  1249  000A56  2A15               	incf	___awdiv@dividend+1,f,c
  1250  000A58  0E01               	movlw	1
  1251  000A5A  1A19               	xorwf	___awdiv@sign,f,c
  1252  000A5C                     l1257:
  1253  000A5C  0E00               	movlw	0
  1254  000A5E  6E1B               	movwf	___awdiv@quotient+1,c
  1255  000A60  0E00               	movlw	0
  1256  000A62  6E1A               	movwf	___awdiv@quotient,c
  1257  000A64  5016               	movf	___awdiv@divisor,w,c
  1258  000A66  1017               	iorwf	___awdiv@divisor+1,w,c
  1259  000A68  B4D8               	btfsc	status,2,c
  1260  000A6A  D01C               	goto	l1279
  1261  000A6C  0E01               	movlw	1
  1262  000A6E  6E18               	movwf	___awdiv@counter,c
  1263  000A70  D004               	goto	l1265
  1264  000A72                     l1263:
  1265  000A72  90D8               	bcf	status,0,c
  1266  000A74  3616               	rlcf	___awdiv@divisor,f,c
  1267  000A76  3617               	rlcf	___awdiv@divisor+1,f,c
  1268  000A78  2A18               	incf	___awdiv@counter,f,c
  1269  000A7A                     l1265:
  1270  000A7A  AE17               	btfss	___awdiv@divisor+1,7,c
  1271  000A7C  D7FA               	goto	l1263
  1272  000A7E                     l1267:
  1273  000A7E  90D8               	bcf	status,0,c
  1274  000A80  361A               	rlcf	___awdiv@quotient,f,c
  1275  000A82  361B               	rlcf	___awdiv@quotient+1,f,c
  1276  000A84  5016               	movf	___awdiv@divisor,w,c
  1277  000A86  5C14               	subwf	___awdiv@dividend,w,c
  1278  000A88  5017               	movf	___awdiv@divisor+1,w,c
  1279  000A8A  5815               	subwfb	___awdiv@dividend+1,w,c
  1280  000A8C  A0D8               	btfss	status,0,c
  1281  000A8E  D005               	goto	l1275
  1282  000A90  5016               	movf	___awdiv@divisor,w,c
  1283  000A92  5E14               	subwf	___awdiv@dividend,f,c
  1284  000A94  5017               	movf	___awdiv@divisor+1,w,c
  1285  000A96  5A15               	subwfb	___awdiv@dividend+1,f,c
  1286  000A98  801A               	bsf	___awdiv@quotient,0,c
  1287  000A9A                     l1275:
  1288  000A9A  90D8               	bcf	status,0,c
  1289  000A9C  3217               	rrcf	___awdiv@divisor+1,f,c
  1290  000A9E  3216               	rrcf	___awdiv@divisor,f,c
  1291  000AA0  2E18               	decfsz	___awdiv@counter,f,c
  1292  000AA2  D7ED               	goto	l1267
  1293  000AA4                     l1279:
  1294  000AA4  5019               	movf	___awdiv@sign,w,c
  1295  000AA6  B4D8               	btfsc	status,2,c
  1296  000AA8  D004               	goto	l1283
  1297  000AAA  6C1A               	negf	___awdiv@quotient,c
  1298  000AAC  1E1B               	comf	___awdiv@quotient+1,f,c
  1299  000AAE  B0D8               	btfsc	status,0,c
  1300  000AB0  2A1B               	incf	___awdiv@quotient+1,f,c
  1301  000AB2                     l1283:
  1302  000AB2  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  1303  000AB6  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  1304  000ABA  0012               	return	
  1305  000ABC                     __end_of___awdiv:
  1306                           	opt stack 0
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           prodh	equ	0xFF4
  1312                           prodl	equ	0xFF3
  1313                           postinc0	equ	0xFEE
  1314                           wreg	equ	0xFE8
  1315                           postdec1	equ	0xFE5
  1316                           fsr1l	equ	0xFE1
  1317                           status	equ	0xFD8
  1318                           
  1319 ;; *************** function _Window *****************
  1320 ;; Defined at:
  1321 ;;		line 204 in file "Menu_System.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  num             1    wreg     unsigned char 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  num             1   31[COMRAM] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;		None               void
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1335 ;;      Params:         0       0       0       0       0       0       0
  1336 ;;      Locals:         1       0       0       0       0       0       0
  1337 ;;      Temps:          2       0       0       0       0       0       0
  1338 ;;      Totals:         3       0       0       0       0       0       0
  1339 ;;Total ram usage:        3 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    5
  1342 ;; This function calls:
  1343 ;;		_lcd_clear
  1344 ;;		_lcd_cursor
  1345 ;;		_lcd_print
  1346 ;; This function is called by:
  1347 ;;		_main
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text5
  1352  000BAA                     __ptext5:
  1353                           	opt stack 0
  1354  000BAA                     _Window:
  1355                           	opt stack 25
  1356                           
  1357                           ;incstack = 0
  1358                           ;Window@num stored from wreg
  1359  000BAA  6E20               	movwf	Window@num,c
  1360                           
  1361                           ;Menu_System.c: 206: lcd_clear();
  1362  000BAC  ECA4  F006         	call	_lcd_clear	;wreg free
  1363                           
  1364                           ;Menu_System.c: 207: lcd_cursor ( 0, 0 ) ;
  1365  000BB0  0E00               	movlw	0
  1366  000BB2  6E19               	movwf	lcd_cursor@y,c
  1367  000BB4  0E00               	movlw	0
  1368  000BB6  ECCB  F006         	call	_lcd_cursor
  1369                           
  1370                           ;Menu_System.c: 208: lcd_print ( msg_ary[num*2]);
  1371  000BBA  5020               	movf	Window@num,w,c
  1372  000BBC  0D20               	mullw	32
  1373  000BBE  0E06               	movlw	low _msg_ary
  1374  000BC0  24F3               	addwf	prodl,w,c
  1375  000BC2  6E19               	movwf	lcd_print@mess,c
  1376  000BC4  0E06               	movlw	high _msg_ary
  1377  000BC6  20F4               	addwfc	prodh,w,c
  1378  000BC8  6E1A               	movwf	lcd_print@mess+1,c
  1379  000BCA  EC08  F006         	call	_lcd_print	;wreg free
  1380                           
  1381                           ;Menu_System.c: 209: lcd_cursor ( 0, 1 ) ;
  1382  000BCE  0E01               	movlw	1
  1383  000BD0  6E19               	movwf	lcd_cursor@y,c
  1384  000BD2  0E00               	movlw	0
  1385  000BD4  ECCB  F006         	call	_lcd_cursor
  1386                           
  1387                           ;Menu_System.c: 210: lcd_print ( msg_ary[(num*2)+1]);
  1388  000BD8  5020               	movf	Window@num,w,c
  1389  000BDA  6E1E               	movwf	??_Window& (0+255),c
  1390  000BDC  6A1F               	clrf	(??_Window+1)& (0+255),c
  1391  000BDE  90D8               	bcf	status,0,c
  1392  000BE0  361E               	rlcf	??_Window,f,c
  1393  000BE2  361F               	rlcf	??_Window+1,f,c
  1394  000BE4  3A1E               	swapf	??_Window,f,c
  1395  000BE6  3A1F               	swapf	??_Window+1,f,c
  1396  000BE8  0EF0               	movlw	240
  1397  000BEA  161F               	andwf	??_Window+1,f,c
  1398  000BEC  501E               	movf	??_Window,w,c
  1399  000BEE  0B0F               	andlw	15
  1400  000BF0  121F               	iorwf	??_Window+1,f,c
  1401  000BF2  0EF0               	movlw	240
  1402  000BF4  161E               	andwf	??_Window,f,c
  1403  000BF6  0E10               	movlw	16
  1404  000BF8  261E               	addwf	??_Window,f,c
  1405  000BFA  0E00               	movlw	0
  1406  000BFC  221F               	addwfc	??_Window+1,f,c
  1407  000BFE  0E06               	movlw	low _msg_ary
  1408  000C00  241E               	addwf	??_Window,w,c
  1409  000C02  6E19               	movwf	lcd_print@mess,c
  1410  000C04  0E06               	movlw	high _msg_ary
  1411  000C06  201F               	addwfc	??_Window+1,w,c
  1412  000C08  6E1A               	movwf	lcd_print@mess+1,c
  1413  000C0A  EC08  F006         	call	_lcd_print	;wreg free
  1414  000C0E  0012               	return		;funcret
  1415  000C10                     __end_of_Window:
  1416                           	opt stack 0
  1417                           tblptru	equ	0xFF8
  1418                           tblptrh	equ	0xFF7
  1419                           tblptrl	equ	0xFF6
  1420                           tablat	equ	0xFF5
  1421                           prodh	equ	0xFF4
  1422                           prodl	equ	0xFF3
  1423                           postinc0	equ	0xFEE
  1424                           wreg	equ	0xFE8
  1425                           postdec1	equ	0xFE5
  1426                           fsr1l	equ	0xFE1
  1427                           status	equ	0xFD8
  1428                           
  1429 ;; *************** function _lcd_print *****************
  1430 ;; Defined at:
  1431 ;;		line 215 in file "../../LCD_library/lcdlib_2016.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  mess            2   24[COMRAM] PTR const unsigned char 
  1434 ;;		 -> msg_ary(160), STR_2(12), STR_1(8), 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  i               1   28[COMRAM] unsigned char 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      unsigned char 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1446 ;;      Params:         2       0       0       0       0       0       0
  1447 ;;      Locals:         1       0       0       0       0       0       0
  1448 ;;      Temps:          2       0       0       0       0       0       0
  1449 ;;      Totals:         5       0       0       0       0       0       0
  1450 ;;Total ram usage:        5 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    4
  1453 ;; This function calls:
  1454 ;;		_lcd_print_ch
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;;		_Window
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text6
  1462  000C10                     __ptext6:
  1463                           	opt stack 0
  1464  000C10                     _lcd_print:
  1465                           	opt stack 26
  1466                           
  1467                           ;lcdlib_2016.c: 217: unsigned char i = 0 ;
  1468                           
  1469                           ;incstack = 0
  1470  000C10  0E00               	movlw	0
  1471  000C12  6E1D               	movwf	lcd_print@i,c
  1472                           
  1473                           ;lcdlib_2016.c: 224: while ( mess [i] != 0 )
  1474  000C14  D013               	goto	l1239
  1475  000C16                     l1235:
  1476                           
  1477                           ;lcdlib_2016.c: 225: {
  1478                           ;lcdlib_2016.c: 226: lcd_print_ch ( mess[i] ) ;
  1479  000C16  501D               	movf	lcd_print@i,w,c
  1480  000C18  0D01               	mullw	1
  1481  000C1A  C019  F01B         	movff	lcd_print@mess,??_lcd_print
  1482  000C1E  C01A  F01C         	movff	lcd_print@mess+1,??_lcd_print+1
  1483  000C22  50F3               	movf	prodl,w,c
  1484  000C24  261B               	addwf	??_lcd_print,f,c
  1485  000C26  50F4               	movf	prodh,w,c
  1486  000C28  221C               	addwfc	??_lcd_print+1,f,c
  1487  000C2A  C01B  FFF6         	movff	??_lcd_print,tblptrl
  1488  000C2E  C01C  FFF7         	movff	??_lcd_print+1,tblptrh
  1489  000C32                     	if	0	;tblptru may be non-zero
  1490  000C32                     	endif
  1491  000C32                     	if	0	;tblptru may be non-zero
  1492  000C32                     	endif
  1493  000C32  0008               	tblrd		*
  1494  000C34  50F5               	movf	tablat,w,c
  1495  000C36  ECEA  F006         	call	_lcd_print_ch
  1496                           
  1497                           ;lcdlib_2016.c: 227: i++ ;
  1498  000C3A  2A1D               	incf	lcd_print@i,f,c
  1499  000C3C                     l1239:
  1500  000C3C  501D               	movf	lcd_print@i,w,c
  1501  000C3E  0D01               	mullw	1
  1502  000C40  C019  F01B         	movff	lcd_print@mess,??_lcd_print
  1503  000C44  C01A  F01C         	movff	lcd_print@mess+1,??_lcd_print+1
  1504  000C48  50F3               	movf	prodl,w,c
  1505  000C4A  261B               	addwf	??_lcd_print,f,c
  1506  000C4C  50F4               	movf	prodh,w,c
  1507  000C4E  221C               	addwfc	??_lcd_print+1,f,c
  1508  000C50  C01B  FFF6         	movff	??_lcd_print,tblptrl
  1509  000C54  C01C  FFF7         	movff	??_lcd_print+1,tblptrh
  1510  000C58                     	if	0	;tblptru may be non-zero
  1511  000C58                     	endif
  1512  000C58                     	if	0	;tblptru may be non-zero
  1513  000C58                     	endif
  1514  000C58  0008               	tblrd		*
  1515  000C5A  50F5               	movf	tablat,w,c
  1516  000C5C  0900               	iorlw	0
  1517  000C5E  B4D8               	btfsc	status,2,c
  1518  000C60  0012               	return	
  1519  000C62  D7D9               	goto	l1235
  1520  000C64                     __end_of_lcd_print:
  1521                           	opt stack 0
  1522                           tblptru	equ	0xFF8
  1523                           tblptrh	equ	0xFF7
  1524                           tblptrl	equ	0xFF6
  1525                           tablat	equ	0xFF5
  1526                           prodh	equ	0xFF4
  1527                           prodl	equ	0xFF3
  1528                           postinc0	equ	0xFEE
  1529                           wreg	equ	0xFE8
  1530                           postdec1	equ	0xFE5
  1531                           fsr1l	equ	0xFE1
  1532                           status	equ	0xFD8
  1533                           
  1534 ;; *************** function _lcd_print_ch *****************
  1535 ;; Defined at:
  1536 ;;		line 115 in file "../../LCD_library/lcdlib_2016.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  in              1    wreg     unsigned char 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  in              1   23[COMRAM] unsigned char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      unsigned char 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1550 ;;      Params:         0       0       0       0       0       0       0
  1551 ;;      Locals:         1       0       0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0
  1553 ;;      Totals:         1       0       0       0       0       0       0
  1554 ;;Total ram usage:        1 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    3
  1557 ;; This function calls:
  1558 ;;		_lcd_raw_send
  1559 ;; This function is called by:
  1560 ;;		_lcd_print
  1561 ;;		_lcd_display_value
  1562 ;;		_lcd_display_int_value
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text7
  1567  000DD4                     __ptext7:
  1568                           	opt stack 0
  1569  000DD4                     _lcd_print_ch:
  1570                           	opt stack 26
  1571                           
  1572                           ;incstack = 0
  1573                           ;lcd_print_ch@in stored from wreg
  1574  000DD4  6E18               	movwf	lcd_print_ch@in,c
  1575                           
  1576                           ;lcdlib_2016.c: 118: lcd_raw_send ( in, 0x01 ) ;
  1577  000DD6  0E01               	movlw	1
  1578  000DD8  6E14               	movwf	lcd_raw_send@RS,c
  1579  000DDA  5018               	movf	lcd_print_ch@in,w,c
  1580  000DDC  ECF9  F003         	call	_lcd_raw_send
  1581  000DE0  0012               	return	
  1582  000DE2                     __end_of_lcd_print_ch:
  1583                           	opt stack 0
  1584                           tblptru	equ	0xFF8
  1585                           tblptrh	equ	0xFF7
  1586                           tblptrl	equ	0xFF6
  1587                           tablat	equ	0xFF5
  1588                           prodh	equ	0xFF4
  1589                           prodl	equ	0xFF3
  1590                           postinc0	equ	0xFEE
  1591                           wreg	equ	0xFE8
  1592                           postdec1	equ	0xFE5
  1593                           fsr1l	equ	0xFE1
  1594                           status	equ	0xFD8
  1595                           
  1596 ;; *************** function _lcd_cursor *****************
  1597 ;; Defined at:
  1598 ;;		line 144 in file "../../LCD_library/lcdlib_2016.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  x               1    wreg     unsigned char 
  1601 ;;  y               1   24[COMRAM] unsigned char 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  x               1   25[COMRAM] unsigned char 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      unsigned char 
  1606 ;; Registers used:
  1607 ;;		wreg, status,2, status,0, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1613 ;;      Params:         1       0       0       0       0       0       0
  1614 ;;      Locals:         1       0       0       0       0       0       0
  1615 ;;      Temps:          0       0       0       0       0       0       0
  1616 ;;      Totals:         2       0       0       0       0       0       0
  1617 ;;Total ram usage:        2 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    4
  1620 ;; This function calls:
  1621 ;;		_lcd_command
  1622 ;; This function is called by:
  1623 ;;		_main
  1624 ;;		_Window
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text8
  1629  000D96                     __ptext8:
  1630                           	opt stack 0
  1631  000D96                     _lcd_cursor:
  1632                           	opt stack 26
  1633                           
  1634                           ;incstack = 0
  1635                           ;lcd_cursor@x stored from wreg
  1636  000D96  6E1A               	movwf	lcd_cursor@x,c
  1637                           
  1638                           ;lcdlib_2016.c: 153: if ( y==0 )
  1639  000D98  5019               	movf	lcd_cursor@y,w,c
  1640  000D9A  A4D8               	btfss	status,2,c
  1641  000D9C  D002               	goto	l1227
  1642                           
  1643                           ;lcdlib_2016.c: 154: {
  1644                           ;lcdlib_2016.c: 156: y=0x80 ;
  1645  000D9E  0E80               	movlw	128
  1646  000DA0  D001               	goto	L3
  1647  000DA2                     l1227:
  1648                           
  1649                           ;lcdlib_2016.c: 158: else
  1650                           ;lcdlib_2016.c: 159: {
  1651                           ;lcdlib_2016.c: 161: y=0xc0 ;
  1652  000DA2  0EC0               	movlw	192
  1653  000DA4                     L3:
  1654  000DA4  6E19               	movwf	lcd_cursor@y,c
  1655                           
  1656                           ;lcdlib_2016.c: 162: }
  1657                           ;lcdlib_2016.c: 164: lcd_command ( y+x ) ;
  1658  000DA6  5019               	movf	lcd_cursor@y,w,c
  1659  000DA8  241A               	addwf	lcd_cursor@x,w,c
  1660  000DAA  ECF1  F006         	call	_lcd_command
  1661  000DAE  0012               	return	
  1662  000DB0                     __end_of_lcd_cursor:
  1663                           	opt stack 0
  1664                           tblptru	equ	0xFF8
  1665                           tblptrh	equ	0xFF7
  1666                           tblptrl	equ	0xFF6
  1667                           tablat	equ	0xFF5
  1668                           prodh	equ	0xFF4
  1669                           prodl	equ	0xFF3
  1670                           postinc0	equ	0xFEE
  1671                           wreg	equ	0xFE8
  1672                           postdec1	equ	0xFE5
  1673                           fsr1l	equ	0xFE1
  1674                           status	equ	0xFD8
  1675                           
  1676 ;; *************** function _lcd_clear *****************
  1677 ;; Defined at:
  1678 ;;		line 131 in file "../../LCD_library/lcdlib_2016.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      unsigned char 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1692 ;;      Params:         0       0       0       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0       0       0
  1694 ;;      Temps:          1       0       0       0       0       0       0
  1695 ;;      Totals:         1       0       0       0       0       0       0
  1696 ;;Total ram usage:        1 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    4
  1699 ;; This function calls:
  1700 ;;		_lcd_command
  1701 ;; This function is called by:
  1702 ;;		_lcd_start
  1703 ;;		_main
  1704 ;;		_Window
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text9
  1709  000D48                     __ptext9:
  1710                           	opt stack 0
  1711  000D48                     _lcd_clear:
  1712                           	opt stack 25
  1713                           
  1714                           ;lcdlib_2016.c: 134: lcd_command ( 0x01 ) ;
  1715                           
  1716                           ;incstack = 0
  1717  000D48  0E01               	movlw	1
  1718  000D4A  ECF1  F006         	call	_lcd_command
  1719                           
  1720                           ;lcdlib_2016.c: 135: _delay((unsigned long)((2)*(19660800/4000.0)));
  1721  000D4E  0E0D               	movlw	13
  1722  000D50  6E19               	movwf	??_lcd_clear& (0+255),c
  1723  000D52  0EC3               	movlw	195
  1724  000D54                     u767:
  1725  000D54  2EE8               	decfsz	wreg,f,c
  1726  000D56  D7FE               	goto	u767
  1727  000D58  2E19               	decfsz	??_lcd_clear& (0+255),f,c
  1728  000D5A  D7FC               	goto	u767
  1729  000D5C  F000               	nop	
  1730                           
  1731                           ;lcdlib_2016.c: 138: lcd_command ( 0x02 ) ;
  1732  000D5E  0E02               	movlw	2
  1733  000D60  ECF1  F006         	call	_lcd_command
  1734                           
  1735                           ;lcdlib_2016.c: 139: _delay((unsigned long)((2)*(19660800/4000.0)));
  1736  000D64  0E0D               	movlw	13
  1737  000D66  6E19               	movwf	??_lcd_clear& (0+255),c
  1738  000D68  0EC3               	movlw	195
  1739  000D6A                     u777:
  1740  000D6A  2EE8               	decfsz	wreg,f,c
  1741  000D6C  D7FE               	goto	u777
  1742  000D6E  2E19               	decfsz	??_lcd_clear& (0+255),f,c
  1743  000D70  D7FC               	goto	u777
  1744  000D72  F000               	nop	
  1745  000D74  0012               	return	
  1746  000D76                     __end_of_lcd_clear:
  1747                           	opt stack 0
  1748                           tblptru	equ	0xFF8
  1749                           tblptrh	equ	0xFF7
  1750                           tblptrl	equ	0xFF6
  1751                           tablat	equ	0xFF5
  1752                           prodh	equ	0xFF4
  1753                           prodl	equ	0xFF3
  1754                           postinc0	equ	0xFEE
  1755                           wreg	equ	0xFE8
  1756                           postdec1	equ	0xFE5
  1757                           fsr1l	equ	0xFE1
  1758                           status	equ	0xFD8
  1759                           
  1760 ;; *************** function _lcd_command *****************
  1761 ;; Defined at:
  1762 ;;		line 123 in file "../../LCD_library/lcdlib_2016.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  in              1    wreg     unsigned char 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  in              1   23[COMRAM] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;		None               void
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1776 ;;      Params:         0       0       0       0       0       0       0
  1777 ;;      Locals:         1       0       0       0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0
  1779 ;;      Totals:         1       0       0       0       0       0       0
  1780 ;;Total ram usage:        1 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    3
  1783 ;; This function calls:
  1784 ;;		_lcd_raw_send
  1785 ;; This function is called by:
  1786 ;;		_lcd_clear
  1787 ;;		_lcd_cursor
  1788 ;;		_lcd_start
  1789 ;;		_lcd_cursor_on
  1790 ;;		_lcd_cursor_off
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text10
  1795  000DE2                     __ptext10:
  1796                           	opt stack 0
  1797  000DE2                     _lcd_command:
  1798                           	opt stack 26
  1799                           
  1800                           ;incstack = 0
  1801                           ;lcd_command@in stored from wreg
  1802  000DE2  6E18               	movwf	lcd_command@in,c
  1803                           
  1804                           ;lcdlib_2016.c: 125: lcd_raw_send ( in, 0x00 ) ;
  1805  000DE4  0E00               	movlw	0
  1806  000DE6  6E14               	movwf	lcd_raw_send@RS,c
  1807  000DE8  5018               	movf	lcd_command@in,w,c
  1808  000DEA  ECF9  F003         	call	_lcd_raw_send
  1809  000DEE  0012               	return		;funcret
  1810  000DF0                     __end_of_lcd_command:
  1811                           	opt stack 0
  1812                           tblptru	equ	0xFF8
  1813                           tblptrh	equ	0xFF7
  1814                           tblptrl	equ	0xFF6
  1815                           tablat	equ	0xFF5
  1816                           prodh	equ	0xFF4
  1817                           prodl	equ	0xFF3
  1818                           postinc0	equ	0xFEE
  1819                           wreg	equ	0xFE8
  1820                           postdec1	equ	0xFE5
  1821                           fsr1l	equ	0xFE1
  1822                           status	equ	0xFD8
  1823                           
  1824 ;; *************** function _lcd_raw_send *****************
  1825 ;; Defined at:
  1826 ;;		line 74 in file "../../LCD_library/lcdlib_2016.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  in              1    wreg     unsigned char 
  1829 ;;  RS              1   19[COMRAM] unsigned char 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  in              1   22[COMRAM] unsigned char 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;		None               void
  1834 ;; Registers used:
  1835 ;;		wreg, status,2, status,0
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1841 ;;      Params:         1       0       0       0       0       0       0
  1842 ;;      Locals:         1       0       0       0       0       0       0
  1843 ;;      Temps:          2       0       0       0       0       0       0
  1844 ;;      Totals:         4       0       0       0       0       0       0
  1845 ;;Total ram usage:        4 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    2
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_lcd_print_ch
  1852 ;;		_lcd_command
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text11
  1857  0007F2                     __ptext11:
  1858                           	opt stack 0
  1859  0007F2                     _lcd_raw_send:
  1860                           	opt stack 26
  1861                           
  1862                           ;incstack = 0
  1863                           ;lcd_raw_send@in stored from wreg
  1864  0007F2  6E17               	movwf	lcd_raw_send@in,c
  1865                           
  1866                           ;lcdlib_2016.c: 78: LATDbits.LD0 = in >> 4;
  1867  0007F4  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1868  0007F8  3A15               	swapf	??_lcd_raw_send,f,c
  1869  0007FA  0E0F               	movlw	15
  1870  0007FC  1615               	andwf	??_lcd_raw_send,f,c
  1871  0007FE  508C               	movf	3980,w,c	;volatile
  1872  000800  1815               	xorwf	??_lcd_raw_send,w,c
  1873  000802  0BFE               	andlw	-2
  1874  000804  1815               	xorwf	??_lcd_raw_send,w,c
  1875  000806  6E8C               	movwf	3980,c	;volatile
  1876                           
  1877                           ;lcdlib_2016.c: 79: LATDbits.LD1 = in >> 5;
  1878  000808  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1879  00080C  0E05               	movlw	5
  1880  00080E  6E16               	movwf	(??_lcd_raw_send+1)& (0+255),c
  1881  000810                     u425:
  1882  000810  90D8               	bcf	status,0,c
  1883  000812  3215               	rrcf	??_lcd_raw_send,f,c
  1884  000814  2E16               	decfsz	(??_lcd_raw_send+1)& (0+255),f,c
  1885  000816  D7FC               	goto	u425
  1886  000818  4615               	rlncf	??_lcd_raw_send,f,c
  1887  00081A  508C               	movf	3980,w,c	;volatile
  1888  00081C  1815               	xorwf	??_lcd_raw_send,w,c
  1889  00081E  0BFD               	andlw	-3
  1890  000820  1815               	xorwf	??_lcd_raw_send,w,c
  1891  000822  6E8C               	movwf	3980,c	;volatile
  1892                           
  1893                           ;lcdlib_2016.c: 80: LATDbits.LD2 = in >> 6;
  1894  000824  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1895  000828  0E06               	movlw	6
  1896  00082A  6E16               	movwf	(??_lcd_raw_send+1)& (0+255),c
  1897  00082C                     u435:
  1898  00082C  90D8               	bcf	status,0,c
  1899  00082E  3215               	rrcf	??_lcd_raw_send,f,c
  1900  000830  2E16               	decfsz	(??_lcd_raw_send+1)& (0+255),f,c
  1901  000832  D7FC               	goto	u435
  1902  000834  4615               	rlncf	??_lcd_raw_send,f,c
  1903  000836  4615               	rlncf	??_lcd_raw_send,f,c
  1904  000838  508C               	movf	3980,w,c	;volatile
  1905  00083A  1815               	xorwf	??_lcd_raw_send,w,c
  1906  00083C  0BFB               	andlw	-5
  1907  00083E  1815               	xorwf	??_lcd_raw_send,w,c
  1908  000840  6E8C               	movwf	3980,c	;volatile
  1909                           
  1910                           ;lcdlib_2016.c: 81: LATDbits.LD3 = in >> 7;
  1911  000842  6A15               	clrf	??_lcd_raw_send& (0+255),c
  1912  000844  AE17               	btfss	lcd_raw_send@in,7,c
  1913  000846  D001               	bra	u445
  1914  000848  2A15               	incf	??_lcd_raw_send& (0+255),f,c
  1915  00084A                     u445:
  1916  00084A  4615               	rlncf	??_lcd_raw_send,f,c
  1917  00084C  4615               	rlncf	??_lcd_raw_send,f,c
  1918  00084E  4615               	rlncf	??_lcd_raw_send,f,c
  1919  000850  508C               	movf	3980,w,c	;volatile
  1920  000852  1815               	xorwf	??_lcd_raw_send,w,c
  1921  000854  0BF7               	andlw	-9
  1922  000856  1815               	xorwf	??_lcd_raw_send,w,c
  1923  000858  6E8C               	movwf	3980,c	;volatile
  1924                           
  1925                           ;lcdlib_2016.c: 82: LATDbits.LD4 = RS;
  1926  00085A  B014               	btfsc	lcd_raw_send@RS,0,c
  1927  00085C  D002               	bra	u455
  1928  00085E  988C               	bcf	3980,4,c	;volatile
  1929  000860  D001               	bra	u456
  1930  000862                     u455:
  1931  000862  888C               	bsf	3980,4,c	;volatile
  1932  000864                     u456:
  1933                           
  1934                           ;lcdlib_2016.c: 84: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1935  000864  0E03               	movlw	3
  1936  000866                     u787:
  1937  000866  2EE8               	decfsz	wreg,f,c
  1938  000868  D7FE               	goto	u787
  1939                           
  1940                           ;lcdlib_2016.c: 89: LATDbits.LD5 = 1;
  1941  00086A  8A8C               	bsf	3980,5,c	;volatile
  1942                           
  1943                           ;lcdlib_2016.c: 91: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1944  00086C  0E03               	movlw	3
  1945  00086E                     u797:
  1946  00086E  2EE8               	decfsz	wreg,f,c
  1947  000870  D7FE               	goto	u797
  1948                           
  1949                           ;lcdlib_2016.c: 93: LATDbits.LD5 = 0;
  1950  000872  9A8C               	bcf	3980,5,c	;volatile
  1951                           
  1952                           ;lcdlib_2016.c: 95: _delay((unsigned long)((50)*(19660800/4000000.0)));
  1953  000874  0E51               	movlw	81
  1954  000876                     u807:
  1955  000876  2EE8               	decfsz	wreg,f,c
  1956  000878  D7FE               	goto	u807
  1957  00087A  D000               	nop2		;nop
  1958                           
  1959                           ;lcdlib_2016.c: 98: LATDbits.LD0 = in;
  1960  00087C  B017               	btfsc	lcd_raw_send@in,0,c
  1961  00087E  D002               	bra	u465
  1962  000880  908C               	bcf	3980,0,c	;volatile
  1963  000882  D001               	bra	u466
  1964  000884                     u465:
  1965  000884  808C               	bsf	3980,0,c	;volatile
  1966  000886                     u466:
  1967                           
  1968                           ;lcdlib_2016.c: 99: LATDbits.LD1 = in >> 1;
  1969  000886  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1970  00088A  90D8               	bcf	status,0,c
  1971  00088C  3215               	rrcf	??_lcd_raw_send,f,c
  1972  00088E  4615               	rlncf	??_lcd_raw_send,f,c
  1973  000890  508C               	movf	3980,w,c	;volatile
  1974  000892  1815               	xorwf	??_lcd_raw_send,w,c
  1975  000894  0BFD               	andlw	-3
  1976  000896  1815               	xorwf	??_lcd_raw_send,w,c
  1977  000898  6E8C               	movwf	3980,c	;volatile
  1978                           
  1979                           ;lcdlib_2016.c: 100: LATDbits.LD2 = in >> 2;
  1980  00089A  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1981  00089E  90D8               	bcf	status,0,c
  1982  0008A0  3215               	rrcf	??_lcd_raw_send,f,c
  1983  0008A2  90D8               	bcf	status,0,c
  1984  0008A4  3215               	rrcf	??_lcd_raw_send,f,c
  1985  0008A6  4615               	rlncf	??_lcd_raw_send,f,c
  1986  0008A8  4615               	rlncf	??_lcd_raw_send,f,c
  1987  0008AA  508C               	movf	3980,w,c	;volatile
  1988  0008AC  1815               	xorwf	??_lcd_raw_send,w,c
  1989  0008AE  0BFB               	andlw	-5
  1990  0008B0  1815               	xorwf	??_lcd_raw_send,w,c
  1991  0008B2  6E8C               	movwf	3980,c	;volatile
  1992                           
  1993                           ;lcdlib_2016.c: 101: LATDbits.LD3 = in >> 3;
  1994  0008B4  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1995  0008B8  90D8               	bcf	status,0,c
  1996  0008BA  3215               	rrcf	??_lcd_raw_send,f,c
  1997  0008BC  90D8               	bcf	status,0,c
  1998  0008BE  3215               	rrcf	??_lcd_raw_send,f,c
  1999  0008C0  90D8               	bcf	status,0,c
  2000  0008C2  3215               	rrcf	??_lcd_raw_send,f,c
  2001  0008C4  4615               	rlncf	??_lcd_raw_send,f,c
  2002  0008C6  4615               	rlncf	??_lcd_raw_send,f,c
  2003  0008C8  4615               	rlncf	??_lcd_raw_send,f,c
  2004  0008CA  508C               	movf	3980,w,c	;volatile
  2005  0008CC  1815               	xorwf	??_lcd_raw_send,w,c
  2006  0008CE  0BF7               	andlw	-9
  2007  0008D0  1815               	xorwf	??_lcd_raw_send,w,c
  2008  0008D2  6E8C               	movwf	3980,c	;volatile
  2009                           
  2010                           ;lcdlib_2016.c: 103: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2011  0008D4  0E03               	movlw	3
  2012  0008D6                     u817:
  2013  0008D6  2EE8               	decfsz	wreg,f,c
  2014  0008D8  D7FE               	goto	u817
  2015                           
  2016                           ;lcdlib_2016.c: 105: LATDbits.LD5 = 1;
  2017  0008DA  8A8C               	bsf	3980,5,c	;volatile
  2018                           
  2019                           ;lcdlib_2016.c: 107: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2020  0008DC  0E03               	movlw	3
  2021  0008DE                     u827:
  2022  0008DE  2EE8               	decfsz	wreg,f,c
  2023  0008E0  D7FE               	goto	u827
  2024                           
  2025                           ;lcdlib_2016.c: 109: LATDbits.LD5 = 0;
  2026  0008E2  9A8C               	bcf	3980,5,c	;volatile
  2027                           
  2028                           ;lcdlib_2016.c: 111: _delay((unsigned long)((50)*(19660800/4000000.0)));
  2029  0008E4  0E51               	movlw	81
  2030  0008E6                     u837:
  2031  0008E6  2EE8               	decfsz	wreg,f,c
  2032  0008E8  D7FE               	goto	u837
  2033  0008EA  D000               	nop2		;nop
  2034  0008EC  0012               	return		;funcret
  2035  0008EE                     __end_of_lcd_raw_send:
  2036                           	opt stack 0
  2037                           tblptru	equ	0xFF8
  2038                           tblptrh	equ	0xFF7
  2039                           tblptrl	equ	0xFF6
  2040                           tablat	equ	0xFF5
  2041                           prodh	equ	0xFF4
  2042                           prodl	equ	0xFF3
  2043                           postinc0	equ	0xFEE
  2044                           wreg	equ	0xFE8
  2045                           postdec1	equ	0xFE5
  2046                           fsr1l	equ	0xFE1
  2047                           status	equ	0xFD8
  2048                           
  2049 ;; *************** function _Initial *****************
  2050 ;; Defined at:
  2051 ;;		line 187 in file "Menu_System.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;		None
  2056 ;; Return value:  Size  Location     Type
  2057 ;;		None               void
  2058 ;; Registers used:
  2059 ;;		wreg, status,2, status,0, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2065 ;;      Params:         0       0       0       0       0       0       0
  2066 ;;      Locals:         0       0       0       0       0       0       0
  2067 ;;      Temps:          0       0       0       0       0       0       0
  2068 ;;      Totals:         0       0       0       0       0       0       0
  2069 ;;Total ram usage:        0 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    3
  2072 ;; This function calls:
  2073 ;;		_OpenTimer0
  2074 ;;		_WriteTimer0
  2075 ;;		_delay_s
  2076 ;; This function is called by:
  2077 ;;		_main
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           	psect	text12
  2082  000D16                     __ptext12:
  2083                           	opt stack 0
  2084  000D16                     _Initial:
  2085                           	opt stack 27
  2086                           
  2087                           ;Menu_System.c: 188: ADCON0 = 0x01;
  2088                           
  2089                           ;incstack = 0
  2090  000D16  0E01               	movlw	1
  2091  000D18  6EC2               	movwf	4034,c	;volatile
  2092                           
  2093                           ;Menu_System.c: 189: ADCON1 = 0x0E;
  2094  000D1A  0E0E               	movlw	14
  2095  000D1C  6EC1               	movwf	4033,c	;volatile
  2096                           
  2097                           ;Menu_System.c: 190: TRISB = 0xFF;
  2098  000D1E  6893               	setf	3987,c	;volatile
  2099                           
  2100                           ;Menu_System.c: 191: TRISC = 0x00;
  2101  000D20  0E00               	movlw	0
  2102  000D22  6E94               	movwf	3988,c	;volatile
  2103                           
  2104                           ;Menu_System.c: 192: ADCON0bits.GO_nDONE = 1;
  2105  000D24  82C2               	bsf	4034,1,c	;volatile
  2106                           
  2107                           ;Menu_System.c: 193: LATC = 0xff;
  2108  000D26  688B               	setf	3979,c	;volatile
  2109                           
  2110                           ;Menu_System.c: 194: delay_s(3);
  2111  000D28  0E03               	movlw	3
  2112  000D2A  EC71  F006         	call	_delay_s
  2113                           
  2114                           ;Menu_System.c: 195: LATC = 0x00;
  2115  000D2E  0E00               	movlw	0
  2116  000D30  6E8B               	movwf	3979,c	;volatile
  2117                           
  2118                           ;Menu_System.c: 198: OpenTimer0( 0b11111111 & 0b10111111 & 0b11011111 & 0b11110000);
  2119  000D32  0E90               	movlw	144
  2120  000D34  ECBB  F006         	call	_OpenTimer0
  2121                           
  2122                           ;Menu_System.c: 199: WriteTimer0(40960);
  2123  000D38  0EA0               	movlw	160
  2124  000D3A  6E15               	movwf	WriteTimer0@timer0+1,c
  2125  000D3C  0E00               	movlw	0
  2126  000D3E  6E14               	movwf	WriteTimer0@timer0,c
  2127  000D40  ECD8  F006         	call	_WriteTimer0	;wreg free
  2128                           
  2129                           ;Menu_System.c: 200: (INTCONbits.GIE = 1);
  2130  000D44  8EF2               	bsf	intcon,7,c	;volatile
  2131  000D46  0012               	return		;funcret
  2132  000D48                     __end_of_Initial:
  2133                           	opt stack 0
  2134                           tblptru	equ	0xFF8
  2135                           tblptrh	equ	0xFF7
  2136                           tblptrl	equ	0xFF6
  2137                           tablat	equ	0xFF5
  2138                           prodh	equ	0xFF4
  2139                           prodl	equ	0xFF3
  2140                           intcon	equ	0xFF2
  2141                           postinc0	equ	0xFEE
  2142                           wreg	equ	0xFE8
  2143                           postdec1	equ	0xFE5
  2144                           fsr1l	equ	0xFE1
  2145                           status	equ	0xFD8
  2146                           
  2147 ;; *************** function _delay_s *****************
  2148 ;; Defined at:
  2149 ;;		line 214 in file "Menu_System.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  secs            1    wreg     unsigned char 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  secs            1   20[COMRAM] unsigned char 
  2154 ;;  i               1   22[COMRAM] unsigned char 
  2155 ;;  j               1   21[COMRAM] unsigned char 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;		None               void
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2165 ;;      Params:         0       0       0       0       0       0       0
  2166 ;;      Locals:         3       0       0       0       0       0       0
  2167 ;;      Temps:          1       0       0       0       0       0       0
  2168 ;;      Totals:         4       0       0       0       0       0       0
  2169 ;;Total ram usage:        4 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    2
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_main
  2176 ;;		_Initial
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text13
  2181  000CE2                     __ptext13:
  2182                           	opt stack 0
  2183  000CE2                     _delay_s:
  2184                           	opt stack 28
  2185                           
  2186                           ;incstack = 0
  2187                           ;delay_s@secs stored from wreg
  2188  000CE2  6E15               	movwf	delay_s@secs,c
  2189                           
  2190                           ;Menu_System.c: 216: unsigned char i,j;
  2191                           ;Menu_System.c: 217: for(j=0;j<secs;j++)
  2192  000CE4  0E00               	movlw	0
  2193  000CE6  6E16               	movwf	delay_s@j,c
  2194  000CE8  D011               	goto	l895
  2195  000CEA                     l883:
  2196                           
  2197                           ;Menu_System.c: 218: {
  2198                           ;Menu_System.c: 219: for (i=0;i<25;i++)
  2199  000CEA  0E00               	movlw	0
  2200  000CEC  6E17               	movwf	delay_s@i,c
  2201  000CEE                     l885:
  2202  000CEE  0E18               	movlw	24
  2203  000CF0  6417               	cpfsgt	delay_s@i,c
  2204  000CF2  D001               	goto	l889
  2205  000CF4  D00A               	goto	l893
  2206  000CF6                     l889:
  2207                           
  2208                           ;Menu_System.c: 220: _delay((unsigned long)((40)*(19660800/4000.0)));
  2209  000CF6  0E00               	movlw	0
  2210  000CF8  6E14               	movwf	??_delay_s& (0+255),c
  2211  000CFA  0E54               	movlw	84
  2212  000CFC                     u847:
  2213  000CFC  2EE8               	decfsz	wreg,f,c
  2214  000CFE  D7FE               	goto	u847
  2215  000D00  2E14               	decfsz	??_delay_s& (0+255),f,c
  2216  000D02  D7FC               	goto	u847
  2217  000D04  D000               	nop2	
  2218  000D06  2A17               	incf	delay_s@i,f,c
  2219  000D08  D7F2               	goto	l885
  2220  000D0A                     l893:
  2221  000D0A  2A16               	incf	delay_s@j,f,c
  2222  000D0C                     l895:
  2223  000D0C  5015               	movf	delay_s@secs,w,c
  2224  000D0E  5C16               	subwf	delay_s@j,w,c
  2225  000D10  B0D8               	btfsc	status,0,c
  2226  000D12  0012               	return	
  2227  000D14  D7EA               	goto	l883
  2228  000D16                     __end_of_delay_s:
  2229                           	opt stack 0
  2230                           tblptru	equ	0xFF8
  2231                           tblptrh	equ	0xFF7
  2232                           tblptrl	equ	0xFF6
  2233                           tablat	equ	0xFF5
  2234                           prodh	equ	0xFF4
  2235                           prodl	equ	0xFF3
  2236                           intcon	equ	0xFF2
  2237                           postinc0	equ	0xFEE
  2238                           wreg	equ	0xFE8
  2239                           postdec1	equ	0xFE5
  2240                           fsr1l	equ	0xFE1
  2241                           status	equ	0xFD8
  2242                           
  2243 ;; *************** function _WriteTimer0 *****************
  2244 ;; Defined at:
  2245 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  timer0          2   19[COMRAM] unsigned int 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  timer           2   21[COMRAM] struct Timers
  2250 ;; Return value:  Size  Location     Type
  2251 ;;		None               void
  2252 ;; Registers used:
  2253 ;;		None
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2259 ;;      Params:         2       0       0       0       0       0       0
  2260 ;;      Locals:         2       0       0       0       0       0       0
  2261 ;;      Temps:          0       0       0       0       0       0       0
  2262 ;;      Totals:         4       0       0       0       0       0       0
  2263 ;;Total ram usage:        4 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    2
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_Initial
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           	psect	text14
  2274  000DB0                     __ptext14:
  2275                           	opt stack 0
  2276  000DB0                     _WriteTimer0:
  2277                           	opt stack 27
  2278                           
  2279                           ;incstack = 0
  2280  000DB0  C014  F016         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2281  000DB4  C015  F017         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2282  000DB8  C017  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2283  000DBC  C016  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2284  000DC0  0012               	return		;funcret
  2285  000DC2                     __end_of_WriteTimer0:
  2286                           	opt stack 0
  2287                           tblptru	equ	0xFF8
  2288                           tblptrh	equ	0xFF7
  2289                           tblptrl	equ	0xFF6
  2290                           tablat	equ	0xFF5
  2291                           prodh	equ	0xFF4
  2292                           prodl	equ	0xFF3
  2293                           intcon	equ	0xFF2
  2294                           postinc0	equ	0xFEE
  2295                           wreg	equ	0xFE8
  2296                           postdec1	equ	0xFE5
  2297                           fsr1l	equ	0xFE1
  2298                           status	equ	0xFD8
  2299                           
  2300 ;; *************** function _OpenTimer0 *****************
  2301 ;; Defined at:
  2302 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0open.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  config          1    wreg     unsigned char 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  config          1   19[COMRAM] unsigned char 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;		None               void
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2316 ;;      Params:         0       0       0       0       0       0       0
  2317 ;;      Locals:         1       0       0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0
  2319 ;;      Totals:         1       0       0       0       0       0       0
  2320 ;;Total ram usage:        1 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    2
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_Initial
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text15
  2331  000D76                     __ptext15:
  2332                           	opt stack 0
  2333  000D76                     _OpenTimer0:
  2334                           	opt stack 27
  2335                           
  2336                           ;incstack = 0
  2337                           ;OpenTimer0@config stored from wreg
  2338  000D76  6E14               	movwf	OpenTimer0@config,c
  2339  000D78  5014               	movf	OpenTimer0@config,w,c
  2340  000D7A  0B7F               	andlw	127
  2341  000D7C  6ED5               	movwf	4053,c	;volatile
  2342  000D7E  0E00               	movlw	0
  2343  000D80  6ED7               	movwf	4055,c	;volatile
  2344  000D82  0E00               	movlw	0
  2345  000D84  6ED6               	movwf	4054,c	;volatile
  2346  000D86  94F2               	bcf	intcon,2,c	;volatile
  2347  000D88  AE14               	btfss	OpenTimer0@config,7,c
  2348  000D8A  D002               	goto	l190
  2349  000D8C  8AF2               	bsf	intcon,5,c	;volatile
  2350  000D8E  D001               	goto	l191
  2351  000D90                     l190:
  2352  000D90  9AF2               	bcf	intcon,5,c	;volatile
  2353  000D92                     l191:
  2354  000D92  8ED5               	bsf	4053,7,c	;volatile
  2355  000D94  0012               	return		;funcret
  2356  000D96                     __end_of_OpenTimer0:
  2357                           	opt stack 0
  2358                           tblptru	equ	0xFF8
  2359                           tblptrh	equ	0xFF7
  2360                           tblptrl	equ	0xFF6
  2361                           tablat	equ	0xFF5
  2362                           prodh	equ	0xFF4
  2363                           prodl	equ	0xFF3
  2364                           intcon	equ	0xFF2
  2365                           postinc0	equ	0xFEE
  2366                           wreg	equ	0xFE8
  2367                           postdec1	equ	0xFE5
  2368                           fsr1l	equ	0xFE1
  2369                           status	equ	0xFD8
  2370                           
  2371 ;; *************** function _myIsr *****************
  2372 ;; Defined at:
  2373 ;;		line 55 in file "Menu_System.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;		None
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;		None
  2378 ;; Return value:  Size  Location     Type
  2379 ;;		None               void
  2380 ;; Registers used:
  2381 ;;		wreg, status,2, status,0, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2387 ;;      Params:         0       0       0       0       0       0       0
  2388 ;;      Locals:         0       0       0       0       0       0       0
  2389 ;;      Temps:         15       0       0       0       0       0       0
  2390 ;;      Totals:        15       0       0       0       0       0       0
  2391 ;;Total ram usage:       15 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    1
  2394 ;; This function calls:
  2395 ;;		_Find_Button_Press
  2396 ;;		i2_WriteTimer0
  2397 ;; This function is called by:
  2398 ;;		Interrupt level 2
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	intcode
  2403  000008                     __pintcode:
  2404                           	opt stack 0
  2405  000008                     _myIsr:
  2406                           	opt stack 25
  2407                           
  2408                           ;incstack = 0
  2409  000008  8230               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2410  00000A  CFFA F006          	movff	pclath,??_myIsr+1
  2411  00000E  CFFB F007          	movff	pclatu,??_myIsr+2
  2412  000012  ED77  F004         	call	int_func,f	;refresh shadow registers
  2413                           pclatu	equ	0xFFB
  2414                           pclath	equ	0xFFA
  2415                           tblptru	equ	0xFF8
  2416                           tblptrh	equ	0xFF7
  2417                           tblptrl	equ	0xFF6
  2418                           tablat	equ	0xFF5
  2419                           prodh	equ	0xFF4
  2420                           prodl	equ	0xFF3
  2421                           intcon	equ	0xFF2
  2422                           postinc0	equ	0xFEE
  2423                           wreg	equ	0xFE8
  2424                           postdec1	equ	0xFE5
  2425                           fsr1l	equ	0xFE1
  2426                           status	equ	0xFD8
  2427                           
  2428                           	psect	intcode_body
  2429  0008EE                     __pintcode_body:
  2430                           	opt stack 25
  2431  0008EE                     int_func:
  2432                           	opt stack 25
  2433  0008EE  0006               	pop		; remove dummy address from shadow register refresh
  2434  0008F0  CFE9 F008          	movff	fsr0l,??_myIsr+3
  2435  0008F4  CFEA F009          	movff	fsr0h,??_myIsr+4
  2436  0008F8  CFE1 F00A          	movff	fsr1l,??_myIsr+5
  2437  0008FC  CFE2 F00B          	movff	fsr1h,??_myIsr+6
  2438  000900  CFD9 F00C          	movff	fsr2l,??_myIsr+7
  2439  000904  CFDA F00D          	movff	fsr2h,??_myIsr+8
  2440  000908  CFF3 F00E          	movff	prodl,??_myIsr+9
  2441  00090C  CFF4 F00F          	movff	prodh,??_myIsr+10
  2442  000910  CFF6 F010          	movff	tblptrl,??_myIsr+11
  2443  000914  CFF7 F011          	movff	tblptrh,??_myIsr+12
  2444  000918  CFF8 F012          	movff	tblptru,??_myIsr+13
  2445  00091C  CFF5 F013          	movff	tablat,??_myIsr+14
  2446                           
  2447                           ;Menu_System.c: 59: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  2448  000920  BAF2               	btfsc	intcon,5,c	;volatile
  2449  000922  A4F2               	btfss	intcon,2,c	;volatile
  2450  000924  D026               	goto	i2l133
  2451                           
  2452                           ;Menu_System.c: 61: Find_Button_Press();
  2453  000926  EC5E  F005         	call	_Find_Button_Press	;wreg free
  2454                           
  2455                           ;Menu_System.c: 62: WriteTimer0(40960);
  2456  00092A  0EA0               	movlw	160
  2457  00092C  6E02               	movwf	i2WriteTimer0@timer0+1,c
  2458  00092E  0E00               	movlw	0
  2459  000930  6E01               	movwf	i2WriteTimer0@timer0,c
  2460  000932  ECE1  F006         	call	i2_WriteTimer0	;wreg free
  2461                           
  2462                           ;Menu_System.c: 63: INTCONbits.TMR0IF = 0;
  2463  000936  94F2               	bcf	intcon,2,c	;volatile
  2464                           
  2465                           ;Menu_System.c: 65: count++;
  2466  000938  2A29               	incf	_count,f,c
  2467                           
  2468                           ;Menu_System.c: 66: if(count == 10){
  2469  00093A  0E0A               	movlw	10
  2470  00093C  1829               	xorwf	_count,w,c
  2471  00093E  A4D8               	btfss	status,2,c
  2472  000940  D004               	goto	i2l1409
  2473                           
  2474                           ;Menu_System.c: 67: count_test++;
  2475  000942  2A2A               	incf	_count_test,f,c
  2476                           
  2477                           ;Menu_System.c: 68: count = 0;
  2478  000944  0E00               	movlw	0
  2479  000946  6E29               	movwf	_count,c
  2480                           
  2481                           ;Menu_System.c: 69: Tick_E = 1;
  2482  000948  802F               	bsf	_Tick_E/(0+8),_Tick_E& (0+7),c
  2483  00094A                     i2l1409:
  2484                           
  2485                           ;Menu_System.c: 70: }
  2486                           ;Menu_System.c: 72: if(count_test == 10){
  2487  00094A  0E0A               	movlw	10
  2488  00094C  182A               	xorwf	_count_test,w,c
  2489  00094E  A4D8               	btfss	status,2,c
  2490  000950  D010               	goto	i2l133
  2491                           
  2492                           ;Menu_System.c: 73: PORTCbits.RC7 = ~PORTCbits.RC7;
  2493  000952  AE82               	btfss	3970,7,c	;volatile
  2494  000954  D002               	goto	i2u67_40
  2495  000956  0E01               	movlw	1
  2496  000958  D001               	goto	i2u67_46
  2497  00095A                     i2u67_40:
  2498  00095A  0E00               	movlw	0
  2499  00095C                     i2u67_46:
  2500  00095C  0AFF               	xorlw	255
  2501  00095E  6E05               	movwf	??_myIsr& (0+255),c
  2502  000960  3205               	rrcf	??_myIsr,f,c
  2503  000962  3205               	rrcf	??_myIsr,f,c
  2504  000964  5082               	movf	3970,w,c	;volatile
  2505  000966  1805               	xorwf	??_myIsr,w,c
  2506  000968  0B7F               	andlw	-129
  2507  00096A  1805               	xorwf	??_myIsr,w,c
  2508  00096C  6E82               	movwf	3970,c	;volatile
  2509                           
  2510                           ;Menu_System.c: 74: count_test = 0;
  2511  00096E  0E00               	movlw	0
  2512  000970  6E2A               	movwf	_count_test,c
  2513  000972                     i2l133:
  2514  000972  C013  FFF5         	movff	??_myIsr+14,tablat
  2515  000976  C012  FFF8         	movff	??_myIsr+13,tblptru
  2516  00097A  C011  FFF7         	movff	??_myIsr+12,tblptrh
  2517  00097E  C010  FFF6         	movff	??_myIsr+11,tblptrl
  2518  000982  C00F  FFF4         	movff	??_myIsr+10,prodh
  2519  000986  C00E  FFF3         	movff	??_myIsr+9,prodl
  2520  00098A  C00D  FFDA         	movff	??_myIsr+8,fsr2h
  2521  00098E  C00C  FFD9         	movff	??_myIsr+7,fsr2l
  2522  000992  C00B  FFE2         	movff	??_myIsr+6,fsr1h
  2523  000996  C00A  FFE1         	movff	??_myIsr+5,fsr1l
  2524  00099A  C009  FFEA         	movff	??_myIsr+4,fsr0h
  2525  00099E  C008  FFE9         	movff	??_myIsr+3,fsr0l
  2526  0009A2  C007  FFFB         	movff	??_myIsr+2,pclatu
  2527  0009A6  C006  FFFA         	movff	??_myIsr+1,pclath
  2528  0009AA  9230               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2529  0009AC  0011               	retfie		f
  2530  0009AE                     __end_of_myIsr:
  2531                           	opt stack 0
  2532                           pclatu	equ	0xFFB
  2533                           pclath	equ	0xFFA
  2534                           tblptru	equ	0xFF8
  2535                           tblptrh	equ	0xFF7
  2536                           tblptrl	equ	0xFF6
  2537                           tablat	equ	0xFF5
  2538                           prodh	equ	0xFF4
  2539                           prodl	equ	0xFF3
  2540                           intcon	equ	0xFF2
  2541                           postinc0	equ	0xFEE
  2542                           fsr0h	equ	0xFEA
  2543                           fsr0l	equ	0xFE9
  2544                           wreg	equ	0xFE8
  2545                           postdec1	equ	0xFE5
  2546                           fsr1h	equ	0xFE2
  2547                           fsr1l	equ	0xFE1
  2548                           fsr2h	equ	0xFDA
  2549                           fsr2l	equ	0xFD9
  2550                           status	equ	0xFD8
  2551                           
  2552 ;; *************** function i2_WriteTimer0 *****************
  2553 ;; Defined at:
  2554 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  timer0          2    0[COMRAM] unsigned int 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;  WriteTimer0     2    2[COMRAM] struct Timers
  2559 ;; Return value:  Size  Location     Type
  2560 ;;		None               void
  2561 ;; Registers used:
  2562 ;;		None
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2568 ;;      Params:         2       0       0       0       0       0       0
  2569 ;;      Locals:         2       0       0       0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0
  2571 ;;      Totals:         4       0       0       0       0       0       0
  2572 ;;Total ram usage:        4 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; This function calls:
  2575 ;;		Nothing
  2576 ;; This function is called by:
  2577 ;;		_myIsr
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text17
  2582  000DC2                     __ptext17:
  2583                           	opt stack 0
  2584  000DC2                     i2_WriteTimer0:
  2585                           	opt stack 25
  2586                           
  2587                           ;incstack = 0
  2588  000DC2  C001  F003         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  2589  000DC6  C002  F004         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  2590  000DCA  C004  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  2591  000DCE  C003  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  2592  000DD2  0012               	return		;funcret
  2593  000DD4                     __end_ofi2_WriteTimer0:
  2594                           	opt stack 0
  2595                           pclatu	equ	0xFFB
  2596                           pclath	equ	0xFFA
  2597                           tblptru	equ	0xFF8
  2598                           tblptrh	equ	0xFF7
  2599                           tblptrl	equ	0xFF6
  2600                           tablat	equ	0xFF5
  2601                           prodh	equ	0xFF4
  2602                           prodl	equ	0xFF3
  2603                           intcon	equ	0xFF2
  2604                           postinc0	equ	0xFEE
  2605                           fsr0h	equ	0xFEA
  2606                           fsr0l	equ	0xFE9
  2607                           wreg	equ	0xFE8
  2608                           postdec1	equ	0xFE5
  2609                           fsr1h	equ	0xFE2
  2610                           fsr1l	equ	0xFE1
  2611                           fsr2h	equ	0xFDA
  2612                           fsr2l	equ	0xFD9
  2613                           status	equ	0xFD8
  2614                           
  2615 ;; *************** function _Find_Button_Press *****************
  2616 ;; Defined at:
  2617 ;;		line 36 in file "../../Buttons_Debounce_State_Mch-master/Buttons_Debounce.X/Buttons_Debounce.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;		None
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;		None               void
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2631 ;;      Params:         0       0       0       0       0       0       0
  2632 ;;      Locals:         0       0       0       0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0       0       0
  2634 ;;      Totals:         0       0       0       0       0       0       0
  2635 ;;Total ram usage:        0 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_myIsr
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text18
  2645  000ABC                     __ptext18:
  2646                           	opt stack 0
  2647  000ABC                     _Find_Button_Press:
  2648                           	opt stack 25
  2649                           
  2650                           ;Buttons_Debounce.c: 38: static states Button_State=Waiting;
  2651                           ;Buttons_Debounce.c: 39: static unsigned char Button_Count=0;
  2652                           ;Buttons_Debounce.c: 40: static Bit_Mask Temp_Press;
  2653                           ;Buttons_Debounce.c: 44: switch (Button_State){
  2654                           
  2655                           ;incstack = 0
  2656  000ABC  D030               	goto	i2l1037
  2657  000ABE                     i2l1013:
  2658                           
  2659                           ;Buttons_Debounce.c: 46: if(PORTB)
  2660  000ABE  5081               	movf	3969,w,c	;volatile
  2661  000AC0  B4D8               	btfsc	status,2,c
  2662  000AC2  0012               	return	
  2663                           
  2664                           ;Buttons_Debounce.c: 47: {
  2665                           ;Buttons_Debounce.c: 48: Button_State = Detected;
  2666  000AC4  0E01               	movlw	1
  2667  000AC6  6E26               	movwf	Find_Button_Press@Button_State,c
  2668                           
  2669                           ;Buttons_Debounce.c: 49: Button_Count = 0;
  2670  000AC8  0E00               	movlw	0
  2671  000ACA  6E25               	movwf	Find_Button_Press@Button_Count,c
  2672                           
  2673                           ;Buttons_Debounce.c: 51: Temp_Press.Full=PORTB;
  2674  000ACC  CF81 F027          	movff	3969,Find_Button_Press@Temp_Press	;volatile
  2675                           
  2676                           ;Buttons_Debounce.c: 52: }
  2677                           ;Buttons_Debounce.c: 53: break;
  2678  000AD0  0012               	return	
  2679  000AD2                     i2l1019:
  2680                           
  2681                           ;Buttons_Debounce.c: 55: if (Temp_Press.Full == PORTB)
  2682  000AD2  5081               	movf	3969,w,c	;volatile
  2683  000AD4  1827               	xorwf	Find_Button_Press@Temp_Press,w,c
  2684  000AD6  A4D8               	btfss	status,2,c
  2685  000AD8  D007               	goto	i2l1027
  2686                           
  2687                           ;Buttons_Debounce.c: 56: {
  2688                           ;Buttons_Debounce.c: 57: ++Button_Count;
  2689  000ADA  2A25               	incf	Find_Button_Press@Button_Count,f,c
  2690                           
  2691                           ;Buttons_Debounce.c: 58: if (Button_Count > 10)
  2692  000ADC  0E0A               	movlw	10
  2693  000ADE  6425               	cpfsgt	Find_Button_Press@Button_Count,c
  2694  000AE0  0012               	return	
  2695                           
  2696                           ;Buttons_Debounce.c: 59: {
  2697                           ;Buttons_Debounce.c: 60: Button_State = WaitForRelease;
  2698  000AE2  0E02               	movlw	2
  2699  000AE4  6E26               	movwf	Find_Button_Press@Button_State,c
  2700                           
  2701                           ;Buttons_Debounce.c: 61: }
  2702                           ;Buttons_Debounce.c: 62: }
  2703  000AE6  0012               	return	
  2704  000AE8                     i2l1027:
  2705                           
  2706                           ;Buttons_Debounce.c: 63: else
  2707                           ;Buttons_Debounce.c: 64: {
  2708                           ;Buttons_Debounce.c: 65: Button_State = Waiting;
  2709  000AE8  0E00               	movlw	0
  2710  000AEA  6E26               	movwf	Find_Button_Press@Button_State,c
  2711                           
  2712                           ;Buttons_Debounce.c: 66: }
  2713                           ;Buttons_Debounce.c: 67: break;
  2714  000AEC  0012               	return	
  2715  000AEE                     i2l1029:
  2716                           
  2717                           ;Buttons_Debounce.c: 69: if (!PORTB)
  2718  000AEE  5081               	movf	3969,w,c	;volatile
  2719  000AF0  A4D8               	btfss	status,2,c
  2720  000AF2  0012               	return	
  2721                           
  2722                           ;Buttons_Debounce.c: 70: {
  2723                           ;Buttons_Debounce.c: 71: Button_State = Update;
  2724  000AF4  0E03               	movlw	3
  2725  000AF6  6E26               	movwf	Find_Button_Press@Button_State,c
  2726                           
  2727                           ;Buttons_Debounce.c: 72: }
  2728                           ;Buttons_Debounce.c: 73: break;
  2729  000AF8  0012               	return	
  2730  000AFA                     i2l71:
  2731                           
  2732                           ;Buttons_Debounce.c: 75: {
  2733                           ;Buttons_Debounce.c: 76: Button_Press = Temp_Press;
  2734  000AFA  C027  F028         	movff	Find_Button_Press@Temp_Press,_Button_Press
  2735                           
  2736                           ;Buttons_Debounce.c: 77: Button_State = Waiting;
  2737  000AFE  0E00               	movlw	0
  2738  000B00  6E26               	movwf	Find_Button_Press@Button_State,c
  2739                           
  2740                           ;Buttons_Debounce.c: 78: Button_Count = 0;
  2741  000B02  0E00               	movlw	0
  2742  000B04  6E25               	movwf	Find_Button_Press@Button_Count,c
  2743                           
  2744                           ;Buttons_Debounce.c: 79: Temp_Press.Full=0;
  2745  000B06  0E00               	movlw	0
  2746  000B08  6E27               	movwf	Find_Button_Press@Temp_Press,c
  2747                           
  2748                           ;Buttons_Debounce.c: 80: }
  2749                           ;Buttons_Debounce.c: 81: break;
  2750  000B0A  0012               	return	
  2751  000B0C                     i2l1035:
  2752                           
  2753                           ;Buttons_Debounce.c: 83: {
  2754                           ;Buttons_Debounce.c: 84: Button_State = Waiting;
  2755  000B0C  0E00               	movlw	0
  2756  000B0E  6E26               	movwf	Find_Button_Press@Button_State,c
  2757                           
  2758                           ;Buttons_Debounce.c: 85: Button_Count = 0;
  2759  000B10  0E00               	movlw	0
  2760  000B12  6E25               	movwf	Find_Button_Press@Button_Count,c
  2761                           
  2762                           ;Buttons_Debounce.c: 86: Temp_Press.Full=0;
  2763  000B14  0E00               	movlw	0
  2764  000B16  6E27               	movwf	Find_Button_Press@Temp_Press,c
  2765                           
  2766                           ;Buttons_Debounce.c: 87: Button_Press.Full=0;
  2767  000B18  0E00               	movlw	0
  2768  000B1A  6E28               	movwf	_Button_Press,c
  2769                           
  2770                           ;Buttons_Debounce.c: 88: }
  2771                           ;Buttons_Debounce.c: 89: }
  2772  000B1C  0012               	return	
  2773  000B1E                     i2l1037:
  2774  000B1E  5026               	movf	Find_Button_Press@Button_State,w,c
  2775                           
  2776                           ; Switch size 1, requested type "space"
  2777                           ; Number of cases is 4, Range of values is 0 to 3
  2778                           ; switch strategies available:
  2779                           ; Name         Instructions Cycles
  2780                           ; simple_byte           13     7 (average)
  2781                           ;	Chosen strategy is simple_byte
  2782  000B20  0A00               	xorlw	0	; case 0
  2783  000B22  B4D8               	btfsc	status,2,c
  2784  000B24  D7CC               	goto	i2l1013
  2785  000B26  0A01               	xorlw	1	; case 1
  2786  000B28  B4D8               	btfsc	status,2,c
  2787  000B2A  D7D3               	goto	i2l1019
  2788  000B2C  0A03               	xorlw	3	; case 2
  2789  000B2E  B4D8               	btfsc	status,2,c
  2790  000B30  D7DE               	goto	i2l1029
  2791  000B32  0A01               	xorlw	1	; case 3
  2792  000B34  B4D8               	btfsc	status,2,c
  2793  000B36  D7E1               	goto	i2l71
  2794  000B38  D7E9               	goto	i2l1035
  2795  000B3A                     __end_of_Find_Button_Press:
  2796                           	opt stack 0
  2797                           pclatu	equ	0xFFB
  2798                           pclath	equ	0xFFA
  2799                           tblptru	equ	0xFF8
  2800                           tblptrh	equ	0xFF7
  2801                           tblptrl	equ	0xFF6
  2802                           tablat	equ	0xFF5
  2803                           prodh	equ	0xFF4
  2804                           prodl	equ	0xFF3
  2805                           intcon	equ	0xFF2
  2806                           postinc0	equ	0xFEE
  2807                           fsr0h	equ	0xFEA
  2808                           fsr0l	equ	0xFE9
  2809                           wreg	equ	0xFE8
  2810                           postdec1	equ	0xFE5
  2811                           fsr1h	equ	0xFE2
  2812                           fsr1l	equ	0xFE1
  2813                           fsr2h	equ	0xFDA
  2814                           fsr2l	equ	0xFD9
  2815                           status	equ	0xFD8
  2816                           pclatu	equ	0xFFB
  2817                           pclath	equ	0xFFA
  2818                           tblptru	equ	0xFF8
  2819                           tblptrh	equ	0xFF7
  2820                           tblptrl	equ	0xFF6
  2821                           tablat	equ	0xFF5
  2822                           prodh	equ	0xFF4
  2823                           prodl	equ	0xFF3
  2824                           intcon	equ	0xFF2
  2825                           postinc0	equ	0xFEE
  2826                           fsr0h	equ	0xFEA
  2827                           fsr0l	equ	0xFE9
  2828                           wreg	equ	0xFE8
  2829                           postdec1	equ	0xFE5
  2830                           fsr1h	equ	0xFE2
  2831                           fsr1l	equ	0xFE1
  2832                           fsr2h	equ	0xFDA
  2833                           fsr2l	equ	0xFD9
  2834                           status	equ	0xFD8
  2835                           
  2836                           	psect	rparam
  2837  0000                     pclatu	equ	0xFFB
  2838                           pclath	equ	0xFFA
  2839                           tblptru	equ	0xFF8
  2840                           tblptrh	equ	0xFF7
  2841                           tblptrl	equ	0xFF6
  2842                           tablat	equ	0xFF5
  2843                           prodh	equ	0xFF4
  2844                           prodl	equ	0xFF3
  2845                           intcon	equ	0xFF2
  2846                           postinc0	equ	0xFEE
  2847                           fsr0h	equ	0xFEA
  2848                           fsr0l	equ	0xFE9
  2849                           wreg	equ	0xFE8
  2850                           postdec1	equ	0xFE5
  2851                           fsr1h	equ	0xFE2
  2852                           fsr1l	equ	0xFE1
  2853                           fsr2h	equ	0xFDA
  2854                           fsr2l	equ	0xFD9
  2855                           status	equ	0xFD8
  2856                           
  2857                           	psect	temp
  2858  000030                     btemp:
  2859                           	opt stack 0
  2860  000030                     	ds	1
  2861  0000                     int$flags	set	btemp
  2862                           pclatu	equ	0xFFB
  2863                           pclath	equ	0xFFA
  2864                           tblptru	equ	0xFF8
  2865                           tblptrh	equ	0xFF7
  2866                           tblptrl	equ	0xFF6
  2867                           tablat	equ	0xFF5
  2868                           prodh	equ	0xFF4
  2869                           prodl	equ	0xFF3
  2870                           intcon	equ	0xFF2
  2871                           postinc0	equ	0xFEE
  2872                           fsr0h	equ	0xFEA
  2873                           fsr0l	equ	0xFE9
  2874                           wreg	equ	0xFE8
  2875                           postdec1	equ	0xFE5
  2876                           fsr1h	equ	0xFE2
  2877                           fsr1l	equ	0xFE1
  2878                           fsr2h	equ	0xFDA
  2879                           fsr2l	equ	0xFD9
  2880                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    165
    Data        4
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     36      47
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    startup	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), 

    problem	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    lcd_print@mess	PTR const unsigned char  size(2) Largest target is 160
		 -> msg_ary(CODE[160]), STR_2(CODE[12]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Window
    _lcd_start->_lcd_clear
    _lcd_display_value->___awdiv
    _Window->_lcd_print
    _lcd_print->_lcd_print_ch
    _lcd_print_ch->_lcd_raw_send
    _lcd_cursor->_lcd_command
    _lcd_clear->_lcd_command
    _lcd_command->_lcd_raw_send
    _Initial->_WriteTimer0
    _Initial->_delay_s

Critical Paths under _myIsr in COMRAM

    _myIsr->i2_WriteTimer0

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    7993
                                             32 COMRAM     4     4      0
                            _Initial
                             _Window
                            _delay_s
                          _lcd_clear
                         _lcd_cursor
                  _lcd_display_value
                          _lcd_print
                          _lcd_start
 ---------------------------------------------------------------------------------
 (1) _lcd_start                                            3     3      0     812
                                             25 COMRAM     2     2      0
                          _lcd_clear
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_display_value                                    4     4      0    1909
                                             27 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Window                                               3     3      0    2382
                                             29 COMRAM     3     3      0
                          _lcd_clear
                         _lcd_cursor
                          _lcd_print
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     766
                                             24 COMRAM     5     3      2
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) _lcd_print_ch                                         1     1      0     372
                                             23 COMRAM     1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor                                           2     1      1    1200
                                             24 COMRAM     2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0     372
                                             24 COMRAM     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          1     1      0     372
                                             23 COMRAM     1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (3) _lcd_raw_send                                         4     3      1     350
                                             19 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Initial                                              0     0      0     285
                         _OpenTimer0
                        _WriteTimer0
                            _delay_s
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              4     4      0      60
                                             19 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     195
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      30
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myIsr                                               15    15      0      93
                                              4 COMRAM    15    15      0
                  _Find_Button_Press
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (6) i2_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _Find_Button_Press                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initial
     _OpenTimer0
     _WriteTimer0
     _delay_s
   _Window
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_cursor
       _lcd_command
         _lcd_raw_send
     _lcd_print
       _lcd_print_ch
         _lcd_raw_send
   _delay_s
   _lcd_clear
     _lcd_command
       _lcd_raw_send
   _lcd_cursor
     _lcd_command
       _lcd_raw_send
   _lcd_display_value
     ___awdiv
     ___awmod
     _lcd_print_ch
       _lcd_raw_send
   _lcd_print
     _lcd_print_ch
       _lcd_raw_send
   _lcd_start
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_command
       _lcd_raw_send

 _myIsr (ROOT)
   _Find_Button_Press
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     24      2F       1       37.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F      15        0.0%
DATA                 0      0      2F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Feb 22 12:54:15 2017

                ?_lcd_raw_send 0014                   ___awdiv@sign 0019                    __CFG_BORV$3 000000  
                ?_lcd_print_ch 0001                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                    __CFG_OSC$HS 000000  
                          l150 0740                            l145 0720                            l155 0784  
                          l148 0730                            l157 078A                            l190 0D90  
                          l191 0D92                            l883 0CEA                            l893 0D0A  
                          l885 0CEE                            l895 0D0C                            l889 0CF6  
                 __CFG_CPB$OFF 000000                            u425 0810                   __CFG_CPD$OFF 000000  
                          u435 082C                            u445 084A                            u455 0862  
                          u456 0864                            u465 0884                            u466 0886  
                          u807 0876                            u817 08D6                            u827 08DE  
                          u837 08E6                            u757 0C70                            u847 0CFC  
                          u767 0D54                            u777 0D6A                            u787 0866  
                          u797 086E           __size_of_WriteTimer0 0012                   ___awmod@sign 0019  
                          prod 000FF3                            wreg 000FE8                    lcd_cursor@x 001A  
                  lcd_cursor@y 0019                   __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000  
                         l1311 0B88                           l1303 0B68                           l1305 0B70  
                         l1227 0DA2                           l1235 0C16                           l1251 0A4C  
                         l1307 0B74                           l1315 0B92                           l1333 0C84  
                         l1239 0C3C                           l1263 0A72                           l1319 0BA0  
                         l1265 0A7A                           l1257 0A5C                           l1329 0C7C  
                         l1283 0AB2                           l1275 0A9A                           l1267 0A7E  
                         l1339 0CA0                           l1437 0716                           l1279 0AA4  
                         l1295 0B4E                           l1455 0750                           l1457 0760  
                         l1299 0B5A                           l1477 07BC                           l1485 07DC  
                         l1487 07EC                           STR_1 06B2                           STR_2 06A6  
                         _LATC 000F8B                           i2l71 0AFA                           _main 06BC  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 0030         __size_ofi2_WriteTimer0 0012                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 0016  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                 ??_lcd_raw_send 0015  
                 ___param_bank 000010               main@Actual_Value 0021                __end_of_Initial 0D48  
               ??_lcd_print_ch 0018                  lcd_command@in 0018                          ?_main 0001  
              __end_of___awdiv 0ABC                __end_of___awmod 0BAA                          _T0CON 000FD5  
              ___awdiv@divisor 0016                          i2l133 0972                ___awdiv@counter 0018  
                        _TMR0H 000FD7                          _TMR0L 000FD6                          _PORTB 000F81  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                __CFG_PWRT$OFF 000000                __end_of_delay_s 0D16                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000  
               __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000  
               __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
                        _count 0029                          _myIsr 0008                __end_of_msg_ary 06A6  
               __pbitbssCOMRAM 0178                          tablat 000FF5                          status 000FD8  
              __initialization 0CA6                   __end_of_main 07F2                         ??_main 0021  
                i2_WriteTimer0 0DC2                  __activetblptr 000002                 main@Temp_Value 0022  
                       _ADCON0 000FC2                         _ADCON1 000FC1                         _ADRESH 000FC4  
                       ?_myIsr 0001               ___awdiv@dividend 0014                         i2l1013 0ABE  
                       i2l1035 0B0C                         i2l1027 0AE8                         i2l1019 0AD2  
                       i2l1029 0AEE                         i2l1037 0B1E                         i2l1409 094A  
                   _OpenTimer0 0D76                      ??_Initial 0018                 __CFG_XINST$OFF 000000  
                lcd_print@mess 0019                         _Tick_E 0178               __end_of_lcd_init 0606  
         __size_of_lcd_command 000E                         _Window 0BAA                      ??___awdiv 0018  
               __CFG_STVREN$ON 000000                      ??___awmod 0018               OpenTimer0@config 0014  
             ___awdiv@quotient 001A                ___awmod@divisor 0016                      ??_delay_s 0014  
               ?i2_WriteTimer0 0001                ___awmod@counter 0018                   __pdataCOMRAM 002B  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8           __end_of_lcd_raw_send 08EE           __end_of_lcd_print_ch 0DE2  
                   __accesstop 0080        __end_of__initialization 0CD4                __CFG_PBADEN$OFF 000000  
                ___rparam_used 000001                 __pcstackCOMRAM 0001                  __end_of_myIsr 09AE  
           __size_of_lcd_clear 002E             __size_of_lcd_print 0054             __size_of_lcd_start 0042  
                      ??_myIsr 0005                    ?_OpenTimer0 0001                 lcd_raw_send@RS 0014  
               lcd_raw_send@in 0017                        ?_Window 0001          lcd_display_value@tens 001D  
              ??i2_WriteTimer0 0003               WriteTimer0@timer 0016                  ??_WriteTimer0 0016  
            main@Desired_Value 0024                     _lcd_cursor 0D96                        i2u67_40 095A  
                      i2u67_46 095C            i2WriteTimer0@timer0 0001                        _Initial 0D16  
                   _count_test 002A                        __Hparam 0000                        __Lparam 0000  
            __end_of_lcd_clear 0D76    Find_Button_Press@Temp_Press 0027                __size_of_Window 0066  
            __end_of_lcd_print 0C64              __end_of_lcd_start 0CA6                 lcd_print_ch@in 0018  
                      ___awdiv 0A38                        ___awmod 0B3A                   __psmallconst 0600  
                      __pcinit 0CA6                        _delay_s 0CE2                        __ramtop 0600  
          __size_of_OpenTimer0 0020                        __ptext0 06BC                        __ptext1 0C64  
                      __ptext2 09AE                        __ptext3 0B3A                        __ptext4 0A38  
                      __ptext5 0BAA                        __ptext6 0C10                        __ptext7 0DD4  
                      __ptext8 0D96                        __ptext9 0D48                      _T0CONbits 000FD5  
        __size_of_lcd_raw_send 00FC               ___awmod@dividend 0014                        _msg_ary 0606  
          __end_of_WriteTimer0 0DC2          __size_of_lcd_print_ch 000E                        _problem 002B  
                      _startup 002D                 __pintcode_body 08EE           end_of_initialization 0CD4  
                __Lmediumconst 0000                        int_func 08EE              _Find_Button_Press 0ABC  
           ?_Find_Button_Press 0001                        postdec1 000FE5                        postinc0 000FEE  
                 _lcd_raw_send 07F2            ??_Find_Button_Press 0001                   _lcd_print_ch 0DD4  
                    _PORTCbits 000F82                    ?_lcd_cursor 0019      __end_of_Find_Button_Press 0B3A  
                ??_lcd_command 0018                     lcd_print@i 001D                     lcd_start@i 001B  
            _lcd_display_value 09AE                 __end_of_Window 0C10             ?_lcd_display_value 0001  
                __pidataCOMRAM 0DF0                    _WriteTimer0 0DB0            ??_lcd_display_value 001C  
          start_initialization 0CA6                   _Button_Press 0028                   ??_OpenTimer0 0014  
    __end_of_lcd_display_value 0A38                       ??_Window 001E            __size_of_lcd_cursor 001A  
          __end_of_lcd_command 0DF0               __CFG_LPT1OSC$OFF 000000             __end_of_OpenTimer0 0D96  
                  __pbssCOMRAM 0025                      Window@num 0020     __size_of_Find_Button_Press 007E  
                     ?_Initial 0001              __CFG_CCP2MX$PORTC 000000                      __pintcode 0008  
                     ?___awdiv 0014                       ?___awmod 0014                      _lcd_clear 0D48  
                     ?_delay_s 0001          __end_ofi2_WriteTimer0 0DD4                      _lcd_print 0C10  
       lcd_display_value@hunds 001C                      _lcd_start 0C64         lcd_display_value@value 001F  
       lcd_display_value@units 001E                    __smallconst 0600              WriteTimer0@timer0 0014  
           i2WriteTimer0@timer 0003                 __size_of_myIsr 09A6                       _LATDbits 000F8C  
                  _lcd_command 0DE2     __size_of_lcd_display_value 008A               main@my_mch_state 0023  
             __CFG_WDTPS$32768 000000                     ?_lcd_clear 0001                     ?_lcd_print 0019  
                   ?_lcd_start 0001                     _ADCON0bits 000FC2                   ??_lcd_cursor 001A  
                    copy_data0 0CC8                       __Hrparam 0000               __size_of_Initial 0032  
                     __Lrparam 0000             __CFG_BOREN$SBORDIS 000000             __end_of_lcd_cursor 0DB0  
             __size_of___awdiv 0084               __size_of___awmod 0070                   ?_WriteTimer0 0014  
             __size_of_delay_s 0034                       __ptext10 0DE2                       __ptext11 07F2  
                     __ptext12 0D16                       __ptext13 0CE2                       __ptext14 0DB0  
                     __ptext15 0D76                       __ptext17 0DC2                       __ptext18 0ABC  
                     _lcd_init 0601                  __size_of_main 0136                       delay_s@i 0017  
                     delay_s@j 0016                       int$flags 0030                    ??_lcd_clear 0019  
                  delay_s@secs 0015                    ??_lcd_print 001B                    ??_lcd_start 001A  
                   _INTCONbits 000FF2                       intlevel2 0000  Find_Button_Press@Button_Count 0025  
Find_Button_Press@Button_State 0026                   ?_lcd_command 0001  
