

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Mar 01 12:09:20 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           	psect	idataCOMRAM
    37  000E28                     __pidataCOMRAM:
    38                           	opt stack 0
    39                           
    40                           ;initializer for main@F4354
    41  000E28  32                 	db	50
    42  000E29  32                 	db	50
    43  000E2A  00                 	db	0
    44                           
    45                           ;initializer for _problem
    46  000E2B  B2                 	db	low STR_1
    47  000E2C  06                 	db	high STR_1
    48                           
    49                           ;initializer for _startup
    50  000E2D  A6                 	db	low STR_2
    51  000E2E  06                 	db	high STR_2
    52                           
    53                           	psect	smallconst
    54  000600                     __psmallconst:
    55                           	opt stack 0
    56  000600  00                 	db	0
    57  000601                     _lcd_init:
    58                           	opt stack 0
    59  000601  33                 	db	51
    60  000602  32                 	db	50
    61  000603  2C                 	db	44
    62  000604  06                 	db	6
    63  000605  0C                 	db	12
    64  000606                     __end_of_lcd_init:
    65                           	opt stack 0
    66  000606                     _msg_ary:
    67                           	opt stack 0
    68  000606  44                 	db	68
    69  000607  65                 	db	101
    70  000608  73                 	db	115
    71  000609  69                 	db	105
    72  00060A  72                 	db	114
    73  00060B  65                 	db	101
    74  00060C  64                 	db	100
    75  00060D  3E                 	db	62
    76  00060E  20                 	db	32
    77  00060F  00                 	db	0
    78  000610  00                 	db	0
    79  000611  00                 	db	0
    80  000612  00                 	db	0
    81  000613  00                 	db	0
    82  000614  00                 	db	0
    83  000615  00                 	db	0
    84  000616  41                 	db	65
    85  000617  63                 	db	99
    86  000618  74                 	db	116
    87  000619  75                 	db	117
    88  00061A  61                 	db	97
    89  00061B  6C                 	db	108
    90  00061C  3E                 	db	62
    91  00061D  20                 	db	32
    92  00061E  00                 	db	0
    93  00061F  00                 	db	0
    94  000620  00                 	db	0
    95  000621  00                 	db	0
    96  000622  00                 	db	0
    97  000623  00                 	db	0
    98  000624  00                 	db	0
    99  000625  00                 	db	0
   100  000626  44                 	db	68
   101  000627  65                 	db	101
   102  000628  73                 	db	115
   103  000629  69                 	db	105
   104  00062A  72                 	db	114
   105  00062B  65                 	db	101
   106  00062C  64                 	db	100
   107  00062D  3E                 	db	62
   108  00062E  20                 	db	32
   109  00062F  00                 	db	0
   110  000630  00                 	db	0
   111  000631  00                 	db	0
   112  000632  00                 	db	0
   113  000633  00                 	db	0
   114  000634  00                 	db	0
   115  000635  00                 	db	0
   116  000636  41                 	db	65
   117  000637  44                 	db	68
   118  000638  43                 	db	67
   119  000639  52                 	db	82
   120  00063A  65                 	db	101
   121  00063B  61                 	db	97
   122  00063C  64                 	db	100
   123  00063D  3E                 	db	62
   124  00063E  20                 	db	32
   125  00063F  00                 	db	0
   126  000640  00                 	db	0
   127  000641  00                 	db	0
   128  000642  00                 	db	0
   129  000643  00                 	db	0
   130  000644  00                 	db	0
   131  000645  00                 	db	0
   132  000646  00                 	db	0
   133  000647  00                 	db	0
   134  000648  00                 	db	0
   135  000649  00                 	db	0
   136  00064A  00                 	db	0
   137  00064B  00                 	db	0
   138  00064C  00                 	db	0
   139  00064D  00                 	db	0
   140  00064E  00                 	db	0
   141  00064F  00                 	db	0
   142  000650  00                 	db	0
   143  000651  00                 	db	0
   144  000652  00                 	db	0
   145  000653  00                 	db	0
   146  000654  00                 	db	0
   147  000655  00                 	db	0
   148  000656  00                 	db	0
   149  000657  00                 	db	0
   150  000658  00                 	db	0
   151  000659  00                 	db	0
   152  00065A  00                 	db	0
   153  00065B  00                 	db	0
   154  00065C  00                 	db	0
   155  00065D  00                 	db	0
   156  00065E  00                 	db	0
   157  00065F  00                 	db	0
   158  000660  00                 	db	0
   159  000661  00                 	db	0
   160  000662  00                 	db	0
   161  000663  00                 	db	0
   162  000664  00                 	db	0
   163  000665  00                 	db	0
   164  000666  00                 	db	0
   165  000667  00                 	db	0
   166  000668  00                 	db	0
   167  000669  00                 	db	0
   168  00066A  00                 	db	0
   169  00066B  00                 	db	0
   170  00066C  00                 	db	0
   171  00066D  00                 	db	0
   172  00066E  00                 	db	0
   173  00066F  00                 	db	0
   174  000670  00                 	db	0
   175  000671  00                 	db	0
   176  000672  00                 	db	0
   177  000673  00                 	db	0
   178  000674  00                 	db	0
   179  000675  00                 	db	0
   180  000676  00                 	db	0
   181  000677  00                 	db	0
   182  000678  00                 	db	0
   183  000679  00                 	db	0
   184  00067A  00                 	db	0
   185  00067B  00                 	db	0
   186  00067C  00                 	db	0
   187  00067D  00                 	db	0
   188  00067E  00                 	db	0
   189  00067F  00                 	db	0
   190  000680  00                 	db	0
   191  000681  00                 	db	0
   192  000682  00                 	db	0
   193  000683  00                 	db	0
   194  000684  00                 	db	0
   195  000685  00                 	db	0
   196  000686  00                 	db	0
   197  000687  00                 	db	0
   198  000688  00                 	db	0
   199  000689  00                 	db	0
   200  00068A  00                 	db	0
   201  00068B  00                 	db	0
   202  00068C  00                 	db	0
   203  00068D  00                 	db	0
   204  00068E  00                 	db	0
   205  00068F  00                 	db	0
   206  000690  00                 	db	0
   207  000691  00                 	db	0
   208  000692  00                 	db	0
   209  000693  00                 	db	0
   210  000694  00                 	db	0
   211  000695  00                 	db	0
   212  000696  00                 	db	0
   213  000697  00                 	db	0
   214  000698  00                 	db	0
   215  000699  00                 	db	0
   216  00069A  00                 	db	0
   217  00069B  00                 	db	0
   218  00069C  00                 	db	0
   219  00069D  00                 	db	0
   220  00069E  00                 	db	0
   221  00069F  00                 	db	0
   222  0006A0  00                 	db	0
   223  0006A1  00                 	db	0
   224  0006A2  00                 	db	0
   225  0006A3  00                 	db	0
   226  0006A4  00                 	db	0
   227  0006A5  00                 	db	0
   228  0006A6                     __end_of_msg_ary:
   229                           	opt stack 0
   230  0000                     _ADCON0	set	4034
   231  0000                     _ADCON0bits	set	4034
   232  0000                     _ADCON1	set	4033
   233  0000                     _ADRESH	set	4036
   234  0000                     _INTCONbits	set	4082
   235  0000                     _LATC	set	3979
   236  0000                     _LATDbits	set	3980
   237  0000                     _PORTB	set	3969
   238  0000                     _PORTCbits	set	3970
   239  0000                     _T0CON	set	4053
   240  0000                     _T0CONbits	set	4053
   241  0000                     _TMR0H	set	4055
   242  0000                     _TMR0L	set	4054
   243  0000                     _TRISB	set	3987
   244  0000                     _TRISC	set	3988
   245  0000                     _TRISD	set	3989
   246  0006A6                     STR_2:
   247  0006A6  52                 	db	82	;'R'
   248  0006A7  65                 	db	101	;'e'
   249  0006A8  61                 	db	97	;'a'
   250  0006A9  64                 	db	100	;'d'
   251  0006AA  79                 	db	121	;'y'
   252  0006AB  20                 	db	32
   253  0006AC  74                 	db	116	;'t'
   254  0006AD  6F                 	db	111	;'o'
   255  0006AE  20                 	db	32
   256  0006AF  67                 	db	103	;'g'
   257  0006B0  6F                 	db	111	;'o'
   258  0006B1  00                 	db	0
   259  0006B2                     STR_1:
   260  0006B2  50                 	db	80	;'P'
   261  0006B3  72                 	db	114	;'r'
   262  0006B4  6F                 	db	111	;'o'
   263  0006B5  62                 	db	98	;'b'
   264  0006B6  6C                 	db	108	;'l'
   265  0006B7  65                 	db	101	;'e'
   266  0006B8  6D                 	db	109	;'m'
   267  0006B9  00                 	db	0
   268                           
   269                           ; #config settings
   270  0006BA  00                 	db	0	; dummy byte at the end
   271  0000                     
   272                           	psect	cinit
   273  000CDE                     __pcinit:
   274                           	opt stack 0
   275  000CDE                     start_initialization:
   276                           	opt stack 0
   277  000CDE                     __initialization:
   278                           	opt stack 0
   279                           
   280                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   281  000CDE  6A36               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   282                           
   283                           ; Clear objects allocated to COMRAM (6 bytes)
   284  000CE0  6A35               	clrf	(__pbssCOMRAM+5)& (0+255),c
   285  000CE2  6A34               	clrf	(__pbssCOMRAM+4)& (0+255),c
   286  000CE4  6A33               	clrf	(__pbssCOMRAM+3)& (0+255),c
   287  000CE6  6A32               	clrf	(__pbssCOMRAM+2)& (0+255),c
   288  000CE8  6A31               	clrf	(__pbssCOMRAM+1)& (0+255),c
   289  000CEA  6A30               	clrf	__pbssCOMRAM& (0+255),c
   290                           
   291                           ; Initialize objects allocated to COMRAM (7 bytes)
   292                           ; load TBLPTR registers with __pidataCOMRAM
   293  000CEC  0E28               	movlw	low __pidataCOMRAM
   294  000CEE  6EF6               	movwf	tblptrl,c
   295  000CF0  0E0E               	movlw	high __pidataCOMRAM
   296  000CF2  6EF7               	movwf	tblptrh,c
   297  000CF4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   298  000CF6  6EF8               	movwf	tblptru,c
   299  000CF8  EE00  F029         	lfsr	0,__pdataCOMRAM
   300  000CFC  EE10 F007          	lfsr	1,7
   301  000D00                     copy_data0:
   302  000D00  0009               	tblrd		*+
   303  000D02  CFF5 FFEE          	movff	tablat,postinc0
   304  000D06  50E5               	movf	postdec1,w,c
   305  000D08  50E1               	movf	fsr1l,w,c
   306  000D0A  E1FA               	bnz	copy_data0
   307  000D0C                     end_of_initialization:
   308                           	opt stack 0
   309  000D0C                     __end_of__initialization:
   310                           	opt stack 0
   311  000D0C  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   312  000D0E  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   313  000D10  0E00               	movlw	low (__Lmediumconst shr (0+16))
   314  000D12  6EF8               	movwf	tblptru,c
   315  000D14  0100               	movlb	0
   316  000D16  EF5E  F003         	goto	_main	;jump to C main() function
   317                           tblptru	equ	0xFF8
   318                           tblptrh	equ	0xFF7
   319                           tblptrl	equ	0xFF6
   320                           tablat	equ	0xFF5
   321                           postinc0	equ	0xFEE
   322                           postdec1	equ	0xFE5
   323                           fsr1l	equ	0xFE1
   324                           
   325                           	psect	bitbssCOMRAM
   326  0001B0                     __pbitbssCOMRAM:
   327                           	opt stack 0
   328  0001B0                     _Tick_E:
   329                           	opt stack 0
   330  0001B0                     	ds	1
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           postdec1	equ	0xFE5
   337                           fsr1l	equ	0xFE1
   338                           
   339                           	psect	bssCOMRAM
   340  000030                     __pbssCOMRAM:
   341                           	opt stack 0
   342  000030                     Find_Button_Press@Button_Count:
   343                           	opt stack 0
   344  000030                     	ds	1
   345  000031                     Find_Button_Press@Button_State:
   346                           	opt stack 0
   347  000031                     	ds	1
   348  000032                     Find_Button_Press@Temp_Press:
   349                           	opt stack 0
   350  000032                     	ds	1
   351  000033                     _Button_Press:
   352                           	opt stack 0
   353  000033                     	ds	1
   354  000034                     _count:
   355                           	opt stack 0
   356  000034                     	ds	1
   357  000035                     _count_hb:
   358                           	opt stack 0
   359  000035                     	ds	1
   360                           tblptru	equ	0xFF8
   361                           tblptrh	equ	0xFF7
   362                           tblptrl	equ	0xFF6
   363                           tablat	equ	0xFF5
   364                           postinc0	equ	0xFEE
   365                           postdec1	equ	0xFE5
   366                           fsr1l	equ	0xFE1
   367                           
   368                           	psect	dataCOMRAM
   369  000029                     __pdataCOMRAM:
   370                           	opt stack 0
   371  000029                     main@F4354:
   372                           	opt stack 0
   373  000029                     	ds	3
   374  00002C                     _problem:
   375                           	opt stack 0
   376  00002C                     	ds	2
   377  00002E                     _startup:
   378                           	opt stack 0
   379  00002E                     	ds	2
   380                           tblptru	equ	0xFF8
   381                           tblptrh	equ	0xFF7
   382                           tblptrl	equ	0xFF6
   383                           tablat	equ	0xFF5
   384                           postinc0	equ	0xFEE
   385                           postdec1	equ	0xFE5
   386                           fsr1l	equ	0xFE1
   387                           
   388                           	psect	cstackCOMRAM
   389  000001                     __pcstackCOMRAM:
   390                           	opt stack 0
   391  000001                     i2WriteTimer0@timer0:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x0
   395  000001                     	ds	2
   396  000003                     i2WriteTimer0@timer:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x2
   400  000003                     	ds	2
   401  000005                     ??_myIsr:
   402                           
   403                           ; 0 bytes @ 0x4
   404  000005                     	ds	15
   405  000014                     ??_delay_s:
   406  000014                     ?___awdiv:
   407                           	opt stack 0
   408  000014                     ?___awmod:
   409                           	opt stack 0
   410  000014                     lcd_raw_send@RS:
   411                           	opt stack 0
   412  000014                     OpenTimer0@config:
   413                           	opt stack 0
   414  000014                     WriteTimer0@timer0:
   415                           	opt stack 0
   416  000014                     ___awdiv@dividend:
   417                           	opt stack 0
   418  000014                     ___awmod@dividend:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x13
   422  000014                     	ds	1
   423  000015                     ??_lcd_raw_send:
   424  000015                     delay_s@secs:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x14
   428  000015                     	ds	1
   429  000016                     delay_s@j:
   430                           	opt stack 0
   431  000016                     WriteTimer0@timer:
   432                           	opt stack 0
   433  000016                     ___awdiv@divisor:
   434                           	opt stack 0
   435  000016                     ___awmod@divisor:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x15
   439  000016                     	ds	1
   440  000017                     lcd_raw_send@in:
   441                           	opt stack 0
   442  000017                     delay_s@i:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x16
   446  000017                     	ds	1
   447  000018                     lcd_print_ch@in:
   448                           	opt stack 0
   449  000018                     lcd_command@in:
   450                           	opt stack 0
   451  000018                     ___awdiv@counter:
   452                           	opt stack 0
   453  000018                     ___awmod@counter:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0x17
   457  000018                     	ds	1
   458  000019                     ??_lcd_clear:
   459  000019                     lcd_cursor@y:
   460                           	opt stack 0
   461  000019                     ___awdiv@sign:
   462                           	opt stack 0
   463  000019                     ___awmod@sign:
   464                           	opt stack 0
   465  000019                     lcd_print@mess:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x18
   469  000019                     	ds	1
   470  00001A                     ??_lcd_start:
   471  00001A                     lcd_cursor@x:
   472                           	opt stack 0
   473  00001A                     ___awdiv@quotient:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x19
   477  00001A                     	ds	1
   478  00001B                     ??_lcd_print:
   479  00001B                     lcd_start@i:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x1A
   483  00001B                     	ds	1
   484  00001C                     lcd_display_value@hunds:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x1B
   488  00001C                     	ds	1
   489  00001D                     lcd_print@i:
   490                           	opt stack 0
   491  00001D                     lcd_display_value@tens:
   492                           	opt stack 0
   493                           
   494                           ; 1 bytes @ 0x1C
   495  00001D                     	ds	1
   496  00001E                     ??_Window:
   497  00001E                     lcd_display_value@units:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x1D
   501  00001E                     	ds	1
   502  00001F                     lcd_display_value@value:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x1E
   506  00001F                     	ds	1
   507  000020                     Window@num:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x1F
   511  000020                     	ds	1
   512  000021                     ??_main:
   513                           
   514                           ; 0 bytes @ 0x20
   515  000021                     	ds	1
   516  000022                     main@Desired_Value:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x21
   520  000022                     	ds	1
   521  000023                     main@Actual_Value:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x22
   525  000023                     	ds	1
   526  000024                     main@Temp_Value:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x23
   530  000024                     	ds	1
   531  000025                     main@my_mch_state:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x24
   535  000025                     	ds	1
   536  000026                     main@motor1:
   537                           	opt stack 0
   538                           
   539                           ; 3 bytes @ 0x25
   540  000026                     	ds	3
   541                           tblptru	equ	0xFF8
   542                           tblptrh	equ	0xFF7
   543                           tblptrl	equ	0xFF6
   544                           tablat	equ	0xFF5
   545                           postinc0	equ	0xFEE
   546                           postdec1	equ	0xFE5
   547                           fsr1l	equ	0xFE1
   548                           
   549 ;;
   550 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   551 ;;
   552 ;; *************** function _main *****************
   553 ;; Defined at:
   554 ;;		line 91 in file "Menu_System.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  motor1          3   37[COMRAM] struct .
   559 ;;  my_mch_state    1   36[COMRAM] enum E4343
   560 ;;  Temp_Value      1   35[COMRAM] unsigned char 
   561 ;;  Actual_Value    1   34[COMRAM] unsigned char 
   562 ;;  Desired_Valu    1   33[COMRAM] unsigned char 
   563 ;; Return value:  Size  Location     Type
   564 ;;		None               void
   565 ;; Registers used:
   566 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   572 ;;      Params:         0       0       0       0       0       0       0
   573 ;;      Locals:         7       0       0       0       0       0       0
   574 ;;      Temps:          1       0       0       0       0       0       0
   575 ;;      Totals:         8       0       0       0       0       0       0
   576 ;;Total ram usage:        8 bytes
   577 ;; Hardware stack levels required when called:    6
   578 ;; This function calls:
   579 ;;		_Initial
   580 ;;		_Window
   581 ;;		_delay_s
   582 ;;		_lcd_clear
   583 ;;		_lcd_cursor
   584 ;;		_lcd_display_value
   585 ;;		_lcd_print
   586 ;;		_lcd_start
   587 ;; This function is called by:
   588 ;;		Startup code after reset
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text0
   593  0006BC                     __ptext0:
   594                           	opt stack 0
   595  0006BC                     _main:
   596                           	opt stack 25
   597                           
   598                           ;Menu_System.c: 93: unsigned char Desired_Value = 50;
   599                           
   600                           ;incstack = 0
   601  0006BC  0E32               	movlw	50
   602  0006BE  6E22               	movwf	main@Desired_Value,c
   603                           
   604                           ;Menu_System.c: 94: unsigned char Actual_Value = 50;
   605  0006C0  0E32               	movlw	50
   606  0006C2  6E23               	movwf	main@Actual_Value,c
   607                           
   608                           ;Menu_System.c: 95: unsigned char Temp_Value = 0;
   609  0006C4  0E00               	movlw	0
   610  0006C6  6E24               	movwf	main@Temp_Value,c
   611                           
   612                           ;Menu_System.c: 97: typedef enum {MENU_0 = 0,MENU_1} states;
   613                           ;Menu_System.c: 99: states my_mch_state = MENU_1;
   614  0006C8  0E01               	movlw	1
   615  0006CA  6E25               	movwf	main@my_mch_state,c
   616                           
   617                           ;Menu_System.c: 101: typedef struct{
   618                           ;Menu_System.c: 102: unsigned char desired;
   619                           ;Menu_System.c: 103: unsigned char actual;
   620                           ;Menu_System.c: 104: unsigned char temp;
   621                           ;Menu_System.c: 105: } motor;
   622                           ;Menu_System.c: 106: motor motor1 = {50,50,0};
   623  0006CC  C029  F026         	movff	main@F4354,main@motor1
   624  0006D0  C02A  F027         	movff	main@F4354+1,main@motor1+1
   625  0006D4  C02B  F028         	movff	main@F4354+2,main@motor1+2
   626                           
   627                           ;Menu_System.c: 107: Initial();
   628  0006D8  ECA7  F006         	call	_Initial	;wreg free
   629                           
   630                           ;Menu_System.c: 108: lcd_start ();
   631  0006DC  EC4E  F006         	call	_lcd_start	;wreg free
   632                           
   633                           ;Menu_System.c: 109: lcd_cursor ( 0, 0 ) ;
   634  0006E0  0E00               	movlw	0
   635  0006E2  6E19               	movwf	lcd_cursor@y,c
   636  0006E4  0E00               	movlw	0
   637  0006E6  ECE7  F006         	call	_lcd_cursor
   638                           
   639                           ;Menu_System.c: 110: lcd_print ( startup ) ;
   640  0006EA  C02E  F019         	movff	_startup,lcd_print@mess
   641  0006EE  C02F  F01A         	movff	_startup+1,lcd_print@mess+1
   642  0006F2  EC24  F006         	call	_lcd_print	;wreg free
   643                           
   644                           ;Menu_System.c: 112: delay_s(2);
   645  0006F6  0E02               	movlw	2
   646  0006F8  EC8D  F006         	call	_delay_s
   647                           
   648                           ;Menu_System.c: 114: Window(0);
   649  0006FC  0E00               	movlw	0
   650  0006FE  ECF1  F005         	call	_Window
   651                           
   652                           ;Menu_System.c: 115: lcd_cursor ( 10, 0 ) ;
   653  000702  0E00               	movlw	0
   654  000704  6E19               	movwf	lcd_cursor@y,c
   655  000706  0E0A               	movlw	10
   656  000708  ECE7  F006         	call	_lcd_cursor
   657                           
   658                           ;Menu_System.c: 116: lcd_display_value(motor1.desired);
   659  00070C  5026               	movf	main@motor1,w,c
   660  00070E  ECF3  F004         	call	_lcd_display_value
   661                           
   662                           ;Menu_System.c: 117: lcd_cursor ( 10, 1 ) ;
   663  000712  0E01               	movlw	1
   664  000714  6E19               	movwf	lcd_cursor@y,c
   665  000716  0E0A               	movlw	10
   666  000718  ECE7  F006         	call	_lcd_cursor
   667                           
   668                           ;Menu_System.c: 118: lcd_display_value(motor1.actual);
   669  00071C  5027               	movf	main@motor1+1,w,c
   670  00071E  ECF3  F004         	call	_lcd_display_value
   671  000722                     l1443:
   672  000722  5033               	movf	_Button_Press,w,c
   673  000724  B4D8               	btfsc	status,2,c
   674  000726  B036               	btfsc	_Tick_E/(0+8),_Tick_E& (0+7),c
   675  000728  D019               	goto	l1461
   676  00072A  D7FB               	goto	l1443
   677  00072C                     l147:
   678                           
   679                           ;Menu_System.c: 130: if (Button_Press.B0){
   680  00072C  A033               	btfss	_Button_Press,0,c
   681  00072E  D071               	goto	l1489
   682                           
   683                           ;Menu_System.c: 131: my_mch_state = MENU_1;
   684  000730  0E01               	movlw	1
   685  000732  6E25               	movwf	main@my_mch_state,c
   686                           
   687                           ;Menu_System.c: 132: Window(1);
   688  000734  0E01               	movlw	1
   689  000736  ECF1  F005         	call	_Window
   690                           
   691                           ;Menu_System.c: 133: }
   692                           ;Menu_System.c: 135: break;
   693  00073A  D06B               	goto	l1489
   694  00073C                     l150:
   695                           
   696                           ;Menu_System.c: 137: if (Button_Press.B0){
   697  00073C  A033               	btfss	_Button_Press,0,c
   698  00073E  D069               	goto	l1489
   699                           
   700                           ;Menu_System.c: 138: my_mch_state = MENU_0;
   701  000740  0E00               	movlw	0
   702  000742  6E25               	movwf	main@my_mch_state,c
   703                           
   704                           ;Menu_System.c: 139: Window(0);
   705  000744  0E00               	movlw	0
   706  000746  ECF1  F005         	call	_Window
   707                           
   708                           ;Menu_System.c: 140: }
   709                           ;Menu_System.c: 141: break;
   710  00074A  D063               	goto	l1489
   711  00074C                     l152:
   712                           
   713                           ;Menu_System.c: 143: if (Button_Press.B0){
   714  00074C  A033               	btfss	_Button_Press,0,c
   715  00074E  D061               	goto	l1489
   716                           
   717                           ;Menu_System.c: 144: my_mch_state = MENU_0;
   718  000750  0E00               	movlw	0
   719  000752  6E25               	movwf	main@my_mch_state,c
   720                           
   721                           ;Menu_System.c: 145: Window(0);
   722  000754  0E00               	movlw	0
   723  000756  ECF1  F005         	call	_Window
   724                           
   725                           ;Menu_System.c: 148: }
   726                           
   727                           ;Menu_System.c: 146: }
   728                           ;Menu_System.c: 147: break;
   729  00075A  D05B               	goto	l1489
   730  00075C                     l1461:
   731  00075C  5025               	movf	main@my_mch_state,w,c
   732                           
   733                           ; Switch size 1, requested type "space"
   734                           ; Number of cases is 2, Range of values is 0 to 1
   735                           ; switch strategies available:
   736                           ; Name         Instructions Cycles
   737                           ; simple_byte            7     4 (average)
   738                           ;	Chosen strategy is simple_byte
   739  00075E  0A00               	xorlw	0	; case 0
   740  000760  B4D8               	btfsc	status,2,c
   741  000762  D7E4               	goto	l147
   742  000764  0A01               	xorlw	1	; case 1
   743  000766  B4D8               	btfsc	status,2,c
   744  000768  D7E9               	goto	l150
   745  00076A  D7F0               	goto	l152
   746  00076C                     l1463:
   747                           
   748                           ;Menu_System.c: 154: lcd_cursor ( 10, 0 ) ;
   749  00076C  0E00               	movlw	0
   750  00076E  6E19               	movwf	lcd_cursor@y,c
   751  000770  0E0A               	movlw	10
   752  000772  ECE7  F006         	call	_lcd_cursor
   753                           
   754                           ;Menu_System.c: 155: lcd_display_value(motor1.desired);
   755  000776  5026               	movf	main@motor1,w,c
   756  000778  ECF3  F004         	call	_lcd_display_value
   757                           
   758                           ;Menu_System.c: 156: lcd_cursor ( 10, 1 ) ;
   759  00077C  0E01               	movlw	1
   760  00077E  6E19               	movwf	lcd_cursor@y,c
   761  000780  0E0A               	movlw	10
   762  000782  ECE7  F006         	call	_lcd_cursor
   763                           
   764                           ;Menu_System.c: 157: lcd_display_value(motor1.actual);
   765  000786  5027               	movf	main@motor1+1,w,c
   766  000788  ECF3  F004         	call	_lcd_display_value
   767                           
   768                           ;Menu_System.c: 158: LATC = PORTCbits.RC7 << 7 | 0x1 ;
   769  00078C  AE82               	btfss	3970,7,c	;volatile
   770  00078E  D003               	goto	u790
   771  000790  0E80               	movlw	128
   772  000792  6E21               	movwf	??_main& (0+255),c
   773  000794  D001               	goto	u805
   774  000796                     u790:
   775  000796  6A21               	clrf	??_main& (0+255),c
   776  000798                     u805:
   777  000798  5021               	movf	??_main,w,c
   778  00079A  0901               	iorlw	1
   779  00079C  D038               	goto	L2
   780  00079E                     l157:
   781                           
   782                           ;Menu_System.c: 162: if (Button_Press.B1)
   783  00079E  B233               	btfsc	_Button_Press,1,c
   784                           
   785                           ;Menu_System.c: 163: motor1.desired = motor1.temp;
   786  0007A0  C028  F026         	movff	main@motor1+2,main@motor1
   787  0007A4                     l159:
   788  0007A4  B2C2               	btfsc	4034,1,c	;volatile
   789  0007A6  D7FE               	goto	l159
   790                           
   791                           ;Menu_System.c: 166: motor1.temp = ADRESH >> 2;
   792  0007A8  40C4               	rrncf	4036,w,c	;volatile
   793  0007AA  42E8               	rrncf	wreg,f,c
   794  0007AC  0B3F               	andlw	63
   795  0007AE  6E28               	movwf	main@motor1+2,c
   796                           
   797                           ;Menu_System.c: 167: ADCON0bits.GO_nDONE = 1;
   798  0007B0  82C2               	bsf	4034,1,c	;volatile
   799                           
   800                           ;Menu_System.c: 169: lcd_cursor ( 10, 0 ) ;
   801  0007B2  0E00               	movlw	0
   802  0007B4  6E19               	movwf	lcd_cursor@y,c
   803  0007B6  0E0A               	movlw	10
   804  0007B8  ECE7  F006         	call	_lcd_cursor
   805                           
   806                           ;Menu_System.c: 170: lcd_display_value(motor1.desired);
   807  0007BC  5026               	movf	main@motor1,w,c
   808  0007BE  ECF3  F004         	call	_lcd_display_value
   809                           
   810                           ;Menu_System.c: 171: lcd_cursor ( 10, 1 ) ;
   811  0007C2  0E01               	movlw	1
   812  0007C4  6E19               	movwf	lcd_cursor@y,c
   813  0007C6  0E0A               	movlw	10
   814  0007C8  ECE7  F006         	call	_lcd_cursor
   815                           
   816                           ;Menu_System.c: 172: lcd_display_value(motor1.temp);
   817  0007CC  5028               	movf	main@motor1+2,w,c
   818  0007CE  ECF3  F004         	call	_lcd_display_value
   819                           
   820                           ;Menu_System.c: 173: LATC= PORTCbits.RC7 << 7 | 0x2;
   821  0007D2  AE82               	btfss	3970,7,c	;volatile
   822  0007D4  D003               	goto	u830
   823  0007D6  0E80               	movlw	128
   824  0007D8  6E21               	movwf	??_main& (0+255),c
   825  0007DA  D001               	goto	u845
   826  0007DC                     u830:
   827  0007DC  6A21               	clrf	??_main& (0+255),c
   828  0007DE                     u845:
   829  0007DE  5021               	movf	??_main,w,c
   830  0007E0  0902               	iorlw	2
   831  0007E2  D015               	goto	L2
   832  0007E4                     l1481:
   833                           
   834                           ;Menu_System.c: 177: lcd_cursor ( 0, 0 ) ;
   835  0007E4  0E00               	movlw	0
   836  0007E6  6E19               	movwf	lcd_cursor@y,c
   837  0007E8  0E00               	movlw	0
   838  0007EA  ECE7  F006         	call	_lcd_cursor
   839                           
   840                           ;Menu_System.c: 178: lcd_clear();
   841  0007EE  ECC0  F006         	call	_lcd_clear	;wreg free
   842                           
   843                           ;Menu_System.c: 179: lcd_print ( problem );
   844  0007F2  C02C  F019         	movff	_problem,lcd_print@mess
   845  0007F6  C02D  F01A         	movff	_problem+1,lcd_print@mess+1
   846  0007FA  EC24  F006         	call	_lcd_print	;wreg free
   847                           
   848                           ;Menu_System.c: 180: LATC = PORTCbits.RC7 << 7 | 0x5;
   849  0007FE  AE82               	btfss	3970,7,c	;volatile
   850  000800  D003               	goto	u850
   851  000802  0E80               	movlw	128
   852  000804  6E21               	movwf	??_main& (0+255),c
   853  000806  D001               	goto	u865
   854  000808                     u850:
   855  000808  6A21               	clrf	??_main& (0+255),c
   856  00080A                     u865:
   857  00080A  5021               	movf	??_main,w,c
   858  00080C  0905               	iorlw	5
   859  00080E                     L2:
   860  00080E  6E8B               	movwf	3979,c	;volatile
   861                           
   862                           ;Menu_System.c: 182: }
   863                           
   864                           ;Menu_System.c: 181: break;
   865  000810  D008               	goto	l1491
   866  000812                     l1489:
   867  000812  5025               	movf	main@my_mch_state,w,c
   868                           
   869                           ; Switch size 1, requested type "space"
   870                           ; Number of cases is 2, Range of values is 0 to 1
   871                           ; switch strategies available:
   872                           ; Name         Instructions Cycles
   873                           ; simple_byte            7     4 (average)
   874                           ;	Chosen strategy is simple_byte
   875  000814  0A00               	xorlw	0	; case 0
   876  000816  B4D8               	btfsc	status,2,c
   877  000818  D7A9               	goto	l1463
   878  00081A  0A01               	xorlw	1	; case 1
   879  00081C  B4D8               	btfsc	status,2,c
   880  00081E  D7BF               	goto	l157
   881  000820  D7E1               	goto	l1481
   882  000822                     l1491:
   883                           
   884                           ;Menu_System.c: 184: Button_Press.Full = 0;
   885  000822  0E00               	movlw	0
   886  000824  6E33               	movwf	_Button_Press,c
   887                           
   888                           ;Menu_System.c: 186: Tick_E = 0;
   889  000826  9036               	bcf	_Tick_E/(0+8),_Tick_E& (0+7),c
   890  000828  D77C               	goto	l1443
   891  00082A                     __end_of_main:
   892                           	opt stack 0
   893                           tblptru	equ	0xFF8
   894                           tblptrh	equ	0xFF7
   895                           tblptrl	equ	0xFF6
   896                           tablat	equ	0xFF5
   897                           postinc0	equ	0xFEE
   898                           wreg	equ	0xFE8
   899                           postdec1	equ	0xFE5
   900                           fsr1l	equ	0xFE1
   901                           status	equ	0xFD8
   902                           
   903 ;; *************** function _lcd_start *****************
   904 ;; Defined at:
   905 ;;		line 189 in file "../../LCD_library/lcdlib_2016.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  i               1   26[COMRAM] unsigned char 
   910 ;;  t               1    0        unsigned char 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      unsigned char 
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   920 ;;      Params:         0       0       0       0       0       0       0
   921 ;;      Locals:         1       0       0       0       0       0       0
   922 ;;      Temps:          1       0       0       0       0       0       0
   923 ;;      Totals:         2       0       0       0       0       0       0
   924 ;;Total ram usage:        2 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    5
   927 ;; This function calls:
   928 ;;		_lcd_clear
   929 ;;		_lcd_command
   930 ;; This function is called by:
   931 ;;		_main
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text1
   936  000C9C                     __ptext1:
   937                           	opt stack 0
   938  000C9C                     _lcd_start:
   939                           	opt stack 25
   940                           
   941                           ;lcdlib_2016.c: 191: unsigned char i, t ;
   942                           ;lcdlib_2016.c: 197: TRISD = (TRISD & 0xc0) ;
   943                           
   944                           ;incstack = 0
   945  000C9C  5095               	movf	3989,w,c	;volatile
   946  000C9E  0BC0               	andlw	192
   947  000CA0  6E95               	movwf	3989,c	;volatile
   948                           
   949                           ;lcdlib_2016.c: 202: _delay((unsigned long)((35)*(19660800/4000.0)));
   950  000CA2  0EE0               	movlw	224
   951  000CA4  6E1A               	movwf	??_lcd_start& (0+255),c
   952  000CA6  0E6A               	movlw	106
   953  000CA8                     u877:
   954  000CA8  2EE8               	decfsz	wreg,f,c
   955  000CAA  D7FE               	goto	u877
   956  000CAC  2E1A               	decfsz	??_lcd_start& (0+255),f,c
   957  000CAE  D7FC               	goto	u877
   958                           
   959                           ;lcdlib_2016.c: 203: for ( i=0 ; i < 5 ; i++ )
   960  000CB0  0E00               	movlw	0
   961  000CB2  6E1B               	movwf	lcd_start@i,c
   962  000CB4                     l1333:
   963  000CB4  0E04               	movlw	4
   964  000CB6  641B               	cpfsgt	lcd_start@i,c
   965  000CB8  D001               	goto	l1337
   966  000CBA  D00E               	goto	l1343
   967  000CBC                     l1337:
   968                           
   969                           ;lcdlib_2016.c: 204: {
   970                           ;lcdlib_2016.c: 205: lcd_command ( lcd_init [i] ) ;
   971  000CBC  501B               	movf	lcd_start@i,w,c
   972  000CBE  0D01               	mullw	1
   973  000CC0  0E01               	movlw	low _lcd_init
   974  000CC2  24F3               	addwf	prodl,w,c
   975  000CC4  6EF6               	movwf	tblptrl,c
   976  000CC6  0E06               	movlw	high _lcd_init
   977  000CC8  20F4               	addwfc	prodh,w,c
   978  000CCA  6EF7               	movwf	tblptrh,c
   979  000CCC                     	if	0	;There are less than 3 active tblptr bytes
   980  000CCC                     	endif
   981  000CCC  0008               	tblrd		*
   982  000CCE  50F5               	movf	tablat,w,c
   983  000CD0  EC0D  F007         	call	_lcd_command
   984  000CD4  2A1B               	incf	lcd_start@i,f,c
   985  000CD6  D7EE               	goto	l1333
   986  000CD8                     l1343:
   987                           
   988                           ;lcdlib_2016.c: 206: }
   989                           ;lcdlib_2016.c: 207: lcd_clear () ;
   990  000CD8  ECC0  F006         	call	_lcd_clear	;wreg free
   991  000CDC  0012               	return	
   992  000CDE                     __end_of_lcd_start:
   993                           	opt stack 0
   994                           tblptru	equ	0xFF8
   995                           tblptrh	equ	0xFF7
   996                           tblptrl	equ	0xFF6
   997                           tablat	equ	0xFF5
   998                           prodh	equ	0xFF4
   999                           prodl	equ	0xFF3
  1000                           postinc0	equ	0xFEE
  1001                           wreg	equ	0xFE8
  1002                           postdec1	equ	0xFE5
  1003                           fsr1l	equ	0xFE1
  1004                           status	equ	0xFD8
  1005                           
  1006 ;; *************** function _lcd_display_value *****************
  1007 ;; Defined at:
  1008 ;;		line 244 in file "../../LCD_library/lcdlib_2016.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;  value           1    wreg     unsigned char 
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;  value           1   30[COMRAM] unsigned char 
  1013 ;;  units           1   29[COMRAM] unsigned char 
  1014 ;;  tens            1   28[COMRAM] unsigned char 
  1015 ;;  hunds           1   27[COMRAM] unsigned char 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;		None               void
  1018 ;; Registers used:
  1019 ;;		wreg, status,2, status,0, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1025 ;;      Params:         0       0       0       0       0       0       0
  1026 ;;      Locals:         4       0       0       0       0       0       0
  1027 ;;      Temps:          0       0       0       0       0       0       0
  1028 ;;      Totals:         4       0       0       0       0       0       0
  1029 ;;Total ram usage:        4 bytes
  1030 ;; Hardware stack levels used:    1
  1031 ;; Hardware stack levels required when called:    4
  1032 ;; This function calls:
  1033 ;;		___awdiv
  1034 ;;		___awmod
  1035 ;;		_lcd_print_ch
  1036 ;; This function is called by:
  1037 ;;		_main
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text2
  1042  0009E6                     __ptext2:
  1043                           	opt stack 0
  1044  0009E6                     _lcd_display_value:
  1045                           	opt stack 26
  1046                           
  1047                           ;incstack = 0
  1048                           ;lcd_display_value@value stored from wreg
  1049  0009E6  6E1F               	movwf	lcd_display_value@value,c
  1050                           
  1051                           ;lcdlib_2016.c: 246: unsigned char hunds, tens, units ;
  1052                           ;lcdlib_2016.c: 250: units = value % 10 ;
  1053  0009E8  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
  1054  0009EC  6A15               	clrf	___awmod@dividend+1,c
  1055  0009EE  0E00               	movlw	0
  1056  0009F0  6E17               	movwf	___awmod@divisor+1,c
  1057  0009F2  0E0A               	movlw	10
  1058  0009F4  6E16               	movwf	___awmod@divisor,c
  1059  0009F6  ECB9  F005         	call	___awmod	;wreg free
  1060  0009FA  5014               	movf	?___awmod,w,c
  1061  0009FC  6E1E               	movwf	lcd_display_value@units,c
  1062                           
  1063                           ;lcdlib_2016.c: 251: value = value / 10 ;
  1064  0009FE  C01F  F014         	movff	lcd_display_value@value,___awdiv@dividend
  1065  000A02  6A15               	clrf	___awdiv@dividend+1,c
  1066  000A04  0E00               	movlw	0
  1067  000A06  6E17               	movwf	___awdiv@divisor+1,c
  1068  000A08  0E0A               	movlw	10
  1069  000A0A  6E16               	movwf	___awdiv@divisor,c
  1070  000A0C  EC38  F005         	call	___awdiv	;wreg free
  1071  000A10  5014               	movf	?___awdiv,w,c
  1072  000A12  6E1F               	movwf	lcd_display_value@value,c
  1073                           
  1074                           ;lcdlib_2016.c: 252: tens = value % 10 ;
  1075  000A14  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
  1076  000A18  6A15               	clrf	___awmod@dividend+1,c
  1077  000A1A  0E00               	movlw	0
  1078  000A1C  6E17               	movwf	___awmod@divisor+1,c
  1079  000A1E  0E0A               	movlw	10
  1080  000A20  6E16               	movwf	___awmod@divisor,c
  1081  000A22  ECB9  F005         	call	___awmod	;wreg free
  1082  000A26  5014               	movf	?___awmod,w,c
  1083  000A28  6E1D               	movwf	lcd_display_value@tens,c
  1084                           
  1085                           ;lcdlib_2016.c: 253: value = value / 10 ;
  1086  000A2A  C01F  F014         	movff	lcd_display_value@value,___awdiv@dividend
  1087  000A2E  6A15               	clrf	___awdiv@dividend+1,c
  1088  000A30  0E00               	movlw	0
  1089  000A32  6E17               	movwf	___awdiv@divisor+1,c
  1090  000A34  0E0A               	movlw	10
  1091  000A36  6E16               	movwf	___awdiv@divisor,c
  1092  000A38  EC38  F005         	call	___awdiv	;wreg free
  1093  000A3C  5014               	movf	?___awdiv,w,c
  1094  000A3E  6E1F               	movwf	lcd_display_value@value,c
  1095                           
  1096                           ;lcdlib_2016.c: 254: hunds = value % 10 ;
  1097  000A40  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
  1098  000A44  6A15               	clrf	___awmod@dividend+1,c
  1099  000A46  0E00               	movlw	0
  1100  000A48  6E17               	movwf	___awmod@divisor+1,c
  1101  000A4A  0E0A               	movlw	10
  1102  000A4C  6E16               	movwf	___awmod@divisor,c
  1103  000A4E  ECB9  F005         	call	___awmod	;wreg free
  1104  000A52  5014               	movf	?___awmod,w,c
  1105  000A54  6E1C               	movwf	lcd_display_value@hunds,c
  1106                           
  1107                           ;lcdlib_2016.c: 260: lcd_print_ch ( '0' + hunds ) ;
  1108  000A56  501C               	movf	lcd_display_value@hunds,w,c
  1109  000A58  0F30               	addlw	48
  1110  000A5A  EC06  F007         	call	_lcd_print_ch
  1111                           
  1112                           ;lcdlib_2016.c: 261: lcd_print_ch ( '0' + tens ) ;
  1113  000A5E  501D               	movf	lcd_display_value@tens,w,c
  1114  000A60  0F30               	addlw	48
  1115  000A62  EC06  F007         	call	_lcd_print_ch
  1116                           
  1117                           ;lcdlib_2016.c: 262: lcd_print_ch ( '0' + units ) ;
  1118  000A66  501E               	movf	lcd_display_value@units,w,c
  1119  000A68  0F30               	addlw	48
  1120  000A6A  EC06  F007         	call	_lcd_print_ch
  1121  000A6E  0012               	return		;funcret
  1122  000A70                     __end_of_lcd_display_value:
  1123                           	opt stack 0
  1124                           tblptru	equ	0xFF8
  1125                           tblptrh	equ	0xFF7
  1126                           tblptrl	equ	0xFF6
  1127                           tablat	equ	0xFF5
  1128                           prodh	equ	0xFF4
  1129                           prodl	equ	0xFF3
  1130                           postinc0	equ	0xFEE
  1131                           wreg	equ	0xFE8
  1132                           postdec1	equ	0xFE5
  1133                           fsr1l	equ	0xFE1
  1134                           status	equ	0xFD8
  1135                           
  1136 ;; *************** function ___awmod *****************
  1137 ;; Defined at:
  1138 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  dividend        2   19[COMRAM] int 
  1141 ;;  divisor         2   21[COMRAM] int 
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  sign            1   24[COMRAM] unsigned char 
  1144 ;;  counter         1   23[COMRAM] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  2   19[COMRAM] int 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2, status,0
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1154 ;;      Params:         4       0       0       0       0       0       0
  1155 ;;      Locals:         2       0       0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0       0       0
  1157 ;;      Totals:         6       0       0       0       0       0       0
  1158 ;;Total ram usage:        6 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    2
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_lcd_display_value
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text3
  1169  000B72                     __ptext3:
  1170                           	opt stack 0
  1171  000B72                     ___awmod:
  1172                           	opt stack 27
  1173                           
  1174                           ;incstack = 0
  1175  000B72  0E00               	movlw	0
  1176  000B74  6E19               	movwf	___awmod@sign,c
  1177  000B76  AE15               	btfss	___awmod@dividend+1,7,c
  1178  000B78  D006               	goto	l1299
  1179  000B7A  6C14               	negf	___awmod@dividend,c
  1180  000B7C  1E15               	comf	___awmod@dividend+1,f,c
  1181  000B7E  B0D8               	btfsc	status,0,c
  1182  000B80  2A15               	incf	___awmod@dividend+1,f,c
  1183  000B82  0E01               	movlw	1
  1184  000B84  6E19               	movwf	___awmod@sign,c
  1185  000B86                     l1299:
  1186  000B86  AE17               	btfss	___awmod@divisor+1,7,c
  1187  000B88  D004               	goto	l1303
  1188  000B8A  6C16               	negf	___awmod@divisor,c
  1189  000B8C  1E17               	comf	___awmod@divisor+1,f,c
  1190  000B8E  B0D8               	btfsc	status,0,c
  1191  000B90  2A17               	incf	___awmod@divisor+1,f,c
  1192  000B92                     l1303:
  1193  000B92  5016               	movf	___awmod@divisor,w,c
  1194  000B94  1017               	iorwf	___awmod@divisor+1,w,c
  1195  000B96  B4D8               	btfsc	status,2,c
  1196  000B98  D018               	goto	l1319
  1197  000B9A  0E01               	movlw	1
  1198  000B9C  6E18               	movwf	___awmod@counter,c
  1199  000B9E  D004               	goto	l1309
  1200  000BA0                     l1307:
  1201  000BA0  90D8               	bcf	status,0,c
  1202  000BA2  3616               	rlcf	___awmod@divisor,f,c
  1203  000BA4  3617               	rlcf	___awmod@divisor+1,f,c
  1204  000BA6  2A18               	incf	___awmod@counter,f,c
  1205  000BA8                     l1309:
  1206  000BA8  AE17               	btfss	___awmod@divisor+1,7,c
  1207  000BAA  D7FA               	goto	l1307
  1208  000BAC                     l1311:
  1209  000BAC  5016               	movf	___awmod@divisor,w,c
  1210  000BAE  5C14               	subwf	___awmod@dividend,w,c
  1211  000BB0  5017               	movf	___awmod@divisor+1,w,c
  1212  000BB2  5815               	subwfb	___awmod@dividend+1,w,c
  1213  000BB4  A0D8               	btfss	status,0,c
  1214  000BB6  D004               	goto	l1315
  1215  000BB8  5016               	movf	___awmod@divisor,w,c
  1216  000BBA  5E14               	subwf	___awmod@dividend,f,c
  1217  000BBC  5017               	movf	___awmod@divisor+1,w,c
  1218  000BBE  5A15               	subwfb	___awmod@dividend+1,f,c
  1219  000BC0                     l1315:
  1220  000BC0  90D8               	bcf	status,0,c
  1221  000BC2  3217               	rrcf	___awmod@divisor+1,f,c
  1222  000BC4  3216               	rrcf	___awmod@divisor,f,c
  1223  000BC6  2E18               	decfsz	___awmod@counter,f,c
  1224  000BC8  D7F1               	goto	l1311
  1225  000BCA                     l1319:
  1226  000BCA  5019               	movf	___awmod@sign,w,c
  1227  000BCC  B4D8               	btfsc	status,2,c
  1228  000BCE  D004               	goto	l1323
  1229  000BD0  6C14               	negf	___awmod@dividend,c
  1230  000BD2  1E15               	comf	___awmod@dividend+1,f,c
  1231  000BD4  B0D8               	btfsc	status,0,c
  1232  000BD6  2A15               	incf	___awmod@dividend+1,f,c
  1233  000BD8                     l1323:
  1234  000BD8  C014  F014         	movff	___awmod@dividend,?___awmod
  1235  000BDC  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  1236  000BE0  0012               	return	
  1237  000BE2                     __end_of___awmod:
  1238                           	opt stack 0
  1239                           tblptru	equ	0xFF8
  1240                           tblptrh	equ	0xFF7
  1241                           tblptrl	equ	0xFF6
  1242                           tablat	equ	0xFF5
  1243                           prodh	equ	0xFF4
  1244                           prodl	equ	0xFF3
  1245                           postinc0	equ	0xFEE
  1246                           wreg	equ	0xFE8
  1247                           postdec1	equ	0xFE5
  1248                           fsr1l	equ	0xFE1
  1249                           status	equ	0xFD8
  1250                           
  1251 ;; *************** function ___awdiv *****************
  1252 ;; Defined at:
  1253 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  dividend        2   19[COMRAM] int 
  1256 ;;  divisor         2   21[COMRAM] int 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  quotient        2   25[COMRAM] int 
  1259 ;;  sign            1   24[COMRAM] unsigned char 
  1260 ;;  counter         1   23[COMRAM] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  2   19[COMRAM] int 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1270 ;;      Params:         4       0       0       0       0       0       0
  1271 ;;      Locals:         4       0       0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0
  1273 ;;      Totals:         8       0       0       0       0       0       0
  1274 ;;Total ram usage:        8 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    2
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_lcd_display_value
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text4
  1285  000A70                     __ptext4:
  1286                           	opt stack 0
  1287  000A70                     ___awdiv:
  1288                           	opt stack 27
  1289                           
  1290                           ;incstack = 0
  1291  000A70  0E00               	movlw	0
  1292  000A72  6E19               	movwf	___awdiv@sign,c
  1293  000A74  AE17               	btfss	___awdiv@divisor+1,7,c
  1294  000A76  D006               	goto	l1255
  1295  000A78  6C16               	negf	___awdiv@divisor,c
  1296  000A7A  1E17               	comf	___awdiv@divisor+1,f,c
  1297  000A7C  B0D8               	btfsc	status,0,c
  1298  000A7E  2A17               	incf	___awdiv@divisor+1,f,c
  1299  000A80  0E01               	movlw	1
  1300  000A82  6E19               	movwf	___awdiv@sign,c
  1301  000A84                     l1255:
  1302  000A84  AE15               	btfss	___awdiv@dividend+1,7,c
  1303  000A86  D006               	goto	l1261
  1304  000A88  6C14               	negf	___awdiv@dividend,c
  1305  000A8A  1E15               	comf	___awdiv@dividend+1,f,c
  1306  000A8C  B0D8               	btfsc	status,0,c
  1307  000A8E  2A15               	incf	___awdiv@dividend+1,f,c
  1308  000A90  0E01               	movlw	1
  1309  000A92  1A19               	xorwf	___awdiv@sign,f,c
  1310  000A94                     l1261:
  1311  000A94  0E00               	movlw	0
  1312  000A96  6E1B               	movwf	___awdiv@quotient+1,c
  1313  000A98  0E00               	movlw	0
  1314  000A9A  6E1A               	movwf	___awdiv@quotient,c
  1315  000A9C  5016               	movf	___awdiv@divisor,w,c
  1316  000A9E  1017               	iorwf	___awdiv@divisor+1,w,c
  1317  000AA0  B4D8               	btfsc	status,2,c
  1318  000AA2  D01C               	goto	l1283
  1319  000AA4  0E01               	movlw	1
  1320  000AA6  6E18               	movwf	___awdiv@counter,c
  1321  000AA8  D004               	goto	l1269
  1322  000AAA                     l1267:
  1323  000AAA  90D8               	bcf	status,0,c
  1324  000AAC  3616               	rlcf	___awdiv@divisor,f,c
  1325  000AAE  3617               	rlcf	___awdiv@divisor+1,f,c
  1326  000AB0  2A18               	incf	___awdiv@counter,f,c
  1327  000AB2                     l1269:
  1328  000AB2  AE17               	btfss	___awdiv@divisor+1,7,c
  1329  000AB4  D7FA               	goto	l1267
  1330  000AB6                     l1271:
  1331  000AB6  90D8               	bcf	status,0,c
  1332  000AB8  361A               	rlcf	___awdiv@quotient,f,c
  1333  000ABA  361B               	rlcf	___awdiv@quotient+1,f,c
  1334  000ABC  5016               	movf	___awdiv@divisor,w,c
  1335  000ABE  5C14               	subwf	___awdiv@dividend,w,c
  1336  000AC0  5017               	movf	___awdiv@divisor+1,w,c
  1337  000AC2  5815               	subwfb	___awdiv@dividend+1,w,c
  1338  000AC4  A0D8               	btfss	status,0,c
  1339  000AC6  D005               	goto	l1279
  1340  000AC8  5016               	movf	___awdiv@divisor,w,c
  1341  000ACA  5E14               	subwf	___awdiv@dividend,f,c
  1342  000ACC  5017               	movf	___awdiv@divisor+1,w,c
  1343  000ACE  5A15               	subwfb	___awdiv@dividend+1,f,c
  1344  000AD0  801A               	bsf	___awdiv@quotient,0,c
  1345  000AD2                     l1279:
  1346  000AD2  90D8               	bcf	status,0,c
  1347  000AD4  3217               	rrcf	___awdiv@divisor+1,f,c
  1348  000AD6  3216               	rrcf	___awdiv@divisor,f,c
  1349  000AD8  2E18               	decfsz	___awdiv@counter,f,c
  1350  000ADA  D7ED               	goto	l1271
  1351  000ADC                     l1283:
  1352  000ADC  5019               	movf	___awdiv@sign,w,c
  1353  000ADE  B4D8               	btfsc	status,2,c
  1354  000AE0  D004               	goto	l1287
  1355  000AE2  6C1A               	negf	___awdiv@quotient,c
  1356  000AE4  1E1B               	comf	___awdiv@quotient+1,f,c
  1357  000AE6  B0D8               	btfsc	status,0,c
  1358  000AE8  2A1B               	incf	___awdiv@quotient+1,f,c
  1359  000AEA                     l1287:
  1360  000AEA  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  1361  000AEE  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  1362  000AF2  0012               	return	
  1363  000AF4                     __end_of___awdiv:
  1364                           	opt stack 0
  1365                           tblptru	equ	0xFF8
  1366                           tblptrh	equ	0xFF7
  1367                           tblptrl	equ	0xFF6
  1368                           tablat	equ	0xFF5
  1369                           prodh	equ	0xFF4
  1370                           prodl	equ	0xFF3
  1371                           postinc0	equ	0xFEE
  1372                           wreg	equ	0xFE8
  1373                           postdec1	equ	0xFE5
  1374                           fsr1l	equ	0xFE1
  1375                           status	equ	0xFD8
  1376                           
  1377 ;; *************** function _Window *****************
  1378 ;; Defined at:
  1379 ;;		line 208 in file "Menu_System.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  num             1    wreg     unsigned char 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  num             1   31[COMRAM] unsigned char 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;		None               void
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1393 ;;      Params:         0       0       0       0       0       0       0
  1394 ;;      Locals:         1       0       0       0       0       0       0
  1395 ;;      Temps:          2       0       0       0       0       0       0
  1396 ;;      Totals:         3       0       0       0       0       0       0
  1397 ;;Total ram usage:        3 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    5
  1400 ;; This function calls:
  1401 ;;		_lcd_clear
  1402 ;;		_lcd_cursor
  1403 ;;		_lcd_print
  1404 ;; This function is called by:
  1405 ;;		_main
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text5
  1410  000BE2                     __ptext5:
  1411                           	opt stack 0
  1412  000BE2                     _Window:
  1413                           	opt stack 25
  1414                           
  1415                           ;incstack = 0
  1416                           ;Window@num stored from wreg
  1417  000BE2  6E20               	movwf	Window@num,c
  1418                           
  1419                           ;Menu_System.c: 210: lcd_clear();
  1420  000BE4  ECC0  F006         	call	_lcd_clear	;wreg free
  1421                           
  1422                           ;Menu_System.c: 211: lcd_cursor ( 0, 0 ) ;
  1423  000BE8  0E00               	movlw	0
  1424  000BEA  6E19               	movwf	lcd_cursor@y,c
  1425  000BEC  0E00               	movlw	0
  1426  000BEE  ECE7  F006         	call	_lcd_cursor
  1427                           
  1428                           ;Menu_System.c: 212: lcd_print ( msg_ary[num*2]);
  1429  000BF2  5020               	movf	Window@num,w,c
  1430  000BF4  0D20               	mullw	32
  1431  000BF6  0E06               	movlw	low _msg_ary
  1432  000BF8  24F3               	addwf	prodl,w,c
  1433  000BFA  6E19               	movwf	lcd_print@mess,c
  1434  000BFC  0E06               	movlw	high _msg_ary
  1435  000BFE  20F4               	addwfc	prodh,w,c
  1436  000C00  6E1A               	movwf	lcd_print@mess+1,c
  1437  000C02  EC24  F006         	call	_lcd_print	;wreg free
  1438                           
  1439                           ;Menu_System.c: 213: lcd_cursor ( 0, 1 ) ;
  1440  000C06  0E01               	movlw	1
  1441  000C08  6E19               	movwf	lcd_cursor@y,c
  1442  000C0A  0E00               	movlw	0
  1443  000C0C  ECE7  F006         	call	_lcd_cursor
  1444                           
  1445                           ;Menu_System.c: 214: lcd_print ( msg_ary[(num*2)+1]);
  1446  000C10  5020               	movf	Window@num,w,c
  1447  000C12  6E1E               	movwf	??_Window& (0+255),c
  1448  000C14  6A1F               	clrf	(??_Window+1)& (0+255),c
  1449  000C16  90D8               	bcf	status,0,c
  1450  000C18  361E               	rlcf	??_Window,f,c
  1451  000C1A  361F               	rlcf	??_Window+1,f,c
  1452  000C1C  3A1E               	swapf	??_Window,f,c
  1453  000C1E  3A1F               	swapf	??_Window+1,f,c
  1454  000C20  0EF0               	movlw	240
  1455  000C22  161F               	andwf	??_Window+1,f,c
  1456  000C24  501E               	movf	??_Window,w,c
  1457  000C26  0B0F               	andlw	15
  1458  000C28  121F               	iorwf	??_Window+1,f,c
  1459  000C2A  0EF0               	movlw	240
  1460  000C2C  161E               	andwf	??_Window,f,c
  1461  000C2E  0E10               	movlw	16
  1462  000C30  261E               	addwf	??_Window,f,c
  1463  000C32  0E00               	movlw	0
  1464  000C34  221F               	addwfc	??_Window+1,f,c
  1465  000C36  0E06               	movlw	low _msg_ary
  1466  000C38  241E               	addwf	??_Window,w,c
  1467  000C3A  6E19               	movwf	lcd_print@mess,c
  1468  000C3C  0E06               	movlw	high _msg_ary
  1469  000C3E  201F               	addwfc	??_Window+1,w,c
  1470  000C40  6E1A               	movwf	lcd_print@mess+1,c
  1471  000C42  EC24  F006         	call	_lcd_print	;wreg free
  1472  000C46  0012               	return		;funcret
  1473  000C48                     __end_of_Window:
  1474                           	opt stack 0
  1475                           tblptru	equ	0xFF8
  1476                           tblptrh	equ	0xFF7
  1477                           tblptrl	equ	0xFF6
  1478                           tablat	equ	0xFF5
  1479                           prodh	equ	0xFF4
  1480                           prodl	equ	0xFF3
  1481                           postinc0	equ	0xFEE
  1482                           wreg	equ	0xFE8
  1483                           postdec1	equ	0xFE5
  1484                           fsr1l	equ	0xFE1
  1485                           status	equ	0xFD8
  1486                           
  1487 ;; *************** function _lcd_print *****************
  1488 ;; Defined at:
  1489 ;;		line 215 in file "../../LCD_library/lcdlib_2016.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  mess            2   24[COMRAM] PTR const unsigned char 
  1492 ;;		 -> msg_ary(160), STR_2(12), STR_1(8), 
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;  i               1   28[COMRAM] unsigned char 
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      unsigned char 
  1497 ;; Registers used:
  1498 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1504 ;;      Params:         2       0       0       0       0       0       0
  1505 ;;      Locals:         1       0       0       0       0       0       0
  1506 ;;      Temps:          2       0       0       0       0       0       0
  1507 ;;      Totals:         5       0       0       0       0       0       0
  1508 ;;Total ram usage:        5 bytes
  1509 ;; Hardware stack levels used:    1
  1510 ;; Hardware stack levels required when called:    4
  1511 ;; This function calls:
  1512 ;;		_lcd_print_ch
  1513 ;; This function is called by:
  1514 ;;		_main
  1515 ;;		_Window
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text6
  1520  000C48                     __ptext6:
  1521                           	opt stack 0
  1522  000C48                     _lcd_print:
  1523                           	opt stack 26
  1524                           
  1525                           ;lcdlib_2016.c: 217: unsigned char i = 0 ;
  1526                           
  1527                           ;incstack = 0
  1528  000C48  0E00               	movlw	0
  1529  000C4A  6E1D               	movwf	lcd_print@i,c
  1530                           
  1531                           ;lcdlib_2016.c: 224: while ( mess [i] != 0 )
  1532  000C4C  D013               	goto	l1243
  1533  000C4E                     l1239:
  1534                           
  1535                           ;lcdlib_2016.c: 225: {
  1536                           ;lcdlib_2016.c: 226: lcd_print_ch ( mess[i] ) ;
  1537  000C4E  501D               	movf	lcd_print@i,w,c
  1538  000C50  0D01               	mullw	1
  1539  000C52  C019  F01B         	movff	lcd_print@mess,??_lcd_print
  1540  000C56  C01A  F01C         	movff	lcd_print@mess+1,??_lcd_print+1
  1541  000C5A  50F3               	movf	prodl,w,c
  1542  000C5C  261B               	addwf	??_lcd_print,f,c
  1543  000C5E  50F4               	movf	prodh,w,c
  1544  000C60  221C               	addwfc	??_lcd_print+1,f,c
  1545  000C62  C01B  FFF6         	movff	??_lcd_print,tblptrl
  1546  000C66  C01C  FFF7         	movff	??_lcd_print+1,tblptrh
  1547  000C6A                     	if	0	;tblptru may be non-zero
  1548  000C6A                     	endif
  1549  000C6A                     	if	0	;tblptru may be non-zero
  1550  000C6A                     	endif
  1551  000C6A  0008               	tblrd		*
  1552  000C6C  50F5               	movf	tablat,w,c
  1553  000C6E  EC06  F007         	call	_lcd_print_ch
  1554                           
  1555                           ;lcdlib_2016.c: 227: i++ ;
  1556  000C72  2A1D               	incf	lcd_print@i,f,c
  1557  000C74                     l1243:
  1558  000C74  501D               	movf	lcd_print@i,w,c
  1559  000C76  0D01               	mullw	1
  1560  000C78  C019  F01B         	movff	lcd_print@mess,??_lcd_print
  1561  000C7C  C01A  F01C         	movff	lcd_print@mess+1,??_lcd_print+1
  1562  000C80  50F3               	movf	prodl,w,c
  1563  000C82  261B               	addwf	??_lcd_print,f,c
  1564  000C84  50F4               	movf	prodh,w,c
  1565  000C86  221C               	addwfc	??_lcd_print+1,f,c
  1566  000C88  C01B  FFF6         	movff	??_lcd_print,tblptrl
  1567  000C8C  C01C  FFF7         	movff	??_lcd_print+1,tblptrh
  1568  000C90                     	if	0	;tblptru may be non-zero
  1569  000C90                     	endif
  1570  000C90                     	if	0	;tblptru may be non-zero
  1571  000C90                     	endif
  1572  000C90  0008               	tblrd		*
  1573  000C92  50F5               	movf	tablat,w,c
  1574  000C94  0900               	iorlw	0
  1575  000C96  B4D8               	btfsc	status,2,c
  1576  000C98  0012               	return	
  1577  000C9A  D7D9               	goto	l1239
  1578  000C9C                     __end_of_lcd_print:
  1579                           	opt stack 0
  1580                           tblptru	equ	0xFF8
  1581                           tblptrh	equ	0xFF7
  1582                           tblptrl	equ	0xFF6
  1583                           tablat	equ	0xFF5
  1584                           prodh	equ	0xFF4
  1585                           prodl	equ	0xFF3
  1586                           postinc0	equ	0xFEE
  1587                           wreg	equ	0xFE8
  1588                           postdec1	equ	0xFE5
  1589                           fsr1l	equ	0xFE1
  1590                           status	equ	0xFD8
  1591                           
  1592 ;; *************** function _lcd_print_ch *****************
  1593 ;; Defined at:
  1594 ;;		line 115 in file "../../LCD_library/lcdlib_2016.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  in              1    wreg     unsigned char 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  in              1   23[COMRAM] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      unsigned char 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1608 ;;      Params:         0       0       0       0       0       0       0
  1609 ;;      Locals:         1       0       0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0       0       0
  1611 ;;      Totals:         1       0       0       0       0       0       0
  1612 ;;Total ram usage:        1 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    3
  1615 ;; This function calls:
  1616 ;;		_lcd_raw_send
  1617 ;; This function is called by:
  1618 ;;		_lcd_print
  1619 ;;		_lcd_display_value
  1620 ;;		_lcd_display_int_value
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text7
  1625  000E0C                     __ptext7:
  1626                           	opt stack 0
  1627  000E0C                     _lcd_print_ch:
  1628                           	opt stack 26
  1629                           
  1630                           ;incstack = 0
  1631                           ;lcd_print_ch@in stored from wreg
  1632  000E0C  6E18               	movwf	lcd_print_ch@in,c
  1633                           
  1634                           ;lcdlib_2016.c: 118: lcd_raw_send ( in, 0x01 ) ;
  1635  000E0E  0E01               	movlw	1
  1636  000E10  6E14               	movwf	lcd_raw_send@RS,c
  1637  000E12  5018               	movf	lcd_print_ch@in,w,c
  1638  000E14  EC15  F004         	call	_lcd_raw_send
  1639  000E18  0012               	return	
  1640  000E1A                     __end_of_lcd_print_ch:
  1641                           	opt stack 0
  1642                           tblptru	equ	0xFF8
  1643                           tblptrh	equ	0xFF7
  1644                           tblptrl	equ	0xFF6
  1645                           tablat	equ	0xFF5
  1646                           prodh	equ	0xFF4
  1647                           prodl	equ	0xFF3
  1648                           postinc0	equ	0xFEE
  1649                           wreg	equ	0xFE8
  1650                           postdec1	equ	0xFE5
  1651                           fsr1l	equ	0xFE1
  1652                           status	equ	0xFD8
  1653                           
  1654 ;; *************** function _lcd_cursor *****************
  1655 ;; Defined at:
  1656 ;;		line 144 in file "../../LCD_library/lcdlib_2016.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  x               1    wreg     unsigned char 
  1659 ;;  y               1   24[COMRAM] unsigned char 
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;  x               1   25[COMRAM] unsigned char 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      unsigned char 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1671 ;;      Params:         1       0       0       0       0       0       0
  1672 ;;      Locals:         1       0       0       0       0       0       0
  1673 ;;      Temps:          0       0       0       0       0       0       0
  1674 ;;      Totals:         2       0       0       0       0       0       0
  1675 ;;Total ram usage:        2 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    4
  1678 ;; This function calls:
  1679 ;;		_lcd_command
  1680 ;; This function is called by:
  1681 ;;		_main
  1682 ;;		_Window
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text8
  1687  000DCE                     __ptext8:
  1688                           	opt stack 0
  1689  000DCE                     _lcd_cursor:
  1690                           	opt stack 26
  1691                           
  1692                           ;incstack = 0
  1693                           ;lcd_cursor@x stored from wreg
  1694  000DCE  6E1A               	movwf	lcd_cursor@x,c
  1695                           
  1696                           ;lcdlib_2016.c: 153: if ( y==0 )
  1697  000DD0  5019               	movf	lcd_cursor@y,w,c
  1698  000DD2  A4D8               	btfss	status,2,c
  1699  000DD4  D002               	goto	l1231
  1700                           
  1701                           ;lcdlib_2016.c: 154: {
  1702                           ;lcdlib_2016.c: 156: y=0x80 ;
  1703  000DD6  0E80               	movlw	128
  1704  000DD8  D001               	goto	L3
  1705  000DDA                     l1231:
  1706                           
  1707                           ;lcdlib_2016.c: 158: else
  1708                           ;lcdlib_2016.c: 159: {
  1709                           ;lcdlib_2016.c: 161: y=0xc0 ;
  1710  000DDA  0EC0               	movlw	192
  1711  000DDC                     L3:
  1712  000DDC  6E19               	movwf	lcd_cursor@y,c
  1713                           
  1714                           ;lcdlib_2016.c: 162: }
  1715                           ;lcdlib_2016.c: 164: lcd_command ( y+x ) ;
  1716  000DDE  5019               	movf	lcd_cursor@y,w,c
  1717  000DE0  241A               	addwf	lcd_cursor@x,w,c
  1718  000DE2  EC0D  F007         	call	_lcd_command
  1719  000DE6  0012               	return	
  1720  000DE8                     __end_of_lcd_cursor:
  1721                           	opt stack 0
  1722                           tblptru	equ	0xFF8
  1723                           tblptrh	equ	0xFF7
  1724                           tblptrl	equ	0xFF6
  1725                           tablat	equ	0xFF5
  1726                           prodh	equ	0xFF4
  1727                           prodl	equ	0xFF3
  1728                           postinc0	equ	0xFEE
  1729                           wreg	equ	0xFE8
  1730                           postdec1	equ	0xFE5
  1731                           fsr1l	equ	0xFE1
  1732                           status	equ	0xFD8
  1733                           
  1734 ;; *************** function _lcd_clear *****************
  1735 ;; Defined at:
  1736 ;;		line 131 in file "../../LCD_library/lcdlib_2016.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;		None
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;		None
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      unsigned char 
  1743 ;; Registers used:
  1744 ;;		wreg, status,2, status,0, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1750 ;;      Params:         0       0       0       0       0       0       0
  1751 ;;      Locals:         0       0       0       0       0       0       0
  1752 ;;      Temps:          1       0       0       0       0       0       0
  1753 ;;      Totals:         1       0       0       0       0       0       0
  1754 ;;Total ram usage:        1 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    4
  1757 ;; This function calls:
  1758 ;;		_lcd_command
  1759 ;; This function is called by:
  1760 ;;		_lcd_start
  1761 ;;		_main
  1762 ;;		_Window
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text9
  1767  000D80                     __ptext9:
  1768                           	opt stack 0
  1769  000D80                     _lcd_clear:
  1770                           	opt stack 25
  1771                           
  1772                           ;lcdlib_2016.c: 134: lcd_command ( 0x01 ) ;
  1773                           
  1774                           ;incstack = 0
  1775  000D80  0E01               	movlw	1
  1776  000D82  EC0D  F007         	call	_lcd_command
  1777                           
  1778                           ;lcdlib_2016.c: 135: _delay((unsigned long)((2)*(19660800/4000.0)));
  1779  000D86  0E0D               	movlw	13
  1780  000D88  6E19               	movwf	??_lcd_clear& (0+255),c
  1781  000D8A  0EC3               	movlw	195
  1782  000D8C                     u887:
  1783  000D8C  2EE8               	decfsz	wreg,f,c
  1784  000D8E  D7FE               	goto	u887
  1785  000D90  2E19               	decfsz	??_lcd_clear& (0+255),f,c
  1786  000D92  D7FC               	goto	u887
  1787  000D94  F000               	nop	
  1788                           
  1789                           ;lcdlib_2016.c: 138: lcd_command ( 0x02 ) ;
  1790  000D96  0E02               	movlw	2
  1791  000D98  EC0D  F007         	call	_lcd_command
  1792                           
  1793                           ;lcdlib_2016.c: 139: _delay((unsigned long)((2)*(19660800/4000.0)));
  1794  000D9C  0E0D               	movlw	13
  1795  000D9E  6E19               	movwf	??_lcd_clear& (0+255),c
  1796  000DA0  0EC3               	movlw	195
  1797  000DA2                     u897:
  1798  000DA2  2EE8               	decfsz	wreg,f,c
  1799  000DA4  D7FE               	goto	u897
  1800  000DA6  2E19               	decfsz	??_lcd_clear& (0+255),f,c
  1801  000DA8  D7FC               	goto	u897
  1802  000DAA  F000               	nop	
  1803  000DAC  0012               	return	
  1804  000DAE                     __end_of_lcd_clear:
  1805                           	opt stack 0
  1806                           tblptru	equ	0xFF8
  1807                           tblptrh	equ	0xFF7
  1808                           tblptrl	equ	0xFF6
  1809                           tablat	equ	0xFF5
  1810                           prodh	equ	0xFF4
  1811                           prodl	equ	0xFF3
  1812                           postinc0	equ	0xFEE
  1813                           wreg	equ	0xFE8
  1814                           postdec1	equ	0xFE5
  1815                           fsr1l	equ	0xFE1
  1816                           status	equ	0xFD8
  1817                           
  1818 ;; *************** function _lcd_command *****************
  1819 ;; Defined at:
  1820 ;;		line 123 in file "../../LCD_library/lcdlib_2016.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  in              1    wreg     unsigned char 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  in              1   23[COMRAM] unsigned char 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;		None               void
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1834 ;;      Params:         0       0       0       0       0       0       0
  1835 ;;      Locals:         1       0       0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0
  1837 ;;      Totals:         1       0       0       0       0       0       0
  1838 ;;Total ram usage:        1 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    3
  1841 ;; This function calls:
  1842 ;;		_lcd_raw_send
  1843 ;; This function is called by:
  1844 ;;		_lcd_clear
  1845 ;;		_lcd_cursor
  1846 ;;		_lcd_start
  1847 ;;		_lcd_cursor_on
  1848 ;;		_lcd_cursor_off
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           	psect	text10
  1853  000E1A                     __ptext10:
  1854                           	opt stack 0
  1855  000E1A                     _lcd_command:
  1856                           	opt stack 26
  1857                           
  1858                           ;incstack = 0
  1859                           ;lcd_command@in stored from wreg
  1860  000E1A  6E18               	movwf	lcd_command@in,c
  1861                           
  1862                           ;lcdlib_2016.c: 125: lcd_raw_send ( in, 0x00 ) ;
  1863  000E1C  0E00               	movlw	0
  1864  000E1E  6E14               	movwf	lcd_raw_send@RS,c
  1865  000E20  5018               	movf	lcd_command@in,w,c
  1866  000E22  EC15  F004         	call	_lcd_raw_send
  1867  000E26  0012               	return		;funcret
  1868  000E28                     __end_of_lcd_command:
  1869                           	opt stack 0
  1870                           tblptru	equ	0xFF8
  1871                           tblptrh	equ	0xFF7
  1872                           tblptrl	equ	0xFF6
  1873                           tablat	equ	0xFF5
  1874                           prodh	equ	0xFF4
  1875                           prodl	equ	0xFF3
  1876                           postinc0	equ	0xFEE
  1877                           wreg	equ	0xFE8
  1878                           postdec1	equ	0xFE5
  1879                           fsr1l	equ	0xFE1
  1880                           status	equ	0xFD8
  1881                           
  1882 ;; *************** function _lcd_raw_send *****************
  1883 ;; Defined at:
  1884 ;;		line 74 in file "../../LCD_library/lcdlib_2016.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  in              1    wreg     unsigned char 
  1887 ;;  RS              1   19[COMRAM] unsigned char 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  in              1   22[COMRAM] unsigned char 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;		None               void
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1899 ;;      Params:         1       0       0       0       0       0       0
  1900 ;;      Locals:         1       0       0       0       0       0       0
  1901 ;;      Temps:          2       0       0       0       0       0       0
  1902 ;;      Totals:         4       0       0       0       0       0       0
  1903 ;;Total ram usage:        4 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:    2
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_lcd_print_ch
  1910 ;;		_lcd_command
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text11
  1915  00082A                     __ptext11:
  1916                           	opt stack 0
  1917  00082A                     _lcd_raw_send:
  1918                           	opt stack 26
  1919                           
  1920                           ;incstack = 0
  1921                           ;lcd_raw_send@in stored from wreg
  1922  00082A  6E17               	movwf	lcd_raw_send@in,c
  1923                           
  1924                           ;lcdlib_2016.c: 78: LATDbits.LD0 = in >> 4;
  1925  00082C  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1926  000830  3A15               	swapf	??_lcd_raw_send,f,c
  1927  000832  0E0F               	movlw	15
  1928  000834  1615               	andwf	??_lcd_raw_send,f,c
  1929  000836  508C               	movf	3980,w,c	;volatile
  1930  000838  1815               	xorwf	??_lcd_raw_send,w,c
  1931  00083A  0BFE               	andlw	-2
  1932  00083C  1815               	xorwf	??_lcd_raw_send,w,c
  1933  00083E  6E8C               	movwf	3980,c	;volatile
  1934                           
  1935                           ;lcdlib_2016.c: 79: LATDbits.LD1 = in >> 5;
  1936  000840  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1937  000844  0E05               	movlw	5
  1938  000846  6E16               	movwf	(??_lcd_raw_send+1)& (0+255),c
  1939  000848                     u485:
  1940  000848  90D8               	bcf	status,0,c
  1941  00084A  3215               	rrcf	??_lcd_raw_send,f,c
  1942  00084C  2E16               	decfsz	(??_lcd_raw_send+1)& (0+255),f,c
  1943  00084E  D7FC               	goto	u485
  1944  000850  4615               	rlncf	??_lcd_raw_send,f,c
  1945  000852  508C               	movf	3980,w,c	;volatile
  1946  000854  1815               	xorwf	??_lcd_raw_send,w,c
  1947  000856  0BFD               	andlw	-3
  1948  000858  1815               	xorwf	??_lcd_raw_send,w,c
  1949  00085A  6E8C               	movwf	3980,c	;volatile
  1950                           
  1951                           ;lcdlib_2016.c: 80: LATDbits.LD2 = in >> 6;
  1952  00085C  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1953  000860  0E06               	movlw	6
  1954  000862  6E16               	movwf	(??_lcd_raw_send+1)& (0+255),c
  1955  000864                     u495:
  1956  000864  90D8               	bcf	status,0,c
  1957  000866  3215               	rrcf	??_lcd_raw_send,f,c
  1958  000868  2E16               	decfsz	(??_lcd_raw_send+1)& (0+255),f,c
  1959  00086A  D7FC               	goto	u495
  1960  00086C  4615               	rlncf	??_lcd_raw_send,f,c
  1961  00086E  4615               	rlncf	??_lcd_raw_send,f,c
  1962  000870  508C               	movf	3980,w,c	;volatile
  1963  000872  1815               	xorwf	??_lcd_raw_send,w,c
  1964  000874  0BFB               	andlw	-5
  1965  000876  1815               	xorwf	??_lcd_raw_send,w,c
  1966  000878  6E8C               	movwf	3980,c	;volatile
  1967                           
  1968                           ;lcdlib_2016.c: 81: LATDbits.LD3 = in >> 7;
  1969  00087A  6A15               	clrf	??_lcd_raw_send& (0+255),c
  1970  00087C  AE17               	btfss	lcd_raw_send@in,7,c
  1971  00087E  D001               	bra	u505
  1972  000880  2A15               	incf	??_lcd_raw_send& (0+255),f,c
  1973  000882                     u505:
  1974  000882  4615               	rlncf	??_lcd_raw_send,f,c
  1975  000884  4615               	rlncf	??_lcd_raw_send,f,c
  1976  000886  4615               	rlncf	??_lcd_raw_send,f,c
  1977  000888  508C               	movf	3980,w,c	;volatile
  1978  00088A  1815               	xorwf	??_lcd_raw_send,w,c
  1979  00088C  0BF7               	andlw	-9
  1980  00088E  1815               	xorwf	??_lcd_raw_send,w,c
  1981  000890  6E8C               	movwf	3980,c	;volatile
  1982                           
  1983                           ;lcdlib_2016.c: 82: LATDbits.LD4 = RS;
  1984  000892  B014               	btfsc	lcd_raw_send@RS,0,c
  1985  000894  D002               	bra	u515
  1986  000896  988C               	bcf	3980,4,c	;volatile
  1987  000898  D001               	bra	u516
  1988  00089A                     u515:
  1989  00089A  888C               	bsf	3980,4,c	;volatile
  1990  00089C                     u516:
  1991                           
  1992                           ;lcdlib_2016.c: 84: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1993  00089C  0E03               	movlw	3
  1994  00089E                     u907:
  1995  00089E  2EE8               	decfsz	wreg,f,c
  1996  0008A0  D7FE               	goto	u907
  1997                           
  1998                           ;lcdlib_2016.c: 89: LATDbits.LD5 = 1;
  1999  0008A2  8A8C               	bsf	3980,5,c	;volatile
  2000                           
  2001                           ;lcdlib_2016.c: 91: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2002  0008A4  0E03               	movlw	3
  2003  0008A6                     u917:
  2004  0008A6  2EE8               	decfsz	wreg,f,c
  2005  0008A8  D7FE               	goto	u917
  2006                           
  2007                           ;lcdlib_2016.c: 93: LATDbits.LD5 = 0;
  2008  0008AA  9A8C               	bcf	3980,5,c	;volatile
  2009                           
  2010                           ;lcdlib_2016.c: 95: _delay((unsigned long)((50)*(19660800/4000000.0)));
  2011  0008AC  0E51               	movlw	81
  2012  0008AE                     u927:
  2013  0008AE  2EE8               	decfsz	wreg,f,c
  2014  0008B0  D7FE               	goto	u927
  2015  0008B2  D000               	nop2		;nop
  2016                           
  2017                           ;lcdlib_2016.c: 98: LATDbits.LD0 = in;
  2018  0008B4  B017               	btfsc	lcd_raw_send@in,0,c
  2019  0008B6  D002               	bra	u525
  2020  0008B8  908C               	bcf	3980,0,c	;volatile
  2021  0008BA  D001               	bra	u526
  2022  0008BC                     u525:
  2023  0008BC  808C               	bsf	3980,0,c	;volatile
  2024  0008BE                     u526:
  2025                           
  2026                           ;lcdlib_2016.c: 99: LATDbits.LD1 = in >> 1;
  2027  0008BE  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  2028  0008C2  90D8               	bcf	status,0,c
  2029  0008C4  3215               	rrcf	??_lcd_raw_send,f,c
  2030  0008C6  4615               	rlncf	??_lcd_raw_send,f,c
  2031  0008C8  508C               	movf	3980,w,c	;volatile
  2032  0008CA  1815               	xorwf	??_lcd_raw_send,w,c
  2033  0008CC  0BFD               	andlw	-3
  2034  0008CE  1815               	xorwf	??_lcd_raw_send,w,c
  2035  0008D0  6E8C               	movwf	3980,c	;volatile
  2036                           
  2037                           ;lcdlib_2016.c: 100: LATDbits.LD2 = in >> 2;
  2038  0008D2  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  2039  0008D6  90D8               	bcf	status,0,c
  2040  0008D8  3215               	rrcf	??_lcd_raw_send,f,c
  2041  0008DA  90D8               	bcf	status,0,c
  2042  0008DC  3215               	rrcf	??_lcd_raw_send,f,c
  2043  0008DE  4615               	rlncf	??_lcd_raw_send,f,c
  2044  0008E0  4615               	rlncf	??_lcd_raw_send,f,c
  2045  0008E2  508C               	movf	3980,w,c	;volatile
  2046  0008E4  1815               	xorwf	??_lcd_raw_send,w,c
  2047  0008E6  0BFB               	andlw	-5
  2048  0008E8  1815               	xorwf	??_lcd_raw_send,w,c
  2049  0008EA  6E8C               	movwf	3980,c	;volatile
  2050                           
  2051                           ;lcdlib_2016.c: 101: LATDbits.LD3 = in >> 3;
  2052  0008EC  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  2053  0008F0  90D8               	bcf	status,0,c
  2054  0008F2  3215               	rrcf	??_lcd_raw_send,f,c
  2055  0008F4  90D8               	bcf	status,0,c
  2056  0008F6  3215               	rrcf	??_lcd_raw_send,f,c
  2057  0008F8  90D8               	bcf	status,0,c
  2058  0008FA  3215               	rrcf	??_lcd_raw_send,f,c
  2059  0008FC  4615               	rlncf	??_lcd_raw_send,f,c
  2060  0008FE  4615               	rlncf	??_lcd_raw_send,f,c
  2061  000900  4615               	rlncf	??_lcd_raw_send,f,c
  2062  000902  508C               	movf	3980,w,c	;volatile
  2063  000904  1815               	xorwf	??_lcd_raw_send,w,c
  2064  000906  0BF7               	andlw	-9
  2065  000908  1815               	xorwf	??_lcd_raw_send,w,c
  2066  00090A  6E8C               	movwf	3980,c	;volatile
  2067                           
  2068                           ;lcdlib_2016.c: 103: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2069  00090C  0E03               	movlw	3
  2070  00090E                     u937:
  2071  00090E  2EE8               	decfsz	wreg,f,c
  2072  000910  D7FE               	goto	u937
  2073                           
  2074                           ;lcdlib_2016.c: 105: LATDbits.LD5 = 1;
  2075  000912  8A8C               	bsf	3980,5,c	;volatile
  2076                           
  2077                           ;lcdlib_2016.c: 107: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2078  000914  0E03               	movlw	3
  2079  000916                     u947:
  2080  000916  2EE8               	decfsz	wreg,f,c
  2081  000918  D7FE               	goto	u947
  2082                           
  2083                           ;lcdlib_2016.c: 109: LATDbits.LD5 = 0;
  2084  00091A  9A8C               	bcf	3980,5,c	;volatile
  2085                           
  2086                           ;lcdlib_2016.c: 111: _delay((unsigned long)((50)*(19660800/4000000.0)));
  2087  00091C  0E51               	movlw	81
  2088  00091E                     u957:
  2089  00091E  2EE8               	decfsz	wreg,f,c
  2090  000920  D7FE               	goto	u957
  2091  000922  D000               	nop2		;nop
  2092  000924  0012               	return		;funcret
  2093  000926                     __end_of_lcd_raw_send:
  2094                           	opt stack 0
  2095                           tblptru	equ	0xFF8
  2096                           tblptrh	equ	0xFF7
  2097                           tblptrl	equ	0xFF6
  2098                           tablat	equ	0xFF5
  2099                           prodh	equ	0xFF4
  2100                           prodl	equ	0xFF3
  2101                           postinc0	equ	0xFEE
  2102                           wreg	equ	0xFE8
  2103                           postdec1	equ	0xFE5
  2104                           fsr1l	equ	0xFE1
  2105                           status	equ	0xFD8
  2106                           
  2107 ;; *************** function _Initial *****************
  2108 ;; Defined at:
  2109 ;;		line 191 in file "Menu_System.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;		None               void
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2123 ;;      Params:         0       0       0       0       0       0       0
  2124 ;;      Locals:         0       0       0       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0
  2126 ;;      Totals:         0       0       0       0       0       0       0
  2127 ;;Total ram usage:        0 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    3
  2130 ;; This function calls:
  2131 ;;		_OpenTimer0
  2132 ;;		_WriteTimer0
  2133 ;;		_delay_s
  2134 ;; This function is called by:
  2135 ;;		_main
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text12
  2140  000D4E                     __ptext12:
  2141                           	opt stack 0
  2142  000D4E                     _Initial:
  2143                           	opt stack 27
  2144                           
  2145                           ;Menu_System.c: 192: ADCON0 = 0x01;
  2146                           
  2147                           ;incstack = 0
  2148  000D4E  0E01               	movlw	1
  2149  000D50  6EC2               	movwf	4034,c	;volatile
  2150                           
  2151                           ;Menu_System.c: 193: ADCON1 = 0x0E;
  2152  000D52  0E0E               	movlw	14
  2153  000D54  6EC1               	movwf	4033,c	;volatile
  2154                           
  2155                           ;Menu_System.c: 194: TRISB = 0xFF;
  2156  000D56  6893               	setf	3987,c	;volatile
  2157                           
  2158                           ;Menu_System.c: 195: TRISC = 0x00;
  2159  000D58  0E00               	movlw	0
  2160  000D5A  6E94               	movwf	3988,c	;volatile
  2161                           
  2162                           ;Menu_System.c: 196: ADCON0bits.GO_nDONE = 1;
  2163  000D5C  82C2               	bsf	4034,1,c	;volatile
  2164                           
  2165                           ;Menu_System.c: 197: LATC = 0xff;
  2166  000D5E  688B               	setf	3979,c	;volatile
  2167                           
  2168                           ;Menu_System.c: 198: delay_s(3);
  2169  000D60  0E03               	movlw	3
  2170  000D62  EC8D  F006         	call	_delay_s
  2171                           
  2172                           ;Menu_System.c: 199: LATC = 0x00;
  2173  000D66  0E00               	movlw	0
  2174  000D68  6E8B               	movwf	3979,c	;volatile
  2175                           
  2176                           ;Menu_System.c: 202: OpenTimer0( 0b11111111 & 0b10111111 & 0b11011111 & 0b11110000);
  2177  000D6A  0E90               	movlw	144
  2178  000D6C  ECD7  F006         	call	_OpenTimer0
  2179                           
  2180                           ;Menu_System.c: 203: WriteTimer0(40960);
  2181  000D70  0EA0               	movlw	160
  2182  000D72  6E15               	movwf	WriteTimer0@timer0+1,c
  2183  000D74  0E00               	movlw	0
  2184  000D76  6E14               	movwf	WriteTimer0@timer0,c
  2185  000D78  ECF4  F006         	call	_WriteTimer0	;wreg free
  2186                           
  2187                           ;Menu_System.c: 204: (INTCONbits.GIE = 1);
  2188  000D7C  8EF2               	bsf	intcon,7,c	;volatile
  2189  000D7E  0012               	return		;funcret
  2190  000D80                     __end_of_Initial:
  2191                           	opt stack 0
  2192                           tblptru	equ	0xFF8
  2193                           tblptrh	equ	0xFF7
  2194                           tblptrl	equ	0xFF6
  2195                           tablat	equ	0xFF5
  2196                           prodh	equ	0xFF4
  2197                           prodl	equ	0xFF3
  2198                           intcon	equ	0xFF2
  2199                           postinc0	equ	0xFEE
  2200                           wreg	equ	0xFE8
  2201                           postdec1	equ	0xFE5
  2202                           fsr1l	equ	0xFE1
  2203                           status	equ	0xFD8
  2204                           
  2205 ;; *************** function _delay_s *****************
  2206 ;; Defined at:
  2207 ;;		line 218 in file "Menu_System.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  secs            1    wreg     unsigned char 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  secs            1   20[COMRAM] unsigned char 
  2212 ;;  i               1   22[COMRAM] unsigned char 
  2213 ;;  j               1   21[COMRAM] unsigned char 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;		None               void
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2223 ;;      Params:         0       0       0       0       0       0       0
  2224 ;;      Locals:         3       0       0       0       0       0       0
  2225 ;;      Temps:          1       0       0       0       0       0       0
  2226 ;;      Totals:         4       0       0       0       0       0       0
  2227 ;;Total ram usage:        4 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; Hardware stack levels required when called:    2
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;;		_Initial
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text13
  2239  000D1A                     __ptext13:
  2240                           	opt stack 0
  2241  000D1A                     _delay_s:
  2242                           	opt stack 28
  2243                           
  2244                           ;incstack = 0
  2245                           ;delay_s@secs stored from wreg
  2246  000D1A  6E15               	movwf	delay_s@secs,c
  2247                           
  2248                           ;Menu_System.c: 220: unsigned char i,j;
  2249                           ;Menu_System.c: 221: for(j=0;j<secs;j++)
  2250  000D1C  0E00               	movlw	0
  2251  000D1E  6E16               	movwf	delay_s@j,c
  2252  000D20  D011               	goto	l897
  2253  000D22                     l885:
  2254                           
  2255                           ;Menu_System.c: 222: {
  2256                           ;Menu_System.c: 223: for (i=0;i<25;i++)
  2257  000D22  0E00               	movlw	0
  2258  000D24  6E17               	movwf	delay_s@i,c
  2259  000D26                     l887:
  2260  000D26  0E18               	movlw	24
  2261  000D28  6417               	cpfsgt	delay_s@i,c
  2262  000D2A  D001               	goto	l891
  2263  000D2C  D00A               	goto	l895
  2264  000D2E                     l891:
  2265                           
  2266                           ;Menu_System.c: 224: _delay((unsigned long)((40)*(19660800/4000.0)));
  2267  000D2E  0E00               	movlw	0
  2268  000D30  6E14               	movwf	??_delay_s& (0+255),c
  2269  000D32  0E54               	movlw	84
  2270  000D34                     u967:
  2271  000D34  2EE8               	decfsz	wreg,f,c
  2272  000D36  D7FE               	goto	u967
  2273  000D38  2E14               	decfsz	??_delay_s& (0+255),f,c
  2274  000D3A  D7FC               	goto	u967
  2275  000D3C  D000               	nop2	
  2276  000D3E  2A17               	incf	delay_s@i,f,c
  2277  000D40  D7F2               	goto	l887
  2278  000D42                     l895:
  2279  000D42  2A16               	incf	delay_s@j,f,c
  2280  000D44                     l897:
  2281  000D44  5015               	movf	delay_s@secs,w,c
  2282  000D46  5C16               	subwf	delay_s@j,w,c
  2283  000D48  B0D8               	btfsc	status,0,c
  2284  000D4A  0012               	return	
  2285  000D4C  D7EA               	goto	l885
  2286  000D4E                     __end_of_delay_s:
  2287                           	opt stack 0
  2288                           tblptru	equ	0xFF8
  2289                           tblptrh	equ	0xFF7
  2290                           tblptrl	equ	0xFF6
  2291                           tablat	equ	0xFF5
  2292                           prodh	equ	0xFF4
  2293                           prodl	equ	0xFF3
  2294                           intcon	equ	0xFF2
  2295                           postinc0	equ	0xFEE
  2296                           wreg	equ	0xFE8
  2297                           postdec1	equ	0xFE5
  2298                           fsr1l	equ	0xFE1
  2299                           status	equ	0xFD8
  2300                           
  2301 ;; *************** function _WriteTimer0 *****************
  2302 ;; Defined at:
  2303 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  timer0          2   19[COMRAM] unsigned int 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  timer           2   21[COMRAM] struct Timers
  2308 ;; Return value:  Size  Location     Type
  2309 ;;		None               void
  2310 ;; Registers used:
  2311 ;;		None
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2317 ;;      Params:         2       0       0       0       0       0       0
  2318 ;;      Locals:         2       0       0       0       0       0       0
  2319 ;;      Temps:          0       0       0       0       0       0       0
  2320 ;;      Totals:         4       0       0       0       0       0       0
  2321 ;;Total ram usage:        4 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    2
  2324 ;; This function calls:
  2325 ;;		Nothing
  2326 ;; This function is called by:
  2327 ;;		_Initial
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text14
  2332  000DE8                     __ptext14:
  2333                           	opt stack 0
  2334  000DE8                     _WriteTimer0:
  2335                           	opt stack 27
  2336                           
  2337                           ;incstack = 0
  2338  000DE8  C014  F016         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2339  000DEC  C015  F017         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2340  000DF0  C017  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2341  000DF4  C016  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2342  000DF8  0012               	return		;funcret
  2343  000DFA                     __end_of_WriteTimer0:
  2344                           	opt stack 0
  2345                           tblptru	equ	0xFF8
  2346                           tblptrh	equ	0xFF7
  2347                           tblptrl	equ	0xFF6
  2348                           tablat	equ	0xFF5
  2349                           prodh	equ	0xFF4
  2350                           prodl	equ	0xFF3
  2351                           intcon	equ	0xFF2
  2352                           postinc0	equ	0xFEE
  2353                           wreg	equ	0xFE8
  2354                           postdec1	equ	0xFE5
  2355                           fsr1l	equ	0xFE1
  2356                           status	equ	0xFD8
  2357                           
  2358 ;; *************** function _OpenTimer0 *****************
  2359 ;; Defined at:
  2360 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0open.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  config          1    wreg     unsigned char 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  config          1   19[COMRAM] unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;		None               void
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2374 ;;      Params:         0       0       0       0       0       0       0
  2375 ;;      Locals:         1       0       0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0
  2377 ;;      Totals:         1       0       0       0       0       0       0
  2378 ;;Total ram usage:        1 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    2
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_Initial
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text15
  2389  000DAE                     __ptext15:
  2390                           	opt stack 0
  2391  000DAE                     _OpenTimer0:
  2392                           	opt stack 27
  2393                           
  2394                           ;incstack = 0
  2395                           ;OpenTimer0@config stored from wreg
  2396  000DAE  6E14               	movwf	OpenTimer0@config,c
  2397  000DB0  5014               	movf	OpenTimer0@config,w,c
  2398  000DB2  0B7F               	andlw	127
  2399  000DB4  6ED5               	movwf	4053,c	;volatile
  2400  000DB6  0E00               	movlw	0
  2401  000DB8  6ED7               	movwf	4055,c	;volatile
  2402  000DBA  0E00               	movlw	0
  2403  000DBC  6ED6               	movwf	4054,c	;volatile
  2404  000DBE  94F2               	bcf	intcon,2,c	;volatile
  2405  000DC0  AE14               	btfss	OpenTimer0@config,7,c
  2406  000DC2  D002               	goto	l192
  2407  000DC4  8AF2               	bsf	intcon,5,c	;volatile
  2408  000DC6  D001               	goto	l193
  2409  000DC8                     l192:
  2410  000DC8  9AF2               	bcf	intcon,5,c	;volatile
  2411  000DCA                     l193:
  2412  000DCA  8ED5               	bsf	4053,7,c	;volatile
  2413  000DCC  0012               	return		;funcret
  2414  000DCE                     __end_of_OpenTimer0:
  2415                           	opt stack 0
  2416                           tblptru	equ	0xFF8
  2417                           tblptrh	equ	0xFF7
  2418                           tblptrl	equ	0xFF6
  2419                           tablat	equ	0xFF5
  2420                           prodh	equ	0xFF4
  2421                           prodl	equ	0xFF3
  2422                           intcon	equ	0xFF2
  2423                           postinc0	equ	0xFEE
  2424                           wreg	equ	0xFE8
  2425                           postdec1	equ	0xFE5
  2426                           fsr1l	equ	0xFE1
  2427                           status	equ	0xFD8
  2428                           
  2429 ;; *************** function _myIsr *****************
  2430 ;; Defined at:
  2431 ;;		line 54 in file "Menu_System.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;		None               void
  2438 ;; Registers used:
  2439 ;;		wreg, status,2, status,0, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2445 ;;      Params:         0       0       0       0       0       0       0
  2446 ;;      Locals:         0       0       0       0       0       0       0
  2447 ;;      Temps:         15       0       0       0       0       0       0
  2448 ;;      Totals:        15       0       0       0       0       0       0
  2449 ;;Total ram usage:       15 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    1
  2452 ;; This function calls:
  2453 ;;		_Find_Button_Press
  2454 ;;		i2_WriteTimer0
  2455 ;; This function is called by:
  2456 ;;		Interrupt level 2
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	intcode
  2461  000008                     __pintcode:
  2462                           	opt stack 0
  2463  000008                     _myIsr:
  2464                           	opt stack 25
  2465                           
  2466                           ;incstack = 0
  2467  000008  8237               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2468  00000A  CFFA F006          	movff	pclath,??_myIsr+1
  2469  00000E  CFFB F007          	movff	pclatu,??_myIsr+2
  2470  000012  ED93  F004         	call	int_func,f	;refresh shadow registers
  2471                           pclatu	equ	0xFFB
  2472                           pclath	equ	0xFFA
  2473                           tblptru	equ	0xFF8
  2474                           tblptrh	equ	0xFF7
  2475                           tblptrl	equ	0xFF6
  2476                           tablat	equ	0xFF5
  2477                           prodh	equ	0xFF4
  2478                           prodl	equ	0xFF3
  2479                           intcon	equ	0xFF2
  2480                           postinc0	equ	0xFEE
  2481                           wreg	equ	0xFE8
  2482                           postdec1	equ	0xFE5
  2483                           fsr1l	equ	0xFE1
  2484                           status	equ	0xFD8
  2485                           
  2486                           	psect	intcode_body
  2487  000926                     __pintcode_body:
  2488                           	opt stack 25
  2489  000926                     int_func:
  2490                           	opt stack 25
  2491  000926  0006               	pop		; remove dummy address from shadow register refresh
  2492  000928  CFE9 F008          	movff	fsr0l,??_myIsr+3
  2493  00092C  CFEA F009          	movff	fsr0h,??_myIsr+4
  2494  000930  CFE1 F00A          	movff	fsr1l,??_myIsr+5
  2495  000934  CFE2 F00B          	movff	fsr1h,??_myIsr+6
  2496  000938  CFD9 F00C          	movff	fsr2l,??_myIsr+7
  2497  00093C  CFDA F00D          	movff	fsr2h,??_myIsr+8
  2498  000940  CFF3 F00E          	movff	prodl,??_myIsr+9
  2499  000944  CFF4 F00F          	movff	prodh,??_myIsr+10
  2500  000948  CFF6 F010          	movff	tblptrl,??_myIsr+11
  2501  00094C  CFF7 F011          	movff	tblptrh,??_myIsr+12
  2502  000950  CFF8 F012          	movff	tblptru,??_myIsr+13
  2503  000954  CFF5 F013          	movff	tablat,??_myIsr+14
  2504                           
  2505                           ;Menu_System.c: 58: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  2506  000958  BAF2               	btfsc	intcon,5,c	;volatile
  2507  00095A  A4F2               	btfss	intcon,2,c	;volatile
  2508  00095C  D026               	goto	i2l133
  2509                           
  2510                           ;Menu_System.c: 60: Find_Button_Press();
  2511  00095E  EC7A  F005         	call	_Find_Button_Press	;wreg free
  2512                           
  2513                           ;Menu_System.c: 61: WriteTimer0(40960);
  2514  000962  0EA0               	movlw	160
  2515  000964  6E02               	movwf	i2WriteTimer0@timer0+1,c
  2516  000966  0E00               	movlw	0
  2517  000968  6E01               	movwf	i2WriteTimer0@timer0,c
  2518  00096A  ECFD  F006         	call	i2_WriteTimer0	;wreg free
  2519                           
  2520                           ;Menu_System.c: 62: INTCONbits.TMR0IF = 0;
  2521  00096E  94F2               	bcf	intcon,2,c	;volatile
  2522                           
  2523                           ;Menu_System.c: 64: count++;
  2524  000970  2A34               	incf	_count,f,c
  2525                           
  2526                           ;Menu_System.c: 65: count_hb++;
  2527  000972  2A35               	incf	_count_hb,f,c
  2528                           
  2529                           ;Menu_System.c: 66: if(count == 10){
  2530  000974  0E0A               	movlw	10
  2531  000976  1834               	xorwf	_count,w,c
  2532  000978  A4D8               	btfss	status,2,c
  2533  00097A  D003               	goto	i2l1413
  2534                           
  2535                           ;Menu_System.c: 67: count = 0;
  2536  00097C  0E00               	movlw	0
  2537  00097E  6E34               	movwf	_count,c
  2538                           
  2539                           ;Menu_System.c: 68: Tick_E = 1;
  2540  000980  8036               	bsf	_Tick_E/(0+8),_Tick_E& (0+7),c
  2541  000982                     i2l1413:
  2542                           
  2543                           ;Menu_System.c: 69: }
  2544                           ;Menu_System.c: 71: if(count_hb == 100){
  2545  000982  0E64               	movlw	100
  2546  000984  1835               	xorwf	_count_hb,w,c
  2547  000986  A4D8               	btfss	status,2,c
  2548  000988  D010               	goto	i2l133
  2549                           
  2550                           ;Menu_System.c: 72: PORTCbits.RC7 = ~PORTCbits.RC7;
  2551  00098A  AE82               	btfss	3970,7,c	;volatile
  2552  00098C  D002               	goto	i2u73_40
  2553  00098E  0E01               	movlw	1
  2554  000990  D001               	goto	i2u73_46
  2555  000992                     i2u73_40:
  2556  000992  0E00               	movlw	0
  2557  000994                     i2u73_46:
  2558  000994  0AFF               	xorlw	255
  2559  000996  6E05               	movwf	??_myIsr& (0+255),c
  2560  000998  3205               	rrcf	??_myIsr,f,c
  2561  00099A  3205               	rrcf	??_myIsr,f,c
  2562  00099C  5082               	movf	3970,w,c	;volatile
  2563  00099E  1805               	xorwf	??_myIsr,w,c
  2564  0009A0  0B7F               	andlw	-129
  2565  0009A2  1805               	xorwf	??_myIsr,w,c
  2566  0009A4  6E82               	movwf	3970,c	;volatile
  2567                           
  2568                           ;Menu_System.c: 73: count_hb = 0;
  2569  0009A6  0E00               	movlw	0
  2570  0009A8  6E35               	movwf	_count_hb,c
  2571  0009AA                     i2l133:
  2572  0009AA  C013  FFF5         	movff	??_myIsr+14,tablat
  2573  0009AE  C012  FFF8         	movff	??_myIsr+13,tblptru
  2574  0009B2  C011  FFF7         	movff	??_myIsr+12,tblptrh
  2575  0009B6  C010  FFF6         	movff	??_myIsr+11,tblptrl
  2576  0009BA  C00F  FFF4         	movff	??_myIsr+10,prodh
  2577  0009BE  C00E  FFF3         	movff	??_myIsr+9,prodl
  2578  0009C2  C00D  FFDA         	movff	??_myIsr+8,fsr2h
  2579  0009C6  C00C  FFD9         	movff	??_myIsr+7,fsr2l
  2580  0009CA  C00B  FFE2         	movff	??_myIsr+6,fsr1h
  2581  0009CE  C00A  FFE1         	movff	??_myIsr+5,fsr1l
  2582  0009D2  C009  FFEA         	movff	??_myIsr+4,fsr0h
  2583  0009D6  C008  FFE9         	movff	??_myIsr+3,fsr0l
  2584  0009DA  C007  FFFB         	movff	??_myIsr+2,pclatu
  2585  0009DE  C006  FFFA         	movff	??_myIsr+1,pclath
  2586  0009E2  9237               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2587  0009E4  0011               	retfie		f
  2588  0009E6                     __end_of_myIsr:
  2589                           	opt stack 0
  2590                           pclatu	equ	0xFFB
  2591                           pclath	equ	0xFFA
  2592                           tblptru	equ	0xFF8
  2593                           tblptrh	equ	0xFF7
  2594                           tblptrl	equ	0xFF6
  2595                           tablat	equ	0xFF5
  2596                           prodh	equ	0xFF4
  2597                           prodl	equ	0xFF3
  2598                           intcon	equ	0xFF2
  2599                           postinc0	equ	0xFEE
  2600                           fsr0h	equ	0xFEA
  2601                           fsr0l	equ	0xFE9
  2602                           wreg	equ	0xFE8
  2603                           postdec1	equ	0xFE5
  2604                           fsr1h	equ	0xFE2
  2605                           fsr1l	equ	0xFE1
  2606                           fsr2h	equ	0xFDA
  2607                           fsr2l	equ	0xFD9
  2608                           status	equ	0xFD8
  2609                           
  2610 ;; *************** function i2_WriteTimer0 *****************
  2611 ;; Defined at:
  2612 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  timer0          2    0[COMRAM] unsigned int 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  WriteTimer0     2    2[COMRAM] struct Timers
  2617 ;; Return value:  Size  Location     Type
  2618 ;;		None               void
  2619 ;; Registers used:
  2620 ;;		None
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2626 ;;      Params:         2       0       0       0       0       0       0
  2627 ;;      Locals:         2       0       0       0       0       0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0
  2629 ;;      Totals:         4       0       0       0       0       0       0
  2630 ;;Total ram usage:        4 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_myIsr
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text17
  2640  000DFA                     __ptext17:
  2641                           	opt stack 0
  2642  000DFA                     i2_WriteTimer0:
  2643                           	opt stack 25
  2644                           
  2645                           ;incstack = 0
  2646  000DFA  C001  F003         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  2647  000DFE  C002  F004         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  2648  000E02  C004  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  2649  000E06  C003  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  2650  000E0A  0012               	return		;funcret
  2651  000E0C                     __end_ofi2_WriteTimer0:
  2652                           	opt stack 0
  2653                           pclatu	equ	0xFFB
  2654                           pclath	equ	0xFFA
  2655                           tblptru	equ	0xFF8
  2656                           tblptrh	equ	0xFF7
  2657                           tblptrl	equ	0xFF6
  2658                           tablat	equ	0xFF5
  2659                           prodh	equ	0xFF4
  2660                           prodl	equ	0xFF3
  2661                           intcon	equ	0xFF2
  2662                           postinc0	equ	0xFEE
  2663                           fsr0h	equ	0xFEA
  2664                           fsr0l	equ	0xFE9
  2665                           wreg	equ	0xFE8
  2666                           postdec1	equ	0xFE5
  2667                           fsr1h	equ	0xFE2
  2668                           fsr1l	equ	0xFE1
  2669                           fsr2h	equ	0xFDA
  2670                           fsr2l	equ	0xFD9
  2671                           status	equ	0xFD8
  2672                           
  2673 ;; *************** function _Find_Button_Press *****************
  2674 ;; Defined at:
  2675 ;;		line 36 in file "../../Buttons_Debounce_State_Mch-master/Buttons_Debounce.X/Buttons_Debounce.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;		None               void
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2689 ;;      Params:         0       0       0       0       0       0       0
  2690 ;;      Locals:         0       0       0       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0
  2692 ;;      Totals:         0       0       0       0       0       0       0
  2693 ;;Total ram usage:        0 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_myIsr
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text18
  2703  000AF4                     __ptext18:
  2704                           	opt stack 0
  2705  000AF4                     _Find_Button_Press:
  2706                           	opt stack 25
  2707                           
  2708                           ;Buttons_Debounce.c: 38: static states Button_State=Waiting;
  2709                           ;Buttons_Debounce.c: 39: static unsigned char Button_Count=0;
  2710                           ;Buttons_Debounce.c: 40: static Bit_Mask Temp_Press;
  2711                           ;Buttons_Debounce.c: 44: switch (Button_State){
  2712                           
  2713                           ;incstack = 0
  2714  000AF4  D030               	goto	i2l1039
  2715  000AF6                     i2l1015:
  2716                           
  2717                           ;Buttons_Debounce.c: 46: if(PORTB)
  2718  000AF6  5081               	movf	3969,w,c	;volatile
  2719  000AF8  B4D8               	btfsc	status,2,c
  2720  000AFA  0012               	return	
  2721                           
  2722                           ;Buttons_Debounce.c: 47: {
  2723                           ;Buttons_Debounce.c: 48: Button_State = Detected;
  2724  000AFC  0E01               	movlw	1
  2725  000AFE  6E31               	movwf	Find_Button_Press@Button_State,c
  2726                           
  2727                           ;Buttons_Debounce.c: 49: Button_Count = 0;
  2728  000B00  0E00               	movlw	0
  2729  000B02  6E30               	movwf	Find_Button_Press@Button_Count,c
  2730                           
  2731                           ;Buttons_Debounce.c: 51: Temp_Press.Full=PORTB;
  2732  000B04  CF81 F032          	movff	3969,Find_Button_Press@Temp_Press	;volatile
  2733                           
  2734                           ;Buttons_Debounce.c: 52: }
  2735                           ;Buttons_Debounce.c: 53: break;
  2736  000B08  0012               	return	
  2737  000B0A                     i2l1021:
  2738                           
  2739                           ;Buttons_Debounce.c: 55: if (Temp_Press.Full == PORTB)
  2740  000B0A  5081               	movf	3969,w,c	;volatile
  2741  000B0C  1832               	xorwf	Find_Button_Press@Temp_Press,w,c
  2742  000B0E  A4D8               	btfss	status,2,c
  2743  000B10  D007               	goto	i2l1029
  2744                           
  2745                           ;Buttons_Debounce.c: 56: {
  2746                           ;Buttons_Debounce.c: 57: ++Button_Count;
  2747  000B12  2A30               	incf	Find_Button_Press@Button_Count,f,c
  2748                           
  2749                           ;Buttons_Debounce.c: 58: if (Button_Count > 10)
  2750  000B14  0E0A               	movlw	10
  2751  000B16  6430               	cpfsgt	Find_Button_Press@Button_Count,c
  2752  000B18  0012               	return	
  2753                           
  2754                           ;Buttons_Debounce.c: 59: {
  2755                           ;Buttons_Debounce.c: 60: Button_State = WaitForRelease;
  2756  000B1A  0E02               	movlw	2
  2757  000B1C  6E31               	movwf	Find_Button_Press@Button_State,c
  2758                           
  2759                           ;Buttons_Debounce.c: 61: }
  2760                           ;Buttons_Debounce.c: 62: }
  2761  000B1E  0012               	return	
  2762  000B20                     i2l1029:
  2763                           
  2764                           ;Buttons_Debounce.c: 63: else
  2765                           ;Buttons_Debounce.c: 64: {
  2766                           ;Buttons_Debounce.c: 65: Button_State = Waiting;
  2767  000B20  0E00               	movlw	0
  2768  000B22  6E31               	movwf	Find_Button_Press@Button_State,c
  2769                           
  2770                           ;Buttons_Debounce.c: 66: }
  2771                           ;Buttons_Debounce.c: 67: break;
  2772  000B24  0012               	return	
  2773  000B26                     i2l1031:
  2774                           
  2775                           ;Buttons_Debounce.c: 69: if (!PORTB)
  2776  000B26  5081               	movf	3969,w,c	;volatile
  2777  000B28  A4D8               	btfss	status,2,c
  2778  000B2A  0012               	return	
  2779                           
  2780                           ;Buttons_Debounce.c: 70: {
  2781                           ;Buttons_Debounce.c: 71: Button_State = Update;
  2782  000B2C  0E03               	movlw	3
  2783  000B2E  6E31               	movwf	Find_Button_Press@Button_State,c
  2784                           
  2785                           ;Buttons_Debounce.c: 72: }
  2786                           ;Buttons_Debounce.c: 73: break;
  2787  000B30  0012               	return	
  2788  000B32                     i2l71:
  2789                           
  2790                           ;Buttons_Debounce.c: 75: {
  2791                           ;Buttons_Debounce.c: 76: Button_Press = Temp_Press;
  2792  000B32  C032  F033         	movff	Find_Button_Press@Temp_Press,_Button_Press
  2793                           
  2794                           ;Buttons_Debounce.c: 77: Button_State = Waiting;
  2795  000B36  0E00               	movlw	0
  2796  000B38  6E31               	movwf	Find_Button_Press@Button_State,c
  2797                           
  2798                           ;Buttons_Debounce.c: 78: Button_Count = 0;
  2799  000B3A  0E00               	movlw	0
  2800  000B3C  6E30               	movwf	Find_Button_Press@Button_Count,c
  2801                           
  2802                           ;Buttons_Debounce.c: 79: Temp_Press.Full=0;
  2803  000B3E  0E00               	movlw	0
  2804  000B40  6E32               	movwf	Find_Button_Press@Temp_Press,c
  2805                           
  2806                           ;Buttons_Debounce.c: 80: }
  2807                           ;Buttons_Debounce.c: 81: break;
  2808  000B42  0012               	return	
  2809  000B44                     i2l1037:
  2810                           
  2811                           ;Buttons_Debounce.c: 83: {
  2812                           ;Buttons_Debounce.c: 84: Button_State = Waiting;
  2813  000B44  0E00               	movlw	0
  2814  000B46  6E31               	movwf	Find_Button_Press@Button_State,c
  2815                           
  2816                           ;Buttons_Debounce.c: 85: Button_Count = 0;
  2817  000B48  0E00               	movlw	0
  2818  000B4A  6E30               	movwf	Find_Button_Press@Button_Count,c
  2819                           
  2820                           ;Buttons_Debounce.c: 86: Temp_Press.Full=0;
  2821  000B4C  0E00               	movlw	0
  2822  000B4E  6E32               	movwf	Find_Button_Press@Temp_Press,c
  2823                           
  2824                           ;Buttons_Debounce.c: 87: Button_Press.Full=0;
  2825  000B50  0E00               	movlw	0
  2826  000B52  6E33               	movwf	_Button_Press,c
  2827                           
  2828                           ;Buttons_Debounce.c: 88: }
  2829                           ;Buttons_Debounce.c: 89: }
  2830  000B54  0012               	return	
  2831  000B56                     i2l1039:
  2832  000B56  5031               	movf	Find_Button_Press@Button_State,w,c
  2833                           
  2834                           ; Switch size 1, requested type "space"
  2835                           ; Number of cases is 4, Range of values is 0 to 3
  2836                           ; switch strategies available:
  2837                           ; Name         Instructions Cycles
  2838                           ; simple_byte           13     7 (average)
  2839                           ;	Chosen strategy is simple_byte
  2840  000B58  0A00               	xorlw	0	; case 0
  2841  000B5A  B4D8               	btfsc	status,2,c
  2842  000B5C  D7CC               	goto	i2l1015
  2843  000B5E  0A01               	xorlw	1	; case 1
  2844  000B60  B4D8               	btfsc	status,2,c
  2845  000B62  D7D3               	goto	i2l1021
  2846  000B64  0A03               	xorlw	3	; case 2
  2847  000B66  B4D8               	btfsc	status,2,c
  2848  000B68  D7DE               	goto	i2l1031
  2849  000B6A  0A01               	xorlw	1	; case 3
  2850  000B6C  B4D8               	btfsc	status,2,c
  2851  000B6E  D7E1               	goto	i2l71
  2852  000B70  D7E9               	goto	i2l1037
  2853  000B72                     __end_of_Find_Button_Press:
  2854                           	opt stack 0
  2855                           pclatu	equ	0xFFB
  2856                           pclath	equ	0xFFA
  2857                           tblptru	equ	0xFF8
  2858                           tblptrh	equ	0xFF7
  2859                           tblptrl	equ	0xFF6
  2860                           tablat	equ	0xFF5
  2861                           prodh	equ	0xFF4
  2862                           prodl	equ	0xFF3
  2863                           intcon	equ	0xFF2
  2864                           postinc0	equ	0xFEE
  2865                           fsr0h	equ	0xFEA
  2866                           fsr0l	equ	0xFE9
  2867                           wreg	equ	0xFE8
  2868                           postdec1	equ	0xFE5
  2869                           fsr1h	equ	0xFE2
  2870                           fsr1l	equ	0xFE1
  2871                           fsr2h	equ	0xFDA
  2872                           fsr2l	equ	0xFD9
  2873                           status	equ	0xFD8
  2874                           pclatu	equ	0xFFB
  2875                           pclath	equ	0xFFA
  2876                           tblptru	equ	0xFF8
  2877                           tblptrh	equ	0xFF7
  2878                           tblptrl	equ	0xFF6
  2879                           tablat	equ	0xFF5
  2880                           prodh	equ	0xFF4
  2881                           prodl	equ	0xFF3
  2882                           intcon	equ	0xFF2
  2883                           postinc0	equ	0xFEE
  2884                           fsr0h	equ	0xFEA
  2885                           fsr0l	equ	0xFE9
  2886                           wreg	equ	0xFE8
  2887                           postdec1	equ	0xFE5
  2888                           fsr1h	equ	0xFE2
  2889                           fsr1l	equ	0xFE1
  2890                           fsr2h	equ	0xFDA
  2891                           fsr2l	equ	0xFD9
  2892                           status	equ	0xFD8
  2893                           
  2894                           	psect	rparam
  2895  0000                     pclatu	equ	0xFFB
  2896                           pclath	equ	0xFFA
  2897                           tblptru	equ	0xFF8
  2898                           tblptrh	equ	0xFF7
  2899                           tblptrl	equ	0xFF6
  2900                           tablat	equ	0xFF5
  2901                           prodh	equ	0xFF4
  2902                           prodl	equ	0xFF3
  2903                           intcon	equ	0xFF2
  2904                           postinc0	equ	0xFEE
  2905                           fsr0h	equ	0xFEA
  2906                           fsr0l	equ	0xFE9
  2907                           wreg	equ	0xFE8
  2908                           postdec1	equ	0xFE5
  2909                           fsr1h	equ	0xFE2
  2910                           fsr1l	equ	0xFE1
  2911                           fsr2h	equ	0xFDA
  2912                           fsr2l	equ	0xFD9
  2913                           status	equ	0xFD8
  2914                           
  2915                           	psect	temp
  2916  000037                     btemp:
  2917                           	opt stack 0
  2918  000037                     	ds	1
  2919  0000                     int$flags	set	btemp
  2920                           pclatu	equ	0xFFB
  2921                           pclath	equ	0xFFA
  2922                           tblptru	equ	0xFF8
  2923                           tblptrh	equ	0xFF7
  2924                           tblptrl	equ	0xFF6
  2925                           tablat	equ	0xFF5
  2926                           prodh	equ	0xFF4
  2927                           prodl	equ	0xFF3
  2928                           intcon	equ	0xFF2
  2929                           postinc0	equ	0xFEE
  2930                           fsr0h	equ	0xFEA
  2931                           fsr0l	equ	0xFE9
  2932                           wreg	equ	0xFE8
  2933                           postdec1	equ	0xFE5
  2934                           fsr1h	equ	0xFE2
  2935                           fsr1l	equ	0xFE1
  2936                           fsr2h	equ	0xFDA
  2937                           fsr2l	equ	0xFD9
  2938                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    165
    Data        7
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     40      54
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    startup	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), 

    problem	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    lcd_print@mess	PTR const unsigned char  size(2) Largest target is 160
		 -> msg_ary(CODE[160]), STR_2(CODE[12]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Window
    _lcd_start->_lcd_clear
    _lcd_display_value->___awdiv
    _Window->_lcd_print
    _lcd_print->_lcd_print_ch
    _lcd_print_ch->_lcd_raw_send
    _lcd_cursor->_lcd_command
    _lcd_clear->_lcd_command
    _lcd_command->_lcd_raw_send
    _Initial->_WriteTimer0
    _Initial->_delay_s

Critical Paths under _myIsr in COMRAM

    _myIsr->i2_WriteTimer0

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    8021
                                             32 COMRAM     8     8      0
                            _Initial
                             _Window
                            _delay_s
                          _lcd_clear
                         _lcd_cursor
                  _lcd_display_value
                          _lcd_print
                          _lcd_start
 ---------------------------------------------------------------------------------
 (1) _lcd_start                                            3     3      0     812
                                             25 COMRAM     2     2      0
                          _lcd_clear
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_display_value                                    4     4      0    1909
                                             27 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Window                                               3     3      0    2382
                                             29 COMRAM     3     3      0
                          _lcd_clear
                         _lcd_cursor
                          _lcd_print
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     766
                                             24 COMRAM     5     3      2
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) _lcd_print_ch                                         1     1      0     372
                                             23 COMRAM     1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor                                           2     1      1    1200
                                             24 COMRAM     2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0     372
                                             24 COMRAM     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          1     1      0     372
                                             23 COMRAM     1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (3) _lcd_raw_send                                         4     3      1     350
                                             19 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Initial                                              0     0      0     285
                         _OpenTimer0
                        _WriteTimer0
                            _delay_s
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              4     4      0      60
                                             19 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     195
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      30
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myIsr                                               15    15      0      93
                                              4 COMRAM    15    15      0
                  _Find_Button_Press
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (6) i2_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _Find_Button_Press                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initial
     _OpenTimer0
     _WriteTimer0
     _delay_s
   _Window
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_cursor
       _lcd_command
         _lcd_raw_send
     _lcd_print
       _lcd_print_ch
         _lcd_raw_send
   _delay_s
   _lcd_clear
     _lcd_command
       _lcd_raw_send
   _lcd_cursor
     _lcd_command
       _lcd_raw_send
   _lcd_display_value
     ___awdiv
     ___awmod
     _lcd_print_ch
       _lcd_raw_send
   _lcd_print
     _lcd_print_ch
       _lcd_raw_send
   _lcd_start
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_command
       _lcd_raw_send

 _myIsr (ROOT)
   _Find_Button_Press
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     28      36       1       42.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36      15        0.0%
DATA                 0      0      36       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Mar 01 12:09:20 2017

                ?_lcd_raw_send 0014                   ___awdiv@sign 0019                    __CFG_BORV$3 000000  
                ?_lcd_print_ch 0001                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                    __CFG_OSC$HS 000000  
                          l150 073C                            l152 074C                            l147 072C  
                          l157 079E                            l159 07A4                            l192 0DC8  
                          l193 0DCA                            l891 0D2E                            l885 0D22  
                          l895 0D42                            l887 0D26                            l897 0D44  
                 __CFG_CPB$OFF 000000                            u505 0882                   __CFG_CPD$OFF 000000  
                          u515 089A                            u516 089C                            u525 08BC  
                          u526 08BE                            u485 0848                            u805 0798  
                          u830 07DC                            u495 0864                            u850 0808  
                          u907 089E                            u917 08A6                            u845 07DE  
                          u790 0796                            u927 08AE                            u937 090E  
                          u865 080A                            u947 0916                            u957 091E  
                          u877 0CA8                            u967 0D34                            u887 0D8C  
                          u897 0DA2           __size_of_WriteTimer0 0012                   ___awmod@sign 0019  
                          prod 000FF3                            wreg 000FE8                    lcd_cursor@x 001A  
                  lcd_cursor@y 0019                   __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000  
                         l1231 0DDA                           l1311 0BAC                           l1303 0B92  
                         l1243 0C74                           l1323 0BD8                           l1315 0BC0  
                         l1307 0BA0                           l1261 0A94                           l1309 0BA8  
                         l1333 0CB4                           l1239 0C4E                           l1271 0AB6  
                         l1255 0A84                           l1319 0BCA                           l1343 0CD8  
                         l1337 0CBC                           l1267 0AAA                           l1283 0ADC  
                         l1443 0722                           l1269 0AB2                           l1461 075C  
                         l1287 0AEA                           l1279 0AD2                           l1463 076C  
                         l1481 07E4                           l1299 0B86                           l1491 0822  
                         l1489 0812                           STR_1 06B2                           STR_2 06A6  
                         _LATC 000F8B                           i2l71 0B32                           _main 06BC  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 0037         __size_ofi2_WriteTimer0 0012                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 0016  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                 ??_lcd_raw_send 0015  
                 ___param_bank 000010               main@Actual_Value 0023                __end_of_Initial 0D80  
               ??_lcd_print_ch 0018                  lcd_command@in 0018                          ?_main 0001  
              __end_of___awdiv 0AF4                __end_of___awmod 0BE2                          _T0CON 000FD5  
              ___awdiv@divisor 0016                          i2l133 09AA                ___awdiv@counter 0018  
                        _TMR0H 000FD7                          _TMR0L 000FD6                          _PORTB 000F81  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                __CFG_PWRT$OFF 000000                __end_of_delay_s 0D4E                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000  
               __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000  
               __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
                        _count 0034                          _myIsr 0008                __end_of_msg_ary 06A6  
               __pbitbssCOMRAM 01B0                          tablat 000FF5                          status 000FD8  
              __initialization 0CDE                   __end_of_main 082A                         ??_main 0021  
                i2_WriteTimer0 0DFA                  __activetblptr 000002                 main@Temp_Value 0024  
                       _ADCON0 000FC2                         _ADCON1 000FC1                         _ADRESH 000FC4  
                       ?_myIsr 0001               ___awdiv@dividend 0014                         i2l1021 0B0A  
                       i2l1031 0B26                         i2l1015 0AF6                         i2l1037 0B44  
                       i2l1029 0B20                         i2l1039 0B56                         i2l1413 0982  
                   _OpenTimer0 0DAE                      ??_Initial 0018                 __CFG_XINST$OFF 000000  
                lcd_print@mess 0019                         _Tick_E 01B0               __end_of_lcd_init 0606  
         __size_of_lcd_command 000E                         _Window 0BE2                      ??___awdiv 0018  
               __CFG_STVREN$ON 000000                      ??___awmod 0018               OpenTimer0@config 0014  
             ___awdiv@quotient 001A                ___awmod@divisor 0016                      ??_delay_s 0014  
               ?i2_WriteTimer0 0001                ___awmod@counter 0018                   __pdataCOMRAM 0029  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8           __end_of_lcd_raw_send 0926           __end_of_lcd_print_ch 0E1A  
                   __accesstop 0080        __end_of__initialization 0D0C                __CFG_PBADEN$OFF 000000  
                ___rparam_used 000001                 __pcstackCOMRAM 0001                  __end_of_myIsr 09E6  
           __size_of_lcd_clear 002E             __size_of_lcd_print 0054             __size_of_lcd_start 0042  
                      ??_myIsr 0005                    ?_OpenTimer0 0001                 lcd_raw_send@RS 0014  
               lcd_raw_send@in 0017                        ?_Window 0001          lcd_display_value@tens 001D  
              ??i2_WriteTimer0 0003               WriteTimer0@timer 0016                  ??_WriteTimer0 0016  
            main@Desired_Value 0022                     _lcd_cursor 0DCE                        i2u73_40 0992  
                      i2u73_46 0994            i2WriteTimer0@timer0 0001                        _Initial 0D4E  
                      __Hparam 0000                        __Lparam 0000              __end_of_lcd_clear 0DAE  
  Find_Button_Press@Temp_Press 0032                __size_of_Window 0066              __end_of_lcd_print 0C9C  
            __end_of_lcd_start 0CDE                 lcd_print_ch@in 0018                        ___awdiv 0A70  
                      ___awmod 0B72                   __psmallconst 0600                        __pcinit 0CDE  
                      _delay_s 0D1A                        __ramtop 0600            __size_of_OpenTimer0 0020  
                      __ptext0 06BC                        __ptext1 0C9C                        __ptext2 09E6  
                      __ptext3 0B72                        __ptext4 0A70                        __ptext5 0BE2  
                      __ptext6 0C48                        __ptext7 0E0C                        __ptext8 0DCE  
                      __ptext9 0D80                      _T0CONbits 000FD5          __size_of_lcd_raw_send 00FC  
             ___awmod@dividend 0014                        _msg_ary 0606            __end_of_WriteTimer0 0DFA  
        __size_of_lcd_print_ch 000E                        _problem 002C                        _startup 002E  
               __pintcode_body 0926           end_of_initialization 0D0C                  __Lmediumconst 0000  
                      int_func 0926              _Find_Button_Press 0AF4             ?_Find_Button_Press 0001  
                      postdec1 000FE5                        postinc0 000FEE                   _lcd_raw_send 082A  
          ??_Find_Button_Press 0001                   _lcd_print_ch 0E0C                      _PORTCbits 000F82  
                  ?_lcd_cursor 0019      __end_of_Find_Button_Press 0B72                  ??_lcd_command 0018  
                   lcd_print@i 001D                     main@motor1 0026                     lcd_start@i 001B  
            _lcd_display_value 09E6                 __end_of_Window 0C48             ?_lcd_display_value 0001  
                __pidataCOMRAM 0E28                    _WriteTimer0 0DE8            ??_lcd_display_value 001C  
          start_initialization 0CDE                   _Button_Press 0033                   ??_OpenTimer0 0014  
    __end_of_lcd_display_value 0A70                       ??_Window 001E            __size_of_lcd_cursor 001A  
          __end_of_lcd_command 0E28               __CFG_LPT1OSC$OFF 000000             __end_of_OpenTimer0 0DCE  
                  __pbssCOMRAM 0030                      Window@num 0020     __size_of_Find_Button_Press 007E  
                     ?_Initial 0001              __CFG_CCP2MX$PORTC 000000                      __pintcode 0008  
                     ?___awdiv 0014                       ?___awmod 0014                      _lcd_clear 0D80  
                     ?_delay_s 0001          __end_ofi2_WriteTimer0 0E0C                      _lcd_print 0C48  
       lcd_display_value@hunds 001C                      _lcd_start 0C9C         lcd_display_value@value 001F  
       lcd_display_value@units 001E                    __smallconst 0600              WriteTimer0@timer0 0014  
           i2WriteTimer0@timer 0003                 __size_of_myIsr 09DE                       _LATDbits 000F8C  
                  _lcd_command 0E1A     __size_of_lcd_display_value 008A               main@my_mch_state 0025  
             __CFG_WDTPS$32768 000000                      main@F4354 0029                     ?_lcd_clear 0001  
                   ?_lcd_print 0019                     ?_lcd_start 0001                     _ADCON0bits 000FC2  
                 ??_lcd_cursor 001A                      copy_data0 0D00                       __Hrparam 0000  
             __size_of_Initial 0032                       __Lrparam 0000             __CFG_BOREN$SBORDIS 000000  
           __end_of_lcd_cursor 0DE8               __size_of___awdiv 0084               __size_of___awmod 0070  
                 ?_WriteTimer0 0014               __size_of_delay_s 0034                       __ptext10 0E1A  
                     __ptext11 082A                       __ptext12 0D4E                       __ptext13 0D1A  
                     __ptext14 0DE8                       __ptext15 0DAE                       __ptext17 0DFA  
                     __ptext18 0AF4                       _lcd_init 0601                       _count_hb 0035  
                __size_of_main 016E                       delay_s@i 0017                       delay_s@j 0016  
                     int$flags 0037                    ??_lcd_clear 0019                    delay_s@secs 0015  
                  ??_lcd_print 001B                    ??_lcd_start 001A                     _INTCONbits 000FF2  
                     intlevel2 0000  Find_Button_Press@Button_Count 0030  Find_Button_Press@Button_State 0031  
                 ?_lcd_command 0001  
